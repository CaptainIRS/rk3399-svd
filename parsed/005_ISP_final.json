[
  {
    "type": "group",
    "registers": [
      {
        "type": "register",
        "name": "VI_CCL",
        "offset": "0x0",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "vi_ccl_dis",
            "bit_range": "2",
            "attr": "rw",
            "reset": "CALC",
            "description": "Clock Control Logic disable\n0: processing/cfg-clocks for all ISP sub modules\nenabled\n1: processing/cfg-clocks for all ISP sub modules\ndisabled w/o access to ID and VI_CCL register"
          },
          {
            "name": "vi_ccl_dis_status",
            "bit_range": "1",
            "attr": "rw",
            "reset": "CALC",
            "description": "Status of vi_ccl[2] bit (copy of vi_ccl[2])"
          }
        ],
        "description": "Clock control register"
      },
      {
        "type": "register",
        "name": "VI_ICCL",
        "offset": "0x10",
        "size": "32",
        "reset": "0x00001F7B",
        "bit_ranges": [
          {
            "name": "reserved",
            "bit_range": "12",
            "attr": "rw",
            "reset": "CALC",
            "description": "reserved\n\n"
          },
          {
            "name": "vi_mipi_clk_enable",
            "bit_range": "11",
            "attr": "rw",
            "reset": "CALC",
            "description": "MIPI interface clock\nenable\n1: processing mode\n0: power safe\n"
          },
          {
            "name": "vi_smia_clk_enable",
            "bit_range": "10",
            "attr": "rw",
            "reset": "CALC",
            "description": "SMIA interface clock enable\n1: processing mode\n0: power safe"
          },
          {
            "name": "vi_simp_clk_enable",
            "bit_range": "9",
            "attr": "rw",
            "reset": "CALC",
            "description": "Superimpose clock enable\n1: processing mode\n0: power safe"
          },
          {
            "name": "vi_ie_clk_enable",
            "bit_range": "8",
            "attr": "rw",
            "reset": "CALC",
            "description": "Image effect clock enable\n1: processing mode\n0: power safe"
          },
          {
            "name": "vi_mi_clk_enable",
            "bit_range": "6",
            "attr": "rw",
            "reset": "CALC",
            "description": "memory interface clock enable\n1: processing mode\n0: power safe"
          },
          {
            "name": "vi_jpeg_clk_enable",
            "bit_range": "5",
            "attr": "rw",
            "reset": "CALC",
            "description": "JPEG encoder clock enable\n1: processing mode\n0: power safe"
          },
          {
            "name": "vi_srsz_clk_enable",
            "bit_range": "4",
            "attr": "rw",
            "reset": "CALC",
            "description": "self picture resize clock enable\n1: processing mode\n0: power safe"
          },
          {
            "name": "vi_mrsz_clk_enable",
            "bit_range": "3",
            "attr": "rw",
            "reset": "CALC",
            "description": "main picture resize clock enable\n1: processing mode\n0: power safe"
          },
          {
            "name": "vi_cp_clk_enable",
            "bit_range": "1",
            "attr": "rw",
            "reset": "CALC",
            "description": "color processing clock enable\n1: processing mode\n0: power safe"
          },
          {
            "name": "vi_isp_clk_enable",
            "bit_range": "0",
            "attr": "rw",
            "reset": "CALC",
            "description": "isp processing clock enable\n1: processing mode\n0: power safe\n"
          }
        ],
        "description": "Internal clock control register"
      },
      {
        "type": "register",
        "name": "VI_IRCL",
        "offset": "0x14",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "reserved",
            "bit_range": "12",
            "attr": "rw",
            "reset": "CALC",
            "description": "reserved"
          },
          {
            "name": "vi_mipi_soft_rst",
            "bit_range": "11",
            "attr": "rw",
            "reset": "CALC",
            "description": "MIPI Interface software\nreset\n0: processing mode\n1: reset state\n"
          },
          {
            "name": "vi_smia_soft_rst",
            "bit_range": "10",
            "attr": "rw",
            "reset": "CALC",
            "description": "SMIA Interface software reset\n0: processing mode\n1: reset state"
          },
          {
            "name": "vi_simp_soft_rst",
            "bit_range": "9",
            "attr": "rw",
            "reset": "CALC",
            "description": "Superimpose software reset\n0: processing mode\n1: reset state"
          },
          {
            "name": "vi_ie_soft_rst",
            "bit_range": "8",
            "attr": "rw",
            "reset": "CALC",
            "description": "Image effect software reset\n0: processing mode\n1: reset state"
          },
          {
            "name": "vi_ISP_rst",
            "bit_range": "7",
            "attr": "rw",
            "reset": "CALC",
            "description": "hardware reset of entire ISP\n0: processing mode\n1: reset state"
          },
          {
            "name": "vi_mi_soft_rst",
            "bit_range": "6",
            "attr": "rw",
            "reset": "CALC",
            "description": "memory interface software reset\n0: processing mode\n1: reset state"
          },
          {
            "name": "vi_jpeg_soft_rst",
            "bit_range": "5",
            "attr": "rw",
            "reset": "CALC",
            "description": "JPEG encoder software reset\n0: processing mode\n1: reset state"
          },
          {
            "name": "vi_srsz_soft_rst",
            "bit_range": "4",
            "attr": "rw",
            "reset": "CALC",
            "description": "Self-picture resize software reset\n0: processing mode\n1: reset state"
          },
          {
            "name": "vi_mrsz_soft_rst",
            "bit_range": "3",
            "attr": "rw",
            "reset": "CALC",
            "description": "Main-picture resize software reset\n0: processing mode\n1: reset state"
          },
          {
            "name": "vi_ycs_soft_rst",
            "bit_range": "2",
            "attr": "rw",
            "reset": "CALC",
            "description": "y/c splitter software reset\n0: processing mode\n1: reset state"
          },
          {
            "name": "vi_cp_soft_rst",
            "bit_range": "1",
            "attr": "rw",
            "reset": "CALC",
            "description": "color processing software reset\n0: processing mode\n1: reset state\n\n"
          },
          {
            "name": "vi_isp_soft_rst",
            "bit_range": "0",
            "attr": "rw",
            "reset": "CALC",
            "description": "isp software reset\n0: processing mode\n1: reset state\n"
          }
        ],
        "description": "Internal reset control register"
      },
      {
        "type": "register",
        "name": "VI_DPCL",
        "offset": "0x18",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "if_select",
            "bit_range": "9:8",
            "attr": "rw",
            "reset": "CALC",
            "description": "selects input interface\n0: parallel interface\n1: SMIA-interface\n2: MIPI1-interface\n3: reserved"
          },
          {
            "name": "vi_mp_mux",
            "bit_range": "1:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "data path selector for main path\n00: data from DMA read port to JPEG\nencoder\n01: data from main resize to MI,\nuncompressed\n10: data from main resize to JPEG encoder"
          }
        ],
        "description": "Data path control register"
      },
      {
        "type": "register",
        "name": "IMG_EFF_CTRL",
        "offset": "0x200",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "full_range",
            "bit_range": "5",
            "attr": "rw",
            "reset": "CALC",
            "description": "'0': pixel value range according to BT.601\n'1': YCbCr full range 0...255\n"
          },
          {
            "name": "cfg_upd",
            "bit_range": "4",
            "attr": "rw",
            "reset": "CALC",
            "description": "write '0': nothing happens\nwrite '1': update shadow registers read: always '0'"
          },
          {
            "name": "effect_mode",
            "bit_range": "3:1",
            "attr": "rw",
            "reset": "CALC",
            "description": "effect mode\n000: black & white effect (grayscale) 001: negative\n010: sepia effect\n011: color selection effect 100: emboss effect\n101: sketch effect\n110: sharpen effect\n111: reserved"
          },
          {
            "name": "bypass_mode",
            "bit_range": "0",
            "attr": "rw",
            "reset": "CALC",
            "description": "bypass mode\n1: processing is activated\n0: processing is deactivated, bypass mode is selected"
          }
        ],
        "description": "Global control register\nNote: full_range for image effects is supported in ISP M5_v6, M5_v7 only \n\n"
      },
      {
        "type": "register",
        "name": "IMG_EFF_COLOR_SEL",
        "offset": "0x204",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "color_threshold",
            "bit_range": "15:8",
            "attr": "rw",
            "reset": "CALC",
            "description": "Threshold value of the RGB colors for the color\nselection effect."
          },
          {
            "name": "color_selection",
            "bit_range": "2:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Defining the maintained color: 000: red green and\nblue\n001: blue\n010: green\n011: green and blue 100: red\n101: red and blue 110: red and green\n111: red green and blue"
          }
        ],
        "description": "Color selection register (for color selection effect)"
      },
      {
        "type": "register",
        "name": "IMG_EFF_MAT_1",
        "offset": "0x208",
        "size": "32",
        "reset": "0x00008089",
        "bit_ranges": [
          {
            "name": "emb_coef_21_en",
            "bit_range": "15",
            "attr": "rw",
            "reset": "CALC",
            "description": "0: entry not used (coefficient is zero)\n1: entry used"
          },
          {
            "name": "emb_coef_21",
            "bit_range": "14:12",
            "attr": "rw",
            "reset": "CALC",
            "description": "second line, left entry of 3x3 emboss effect matrix, 2 bit\nfor coefficient, one sign bit."
          },
          {
            "name": "emb_coef_13_en",
            "bit_range": "11",
            "attr": "rw",
            "reset": "CALC",
            "description": "0: entry not used (coefficient is zero)\n1: entry used\n"
          },
          {
            "name": "emb_coef_13",
            "bit_range": "10:8",
            "attr": "rw",
            "reset": "CALC",
            "description": "first line, right entry of 3x3 emboss effect matrix, 2 bit\nfor coefficient, one sign bit."
          },
          {
            "name": "emb_coef_12_en",
            "bit_range": "7",
            "attr": "rw",
            "reset": "CALC",
            "description": "0: entry not used (coefficient is zero)\n1: entry used"
          },
          {
            "name": "emb_coef_12",
            "bit_range": "6:4",
            "attr": "rw",
            "reset": "CALC",
            "description": "first line, middle entry of 3x3 emboss effect matrix, 2\nbit for coefficient, one sign bit."
          },
          {
            "name": "emb_coef_11_en",
            "bit_range": "3",
            "attr": "rw",
            "reset": "CALC",
            "description": "0: entry not used (coefficient is zero)\n1: entry used\n"
          },
          {
            "name": "emb_coef_11",
            "bit_range": "2:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "first line, left entry of 3x3 emboss effect\nmatrix, 2 bit for coefficient, one sign bit."
          }
        ],
        "description": "3x3 matrix coefficients for emboss effect (1)\nNote: possible values for coefficients: 000 (1), 001 (2), 010 (4), 011 (8),100 (-1), 101 \n(-2), 110 (-4), 111 (-8) \n\n"
      },
      {
        "type": "register",
        "name": "IMG_EFF_MAT_2",
        "offset": "0x20c",
        "size": "32",
        "reset": "0x0000C0C0",
        "bit_ranges": [
          {
            "name": "emb_coef_32_en",
            "bit_range": "15",
            "attr": "rw",
            "reset": "CALC",
            "description": "0: entry not used (coefficient is zero)\n1: entry used"
          },
          {
            "name": "emb_coef_32",
            "bit_range": "14:12",
            "attr": "rw",
            "reset": "CALC",
            "description": "third line, middle entry of 3x3 emboss effect matrix, 2\nbit for coefficient, one sign bit."
          },
          {
            "name": "emb_coef_31_en",
            "bit_range": "11",
            "attr": "rw",
            "reset": "CALC",
            "description": "0: entry not used (coefficient is zero)\n1: entry used"
          },
          {
            "name": "emb_coef_31",
            "bit_range": "10:8",
            "attr": "rw",
            "reset": "CALC",
            "description": "third line, left entry of 3x3 emboss effect matrix, 2 bit\nfor coefficient, one sign bit."
          },
          {
            "name": "emb_coef_23_en",
            "bit_range": "7",
            "attr": "rw",
            "reset": "CALC",
            "description": "0: entry not used (coefficient is zero)\n1: entry used"
          },
          {
            "name": "emb_coef_23",
            "bit_range": "6:4",
            "attr": "rw",
            "reset": "CALC",
            "description": "second line, right entry of 3x3 emboss effect matrix, 2\nbit for coefficient, one sign bit."
          },
          {
            "name": "emb_coef_22_en",
            "bit_range": "3",
            "attr": "rw",
            "reset": "CALC",
            "description": "0: entry not used (coefficient is zero)\n1: entry used"
          },
          {
            "name": "emb_coef_22",
            "bit_range": "2:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "second line, middle entry of 3x3 emboss effect matrix, 2\nbit for coefficient, one sign bit.\n"
          }
        ],
        "description": "3x3 matrix coefficients for emboss effect (2)"
      },
      {
        "type": "register",
        "name": "IMG_EFF_MAT_3",
        "offset": "0x210",
        "size": "32",
        "reset": "0x0000CCCD",
        "bit_ranges": [
          {
            "name": "sket_coef_13_en",
            "bit_range": "15",
            "attr": "rw",
            "reset": "CALC",
            "description": "0: entry not used (coefficient is zero)\n1: entry used"
          },
          {
            "name": "sket_coef_13",
            "bit_range": "14:12",
            "attr": "rw",
            "reset": "CALC",
            "description": "first line, right entry of 3x3 sketch effect matrix, 2 bit\nfor coefficient, one sign bit."
          },
          {
            "name": "sket_coef_12_en",
            "bit_range": "11",
            "attr": "rw",
            "reset": "CALC",
            "description": "0: entry not used (coefficient is zero)\n1: entry used"
          },
          {
            "name": "sket_coef_12",
            "bit_range": "10:8",
            "attr": "rw",
            "reset": "CALC",
            "description": "first line, middle entry of 3x3 sketch effect matrix, 2\nbit for coefficient, one sign bit."
          },
          {
            "name": "sket_coef_11_en",
            "bit_range": "7",
            "attr": "rw",
            "reset": "CALC",
            "description": "0: entry not used (coefficient is zero)\n1: entry used"
          },
          {
            "name": "sket_coef_11",
            "bit_range": "6:4",
            "attr": "rw",
            "reset": "CALC",
            "description": "first line, left entry of 3x3 sketch effect matrix, 2 bit for\ncoefficient, one sign bit."
          },
          {
            "name": "emb_coef_33_en",
            "bit_range": "3",
            "attr": "rw",
            "reset": "CALC",
            "description": "0: entry not used (coefficient is zero)\n1: entry used"
          },
          {
            "name": "emb_coef_33",
            "bit_range": "2:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "third line, right entry of 3x3 emboss effect matrix, 2\nbit for coefficient, one sign bit."
          }
        ],
        "description": "3x3 matrix coefficients for emboss(3) effect / \n\nsketch/sharpen(1) effect\nNote: possible values for \n\ncoefficients: 000 (1), 001 (2), 010 \n\n(4), 011 (8), \n100 (-1), 101 (-2), 110 (-4), 111 (-8) \n\n \n"
      },
      {
        "type": "register",
        "name": "IMG_EFF_MAT_4",
        "offset": "0x214",
        "size": "32",
        "reset": "0x0000CCBC",
        "bit_ranges": [
          {
            "name": "sket_coef_31_en",
            "bit_range": "15",
            "attr": "rw",
            "reset": "CALC",
            "description": "0: entry not used (coefficient is\nzero) 1: entry used"
          },
          {
            "name": "sket_coef_31",
            "bit_range": "14:12",
            "attr": "rw",
            "reset": "CALC",
            "description": "third line, left entry of 3x3 sketch effect matrix, 2\nbit for coefficient, one sign bit.\n"
          },
          {
            "name": "sket_coef_23_en",
            "bit_range": "11",
            "attr": "rw",
            "reset": "CALC",
            "description": "0: entry not used (coefficient is zero)\n1: entry used"
          },
          {
            "name": "sket_coef_23",
            "bit_range": "10:8",
            "attr": "rw",
            "reset": "CALC",
            "description": "second line, right entry of 3x3 sketch effect matrix, 2 bit\nfor coefficient, one sign bit."
          },
          {
            "name": "sket_coef_22_en",
            "bit_range": "7",
            "attr": "rw",
            "reset": "CALC",
            "description": "0: entry not used (coefficient is zero)\n1: entry used"
          },
          {
            "name": "sket_coef_22",
            "bit_range": "6:4",
            "attr": "rw",
            "reset": "CALC",
            "description": "second line, middle entry of 3x3 sketch effect matrix, 2 bit\nfor coefficient, one sign bit."
          },
          {
            "name": "sket_coef_21_en",
            "bit_range": "3",
            "attr": "rw",
            "reset": "CALC",
            "description": "0: entry not used (coefficient is zero)\n1: entry used"
          },
          {
            "name": "sket_coef_21",
            "bit_range": "2:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "second line, left entry of 3x3 sketch effect matrix, 2 bit for\ncoefficient, one sign bit."
          }
        ],
        "description": "3x3 matrix coefficients for sketch/sharpen effect (2)\nNote: possible values for coefficients: 000 (1), 001 (2), 010 (4), 011 (8), \n100 (-1), 101 (-2), 110 (-4), 111 (-8) \n\n \n"
      },
      {
        "type": "register",
        "name": "IMG_EFF_MAT_5",
        "offset": "0x218",
        "size": "32",
        "reset": "0x000000CC",
        "bit_ranges": [
          {
            "name": "sket_coef_33_en",
            "bit_range": "7",
            "attr": "rw",
            "reset": "CALC",
            "description": "0: entry not used (coefficient is zero)\n1: entry used"
          },
          {
            "name": "sket_coef_33",
            "bit_range": "6:4",
            "attr": "rw",
            "reset": "CALC",
            "description": "third line, right entry of 3x3 sketch effect matrix, 2 bit\nfor coefficient, one sign bit."
          },
          {
            "name": "sket_coef_32_en",
            "bit_range": "3",
            "attr": "rw",
            "reset": "CALC",
            "description": "0: entry not used (coefficient is zero)\n1: entry used"
          },
          {
            "name": "sket_coef_32",
            "bit_range": "2:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "third line, middle entry of 3x3 sketch effect matrix, 2\nbit for coefficient, one sign bit."
          }
        ],
        "description": "3x3 matrix coefficients for sketch/sharpen effect (3)\nNote: possible values for coefficients: 000 (1), 001 (2), 010 (4), 011 (8), \n100 (-1), 101 (-2), 110 (-4), 111 (-8) \n\n"
      },
      {
        "type": "register",
        "name": "IMG_EFF_TINT",
        "offset": "0x21c",
        "size": "32",
        "reset": "0x0000880C",
        "bit_ranges": [
          {
            "name": "incr_cr",
            "bit_range": "15:8",
            "attr": "rw",
            "reset": "CALC",
            "description": "Cr increment value of a tint. 7 bits for value, 1 sign bit.\nDefault tint is R=162 G=138 B=101, which is used\nfor the sepia effect. See below for the calculation of the\nentries."
          },
          {
            "name": "incr_cb",
            "bit_range": "7:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Cb increment value of a tint. 7 bits for value, 1 sign bit.\nDefault tint is R=162 G=138 B=101, which is used\nfor the sepia effect. See below for the calculation of the\nentries."
          }
        ],
        "description": "Chrominance increment values of a tint (used for sepia effect)\nNote: Calculation process of incr_cr and incr_cb: \ntint values given in RGB format: R G B \nconverted to Cb and Cr: Cb = -0.148*R - 0.291*G + 0.439*B + 128 Cr = 0.439*R - \n\n0.368*G - 0.071*B + 128 \ncalculating of the increments inc_Cb = (128 \u2013 Cb)/110 inc_Cr = (128 \u2013 Cr)/110 \nregister entry of the increments with an accuracy of 1/64 incr_cb = inc_Cb * 64 \nincr_cr = inc_Cr * 64 \n\n \n"
      },
      {
        "type": "register",
        "name": "IMG_EFF_CTRL_SHD",
        "offset": "0x220",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "effect_mode_shd",
            "bit_range": "3:1",
            "attr": "r",
            "reset": "CALC",
            "description": "effect mode\n000: black & white effect (grayscale) 001: negative\n010: sepia effect\n011: color selection effect 100: emboss effect\n101: sketch effect\n110: sharpen effect\n111: reserved"
          }
        ],
        "description": "Shadow register for control register"
      },
      {
        "type": "register",
        "name": "IMG_EFF_SHARPEN",
        "offset": "0x224",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "sharp_factor",
            "bit_range": "13:8",
            "attr": "rw",
            "reset": "CALC",
            "description": "6Bit Factor for sharpening function. Value range is\nfrom 0x0 to 0x3F. High value means strong sharpening.\nThe resulting factors are for example:\n0x00 = 0 (no sharpen effect like bypass) 0x01 = 0.25\n0x02 = 0.5\n0x03 = 0.75\n0x04 = 1.0\n0x05 = 1.25\n0x06 = 1.5\n0x08 = 2.0\n0x0A = 2.5\n0x0C = 3.0\n0x10 = 4.0\n0x18 = 6.0\n0x20 = 8.0\n0x30 = 12.0\n0x3F = 15.75"
          },
          {
            "name": "coring_thr",
            "bit_range": "7:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Threshold for coring function. This value is used to\navoid amplifying noise too much by suppressing\nsharpening for small gradients. Higher value means less\nsharpening for smooth edges. Threshold zero means no\ncoring, so all gradients are treated the same. Threshold\n255 means nearly no sharpening. An absolute value for\nthe highpass signal is defined here. The highpass signal is\ntruncated at the defined level."
          }
        ],
        "description": "Factor and threshold for sharpen effect\nNote: For the sharpening effect the convolution mask must be set to the values [-1 -1 -1; \n-1 8 -1; -1 -1 -1]. \n\nThe convolution mask for sharpening is defined by the values sket_coef_xx in registers \nIMG_EFF_MAT_3 through IMG_EFF_MAT_5. Sketch effect and sharpening effect share the \nsame mask registers. \n\n \n"
      },
      {
        "type": "register",
        "name": "SUPER_IMP_CTRL",
        "offset": "0x300",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "transparency_mode",
            "bit_range": "2",
            "attr": "rw",
            "reset": "CALC",
            "description": "transparency mode\n1: transparency mode disabled\n0: transparency mode enabled"
          },
          {
            "name": "ref_image",
            "bit_range": "1",
            "attr": "rw",
            "reset": "CALC",
            "description": "Define the reference image\n1: superimpose bitmap from main memory\n0: image from the Image Effect module\nNote: the reference image defines the size of the\noutput image"
          },
          {
            "name": "bypass_mode",
            "bit_range": "0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Bypass mode\n0: bypass mode\n1: normal operation"
          }
        ],
        "description": "Global control register\nNote: in the bypass mode the data stream from Image \n\nEffect is transmitted to MUX module without overlaying \n\n \n"
      },
      {
        "type": "register",
        "name": "SUPER_IMP_OFFSET_X",
        "offset": "0x304",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "offset_x",
            "bit_range": "13:1",
            "attr": "rw",
            "reset": "CALC",
            "description": "Offset X\nnote: the bit 0 is don\u201ft care (write 1 doesn\u201ft have\nany effect, the read access always gives \u201e0\u201f)\nnote: the offset_x is positive and refers to the reference image"
          }
        ],
        "description": "Offset x register"
      },
      {
        "type": "register",
        "name": "SUPER_IMP_OFFSET_Y",
        "offset": "0x308",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "offset_y",
            "bit_range": "13:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Offset Y"
          }
        ],
        "description": "Offset y register\nNote: the offset_y is positive and refers to the \n\nreference image \n\n"
      },
      {
        "type": "register",
        "name": "SUPER_IMP_COLOR_Y",
        "offset": "0x30c",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [],
        "description": "Y component of transparent key color"
      },
      {
        "type": "register",
        "name": "SUPER_IMP_COLOR_CB",
        "offset": "0x310",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [],
        "description": "Cb component of transparent key color"
      },
      {
        "type": "register",
        "name": "SUPER_IMP_COLOR_CR",
        "offset": "0x314",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [],
        "description": "Cr component of transparent key color"
      },
      {
        "type": "register",
        "name": "ISP_CTRL",
        "offset": "0x400",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "CTRL_RESERVED_1",
            "bit_range": "16",
            "attr": "rw",
            "reset": "CALC",
            "description": "reserved"
          },
          {
            "name": "CTRL_RESERVED_2",
            "bit_range": "15",
            "attr": "rw",
            "reset": "CALC",
            "description": "reserved"
          },
          {
            "name": "ISP_CSM_C_RANGE",
            "bit_range": "14",
            "attr": "rw",
            "reset": "CALC",
            "description": "Color Space Matrix chrominance clipping range for ISP\noutput\n0: CbCr range 64..960 (16..240) according to ITU-R\nBT.601 standard\n1: full UV range 0..1023 ( 0..255)\nNumbers in brackets are for 8 bit resolution.\nThis bit also configures the YCbCr sequence align block\naccordingly."
          },
          {
            "name": "ISP_CSM_Y_RANGE",
            "bit_range": "13",
            "attr": "rw",
            "reset": "CALC",
            "description": "Color Space Matrix luminance clipping range for ISP\noutput\n0: Y range 64..940 (16..235) according to ITU-R BT.601\nstandard\n1: full Y range 0..1023 ( 0..255)\nNumbers in brackets are for 8 bit resolution.\nThis bit also configures the YCbCr sequence align block\naccordingly."
          },
          {
            "name": "ISP_FLASH_MODE",
            "bit_range": "12",
            "attr": "rw",
            "reset": "CALC",
            "description": "0: sensor interface works independently from flash\ncontrol unit\n1: one frame is captured when signaled by flash control\nunit"
          },
          {
            "name": "ISP_GEN_CFG_UPD",
            "bit_range": "10",
            "attr": "rw",
            "reset": "CALC",
            "description": "1: generate frame synchronous configuration signal at\nthe output of ISP for shadow registers of the following\nprocessing modules, write only"
          },
          {
            "name": "ISP_CFG_UPD",
            "bit_range": "9",
            "attr": "rw",
            "reset": "CALC",
            "description": "1: immediately configure (update) shadow registers,\nwrite only"
          },
          {
            "name": "ISP_AWB_ENABLE",
            "bit_range": "7",
            "attr": "rw",
            "reset": "CALC",
            "description": "auto white balance ON/OFF"
          },
          {
            "name": "ISP_GAMMA_IN_ENABLE",
            "bit_range": "6",
            "attr": "rw",
            "reset": "CALC",
            "description": "Sensor De-gamma ON/OFF"
          },
          {
            "name": "ISP_INFORM_ENABLE",
            "bit_range": "4",
            "attr": "rw",
            "reset": "CALC",
            "description": "1: input formatter enabled 0: input formatter disabled\nThe ISP input formatter is enabled or disabled by this bit\nimmediately, but always starts or stops acquisition frame\nsynchronously.\n"
          },
          {
            "name": "ISP_MODE",
            "bit_range": "3:1",
            "attr": "rw",
            "reset": "CALC",
            "description": "000 - RAW picture with BT.601 sync (ISP bypass) 001\n- ITU-R BT.656 (YUV with embedded sync) 010 - ITU-R BT.601 (YUV input with H and Vsync\nsignals) 011 - Bayer RGB processing with H and Vsync\nsignals\n- data mode (ISP bypass, sync signals interpreted as\ndata enable)\n- Bayer RGB processing with BT.656 synchronization 110 - RAW picture with ITU-R BT.656 synchronization\n(ISP bypass) 111 - reserved\nSide effect:\nIf RAW, BT.601, BT.656, or data mode is selected,\nthe clock of the ISP SRAMs (ISP line buffer, Lens Shading,\nBad Pixel) is switched off. Only in Bayer RGB mode the\nclock to the SRAMs is enabled. This further reduces power\nconsumption."
          },
          {
            "name": "ISP_ENABLE",
            "bit_range": "0",
            "attr": "rw",
            "reset": "CALC",
            "description": "1: ISP data output enabled 0: ISP data output\ndisabled\nControls output formatter frame synchronously, if isp_gen_cfg_upd is used to activate this bit. For\nimmediate update isp_cfg_upd must be used."
          }
        ],
        "description": "global control register\nNote: partly write-only \n\n \n"
      },
      {
        "type": "register",
        "name": "ISP_ACQ_PROP",
        "offset": "0x404",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "DMA_YUV_SELECTION",
            "bit_range": "16",
            "attr": "rw",
            "reset": "CALC",
            "description": "0: use align or conversion data for isp_is input.\n1: use dma yuv read data for isp_is\ninput."
          },
          {
            "name": "DMA_RGB_SELECTION",
            "bit_range": "15",
            "attr": "rw",
            "reset": "CALC",
            "description": "0: use input formatter data for latency fifo.\n1: use dma rgb read data for\nlatency fifo.\n"
          },
          {
            "name": "INPUT_SELECTION",
            "bit_range": "14:12",
            "attr": "rw",
            "reset": "CALC",
            "description": "000 000- 12Bit external Interface\n001- 10Bit Interface, append 2 zeroes as LSBs\n010- 10Bit Interface, append 2 MSBs as LSBs\n011- 8Bit Interface, append 4 zeroes as LSBs\n100- 8Bit Interface, append 4 MSBs as LSBs\n101...111 reserved"
          },
          {
            "name": "FIELD_INV",
            "bit_range": "11",
            "attr": "rw",
            "reset": "CALC",
            "description": "1: swap odd and even fields\n0: do not swap fields"
          },
          {
            "name": "FIELD_SELECTION",
            "bit_range": "10:9",
            "attr": "rw",
            "reset": "CALC",
            "description": "00- sample all fields (don\u201ft care about fields)\n01- sample only even fields\n10- sample only odd fields\n11- reserved"
          },
          {
            "name": "CCIR_SEQ",
            "bit_range": "8:7",
            "attr": "rw",
            "reset": "CALC",
            "description": "00- YCbYCr\n01- YCrYCb\n10- CbYCrY\n11- CrYCbY"
          },
          {
            "name": "CONV_422",
            "bit_range": "6:5",
            "attr": "rw",
            "reset": "CALC",
            "description": "co-sited color subsampling Y0Cb0Cr0 \u2013 Y1\ninterleaved color subsampling Y0Cb0 \u2013 Y1Cr1 (not\nrecommended)\n10- non-cosited color subsampling Y0Cb(0+1)/2 \u2013\nY1Cr(0+1)/2 11- reserved"
          },
          {
            "name": "BAYER_PAT",
            "bit_range": "4:3",
            "attr": "rw",
            "reset": "CALC",
            "description": "color components from sensor, starting with top left\nposition in sampled frame (reprogram with ISP_ACQ_H_OFFS, ISP_ACQ_V_OFFS)\n00- first line: RGRG..., second line: GBGB..., etc.\n01- first line: GRGR..., second line: BGBG..., etc.\n10- first line: GBGB..., second line: RGRG..., etc.\n11- first line: BGBG..., second line: GRGR..., etc.\nThis configuration applies for the black level area after\ncropping by the input formatter."
          },
          {
            "name": "VSYNC_POL",
            "bit_range": "2",
            "attr": "rw",
            "reset": "CALC",
            "description": "vertical sync polarity\n0: high active\n1: low active"
          },
          {
            "name": "HSYNC_POL",
            "bit_range": "1",
            "attr": "rw",
            "reset": "CALC",
            "description": "horizontal sync polarity\n0: high active\n1: low active"
          },
          {
            "name": "SAMPLE_EDGE",
            "bit_range": "0",
            "attr": "rw",
            "reset": "CALC",
            "description": "0- negative edge sampling\n1- positive edge sampling"
          }
        ],
        "description": "ISP acquisition properties"
      },
      {
        "type": "register",
        "name": "ISP_ACQ_H_OFFS",
        "offset": "0x408",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "ACQ_H_OFFS",
            "bit_range": "14:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "horizontal sample offset in 8-bit samples (yuv: 4\nsamples=2pix)\n"
          }
        ],
        "description": "horizontal input offset"
      },
      {
        "type": "register",
        "name": "ISP_ACQ_V_OFFS",
        "offset": "0x40c",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "ACQ_V_OFFS",
            "bit_range": "13:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "vertical sample offset in lines\n"
          }
        ],
        "description": "vertical input offset"
      },
      {
        "type": "register",
        "name": "ISP_ACQ_H_SIZE",
        "offset": "0x410",
        "size": "32",
        "reset": "0x00001000",
        "bit_ranges": [
          {
            "name": "ACQ_H_SIZE",
            "bit_range": "14:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "horizontal sample size in 12-bit samples\nYUV input: 2 samples = 1 pixel, else 1 sample = 1\npixel; So in YUV mode ACQ_H_SIZE must be twice as large\nas horizontal image size\nhorizontal image size must always be even exept in\nraw picture mode; if an odd size is programmed the value\nwill be truncated to even size\n"
          }
        ],
        "description": "horizontal input size"
      },
      {
        "type": "register",
        "name": "ISP_ACQ_V_SIZE",
        "offset": "0x414",
        "size": "32",
        "reset": "0x00000C00",
        "bit_ranges": [
          {
            "name": "ACQ_V_SIZE",
            "bit_range": "13:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "vertical sample size in lines\n"
          }
        ],
        "description": "vertical input size"
      },
      {
        "type": "register",
        "name": "ISP_ACQ_NR_FRAMES",
        "offset": "0x418",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "ACQ_NR_FRAMES",
            "bit_range": "9:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "number of input frames to be sampled ( 0 =\ncontinuous )\n"
          }
        ],
        "description": "Number of frames to be captured"
      },
      {
        "type": "register",
        "name": "ISP_GAMMA_DX_LO",
        "offset": "0x41c",
        "size": "32",
        "reset": "0x44444444",
        "bit_ranges": [
          {
            "name": "GAMMA_DX_8",
            "bit_range": "30:28",
            "attr": "rw",
            "reset": "CALC",
            "description": "gamma curve sample point definition x-axis (input)"
          },
          {
            "name": "GAMMA_DX_7",
            "bit_range": "26:24",
            "attr": "rw",
            "reset": "CALC",
            "description": "gamma curve sample point definition x-axis (input)"
          },
          {
            "name": "GAMMA_DX_6",
            "bit_range": "22:20",
            "attr": "rw",
            "reset": "CALC",
            "description": "gamma curve sample point definition x-axis (input)"
          },
          {
            "name": "GAMMA_DX_5",
            "bit_range": "18:16",
            "attr": "rw",
            "reset": "CALC",
            "description": "gamma curve sample point definition x-axis (input)"
          },
          {
            "name": "GAMMA_DX_4",
            "bit_range": "14:12",
            "attr": "rw",
            "reset": "CALC",
            "description": "gamma curve sample point definition x-axis (input)"
          },
          {
            "name": "GAMMA_DX_3",
            "bit_range": "10:8",
            "attr": "rw",
            "reset": "CALC",
            "description": "gamma curve sample point definition x-axis (input)"
          },
          {
            "name": "GAMMA_DX_2",
            "bit_range": "6:4",
            "attr": "rw",
            "reset": "CALC",
            "description": "gamma curve sample point definition x-axis (input)\n"
          },
          {
            "name": "GAMMA_DX_1",
            "bit_range": "2:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "gamma curve sample point definition x-axis (input)\n"
          }
        ],
        "description": "De-Gamma Curve definition lower x increments (sampling points)"
      },
      {
        "type": "register",
        "name": "ISP_GAMMA_DX_HI",
        "offset": "0x420",
        "size": "32",
        "reset": "0x44444444",
        "bit_ranges": [
          {
            "name": "GAMMA_DX_16",
            "bit_range": "30:28",
            "attr": "rw",
            "reset": "CALC",
            "description": "gamma curve sample point definition x-axis (input)"
          },
          {
            "name": "GAMMA_DX_15",
            "bit_range": "26:24",
            "attr": "rw",
            "reset": "CALC",
            "description": "gamma curve sample point definition x-axis (input)"
          },
          {
            "name": "GAMMA_DX_14",
            "bit_range": "22:20",
            "attr": "rw",
            "reset": "CALC",
            "description": "gamma curve sample point definition x-axis (input)"
          },
          {
            "name": "GAMMA_DX_13",
            "bit_range": "18:16",
            "attr": "rw",
            "reset": "CALC",
            "description": "gamma curve sample point definition x-axis (input)"
          },
          {
            "name": "GAMMA_DX_12",
            "bit_range": "14:12",
            "attr": "rw",
            "reset": "CALC",
            "description": "gamma curve sample point definition x-axis (input)"
          },
          {
            "name": "GAMMA_DX_11",
            "bit_range": "10:8",
            "attr": "rw",
            "reset": "CALC",
            "description": "gamma curve sample point definition x-axis (input)"
          },
          {
            "name": "GAMMA_DX_10",
            "bit_range": "6:4",
            "attr": "rw",
            "reset": "CALC",
            "description": "gamma curve sample point definition x-axis (input)"
          },
          {
            "name": "GAMMA_DX_9",
            "bit_range": "2:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "gamma curve sample point definition x-axis (input)"
          }
        ],
        "description": "De-Gamma Curve definition higher x increments (sampling points)"
      },
      {
        "type": "register",
        "name": "ISP_GAMMA_R_Y",
        "offset": "0x424",
        "size": "32",
        "reset": "0x0",
        "bit_ranges": [
          {
            "name": "GAMMA_R_Y",
            "bit_range": "11:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "gamma curve point definition y-axis (output) for\nred RESTRICTION: each Y must be in the\n+2047/-2048 range compared to its predecessor (so\nthat the difference between successive Y values is\n12-bit signed !)"
          }
        ],
        "description": "De-Gamma Curve definition y red n (n=0..16)\nNote: The reset values define a linear curve which has the same effect as bypass. \n\nReset values are: Y_00 = 0x0000, Y_01 = 0x0100, Y_02 = 0x0200, Y_03 = 0x0300, Y_04 \n\n= 0x0400,Y_05 = 0x0500, Y_06 = 0x0600, Y_07 = 0x0700, Y_08 = 0x0800, Y_09 = \n\n0x0900, Y_10 = 0x0A00, Y_11 = 0x0B00, Y_12 = 0x0C00, Y_13 = 0x0D00, Y_14 = \n\n0x0E00, Y_15 = 0x0F00, Y_16 = 0x0FFF \n\n \n"
      },
      {
        "type": "register",
        "name": "ISP_GAMMA_G_Y",
        "offset": "0x468",
        "size": "32",
        "reset": "0x0",
        "bit_ranges": [
          {
            "name": "GAMMA_G_Y",
            "bit_range": "11:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "gamma curve point definition y-axis (output) for\ngreen RESTRICTION: each Y must be in the +2047/-2048\nrange compared to its predecessor (so that the difference\nbetween successive Y values is 12-bit signed !)"
          }
        ],
        "description": "De-Gamma Curve definition y green n (n=0..16)\nNote: The reset values define a linear curve which has the same effect as bypass. \n\nReset values are: Y_00 = 0x0000, Y_01 = 0x0100, Y_02 = 0x0200, Y_03 = 0x0300, Y_04 \n\n= 0x0400,Y_05 = 0x0500, Y_06 = 0x0600, Y_07 = 0x0700, Y_08 = 0x0800, Y_09 = \n\n0x0900, Y_10 = 0x0A00, Y_11 = 0x0B00, Y_12 = 0x0C00, Y_13 = 0x0D00, Y_14 = \n\n0x0E00, Y_15 = 0x0F00, Y_16 = 0x0FFF \n\n \n"
      },
      {
        "type": "register",
        "name": "ISP_GAMMA_B_Y",
        "offset": "0x4ac",
        "size": "32",
        "reset": "0x0",
        "bit_ranges": [
          {
            "name": "GAMMA_B_Y",
            "bit_range": "11:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "gamma curve point definition y-axis (output) for blue\nRESTRICTION: each Y must be in the +2047/-2048 range\ncompared to its predecessor (so that the difference\nbetween successive Y values is 12-bit signed !)"
          }
        ],
        "description": "De-Gamma Curve definition y blue n (n=0..16)\nNote: The reset values define a linear curve which has the same effect as bypass. \n\nReset values are: Y_00 = 0x0000, Y_01 = 0x0100, Y_02 = 0x0200, Y_03 = 0x0300, Y_04 \n\n= 0x0400, \n\nY_05 = 0x0500, Y_06 = 0x0600, Y_07 = 0x0700, Y_08 = 0x0800, \n\nY_09 = 0x0900, Y_10 = 0x0A00, Y_11 = 0x0B00, Y_12 = 0x0C00, Y_13 = \n\n0x0D00, Y_14 = 0x0E00, Y_15 = 0x0F00, Y_16 = 0x0FFF \n"
      },
      {
        "type": "register",
        "name": "ISP_AWB_PROP",
        "offset": "0x510",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "AWB_MEAS_MODE",
            "bit_range": "31",
            "attr": "rw",
            "reset": "CALC",
            "description": "1: RGB based measurement mode\n0: near white discrimination mode using YCbCr color\nspace"
          },
          {
            "name": "AWB_MAX_EN",
            "bit_range": "2",
            "attr": "rw",
            "reset": "CALC",
            "description": "1: enable Y_MAX\ncompare 0: disable Y_MAX compare\nNot valid in RGB measurement mode."
          },
          {
            "name": "AWB_MODE",
            "bit_range": "1:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "AWB_MODE(1:0):\n11: reserved\n10: measurement of YCbCr means (AWB_MEAS_MODE = 0) or RGB means (AWB_MEAS_MODE = 1)\n01: reserved\n00: no measurement"
          }
        ],
        "description": "Auto white balance properties\nNote: The following conversion matrix is used for calculating the YCbCr values: \n\nY = 16 + 0.2500 R + 0.5000 G + 0.1094 B \nCb = 128 - 0.1406 R - 0.2969 G + 0.4375 B \nCr = 128 + 0.4375 R - 0.3750 G - 0.0625 B \n\n"
      },
      {
        "type": "register",
        "name": "ISP_AWB_H_OFFS",
        "offset": "0x514",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "AWB_H_OFFS",
            "bit_range": "12:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "horizontal window offset in pixel\n"
          }
        ],
        "description": "Auto white balance horizontal offset of measure window"
      },
      {
        "type": "register",
        "name": "ISP_AWB_V_OFFS",
        "offset": "0x518",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "AWB_V_OFFS",
            "bit_range": "12:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "vertical window offset in lines\n"
          }
        ],
        "description": "Auto white balance vertical offset of measure window"
      },
      {
        "type": "register",
        "name": "ISP_AWB_H_SIZE",
        "offset": "0x51c",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "AWB_H_SIZE",
            "bit_range": "13:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "horizontal measurement window size in pixel\n"
          }
        ],
        "description": "Auto white balance horizontal window size"
      },
      {
        "type": "register",
        "name": "ISP_AWB_V_SIZE",
        "offset": "0x520",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "AWB_V_SIZE",
            "bit_range": "13:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "vertical measurement window size in lines"
          }
        ],
        "description": "Auto white balance vertical window size"
      },
      {
        "type": "register",
        "name": "ISP_AWB_FRAMES",
        "offset": "0x524",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "AWB_FRAMES",
            "bit_range": "2:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "number of frames-1 used for mean value calculation\n(value of 0 means 1 frame, value of 7 means 8 frames)\n"
          }
        ],
        "description": "Auto white balance mean value over multiple frames"
      },
      {
        "type": "register",
        "name": "ISP_AWB_REF",
        "offset": "0x528",
        "size": "32",
        "reset": "0x00008080",
        "bit_ranges": [
          {
            "name": "AWB_REF_CR",
            "bit_range": "15:8",
            "attr": "rw",
            "reset": "CALC",
            "description": "MAX_R\nreference Cr value for AWB regulation, target for AWB\nmaximum red value, if RGB measurement mode is\nselected"
          },
          {
            "name": "AWB_REF_CB",
            "bit_range": "7:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "MAX_B\nreference Cb value for AWB regulation, target for AWB\nmaximum blue value, if RGB measurement mode is\nselected\n"
          }
        ],
        "description": "Auto white balance reference Cb/Cr values"
      },
      {
        "type": "register",
        "name": "ISP_AWB_THRESH",
        "offset": "0x52c",
        "size": "32",
        "reset": "0xE9C01010",
        "bit_ranges": [
          {
            "name": "AWB_MAX_Y",
            "bit_range": "31:24",
            "attr": "rw",
            "reset": "CALC",
            "description": "Luminance maximum value, only consider pixels with\nluminance smaller than threshold for the WB\nmeasurement (must be enabled by register AWB_MODE\nbit AWB_MAX_EN). Not valid for RGB measurement mode."
          },
          {
            "name": "AWB_MIN_Y",
            "bit_range": "23:16",
            "attr": "rw",
            "reset": "CALC",
            "description": "MAX_G\nLuminance minimum value, only consider pixels with\nluminance greater than threshold for the WB\nmeasurement\nmaximum green value, if RGB measurement mode is"
          },
          {
            "name": "AWB_MAX_CSUM",
            "bit_range": "15:8",
            "attr": "rw",
            "reset": "CALC",
            "description": "Chrominance sum maximum value, only consider\npixels with Cb+Cr smaller than threshold for WB\nmeasurements"
          },
          {
            "name": "AWB_MIN_C",
            "bit_range": "7:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Chrominance minimum value, only consider pixels\nwith Cb/Cr each greater than threshold value for WB\nmeasurements"
          }
        ],
        "description": "Auto white balance threshold values"
      },
      {
        "type": "register",
        "name": "ISP_AWB_GAIN_G",
        "offset": "0x538",
        "size": "32",
        "reset": "0x01000100",
        "bit_ranges": [
          {
            "name": "AWB_GAIN_GR",
            "bit_range": "25:16",
            "attr": "rw",
            "reset": "CALC",
            "description": "gain value for green component in red line 100h = 1,\nunsigned integer value, range 0 to 4 with 8 bit fractional\npart"
          },
          {
            "name": "AWB_GAIN_GB",
            "bit_range": "9:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "gain value for green component in blue line 100h = 1,\nunsigned integer value, range 0 to 4 with 8 bit fractional\npart\n"
          }
        ],
        "description": "Auto white balance gain green"
      },
      {
        "type": "register",
        "name": "ISP_AWB_GAIN_RB",
        "offset": "0x53c",
        "size": "32",
        "reset": "0x01000100",
        "bit_ranges": [
          {
            "name": "AWB_GAIN_R",
            "bit_range": "25:16",
            "attr": "rw",
            "reset": "CALC",
            "description": "gain value for red component 100h = 1, unsigned\ninteger value, range 0 to 4 with 8 bit fractional part"
          },
          {
            "name": "AWB_GAIN_B",
            "bit_range": "9:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "gain value for blue component 100h = 1, unsigned\ninteger value, range 0 to 4 with 8 bit fractional part\n"
          }
        ],
        "description": "Auto white balance gain red and blue"
      },
      {
        "type": "register",
        "name": "ISP_AWB_WHITE_CNT",
        "offset": "0x540",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "AWB_WHITE_CNT",
            "bit_range": "25:0",
            "attr": "r",
            "reset": "CALC",
            "description": "White pixel count, number of \"white pixels\" found\nduring last measurement, i.e. pixels included in mean\nvalue calculation"
          }
        ],
        "description": "Auto white balance white pixel count"
      },
      {
        "type": "register",
        "name": "ISP_AWB_MEAN",
        "offset": "0x544",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "AWB_MEAN_Y",
            "bit_range": "23:16",
            "attr": "r",
            "reset": "CALC",
            "description": "G mean value of Y within window and frames\nmean value of green, if RGB measurement mode is\nselected"
          },
          {
            "name": "AWB_MEAN_CB",
            "bit_range": "15:8",
            "attr": "r",
            "reset": "CALC",
            "description": "B mean value of Cb within window and frames\nmean value of blue, if RGB measurement mode is\nselected"
          },
          {
            "name": "AWB_MEAN_CR",
            "bit_range": "7:0",
            "attr": "r",
            "reset": "CALC",
            "description": "R mean value of Cr within window and frames\nmean value of red, if RGB measurement mode is\nselected\n"
          }
        ],
        "description": "Auto white balance measured mean value"
      },
      {
        "type": "register",
        "name": "ISP_CC_COEFF_0",
        "offset": "0x570",
        "size": "32",
        "reset": "0x0021",
        "bit_ranges": [
          {
            "name": "cc_coeff_0",
            "bit_range": "8:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "coefficient 0 for color space conversion"
          }
        ],
        "description": "Color conversion coefficient 0\nNote: all color conversion coefficients are signed integer values with 7 bit fractional \n\npart, range -2 to 1.992 \n\n \n"
      },
      {
        "type": "register",
        "name": "ISP_CC_COEFF_1",
        "offset": "0x574",
        "size": "32",
        "reset": "0x0040",
        "bit_ranges": [
          {
            "name": "cc_coeff_1",
            "bit_range": "8:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "coefficient 1 for color space conversion"
          }
        ],
        "description": "Color conversion coefficient 1"
      },
      {
        "type": "register",
        "name": "ISP_CC_COEFF_2",
        "offset": "0x578",
        "size": "32",
        "reset": "0x000D",
        "bit_ranges": [
          {
            "name": "cc_coeff_2",
            "bit_range": "8:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "coefficient 2 for color space conversion\n"
          }
        ],
        "description": "Color conversion coefficient 2"
      },
      {
        "type": "register",
        "name": "ISP_CC_COEFF_3",
        "offset": "0x57c",
        "size": "32",
        "reset": "0x01ED",
        "bit_ranges": [
          {
            "name": "cc_coeff_3",
            "bit_range": "8:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "coefficient 3 for color space conversion\n"
          }
        ],
        "description": "Color conversion coefficient 3"
      },
      {
        "type": "register",
        "name": "ISP_CC_COEFF_4",
        "offset": "0x580",
        "size": "32",
        "reset": "0x01DB",
        "bit_ranges": [
          {
            "name": "cc_coeff_4",
            "bit_range": "8:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "coefficient 4 for color space conversion\n"
          }
        ],
        "description": "Color conversion coefficient 4"
      },
      {
        "type": "register",
        "name": "ISP_CC_COEFF_5",
        "offset": "0x584",
        "size": "32",
        "reset": "0x0038",
        "bit_ranges": [
          {
            "name": "cc_coeff_5",
            "bit_range": "8:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "coefficient 5 for color space conversion"
          }
        ],
        "description": "Color conversion coefficient 5"
      },
      {
        "type": "register",
        "name": "ISP_CC_COEFF_6",
        "offset": "0x588",
        "size": "32",
        "reset": "0x0038",
        "bit_ranges": [
          {
            "name": "cc_coeff_6",
            "bit_range": "8:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "coefficient 6 for color space conversion\n"
          }
        ],
        "description": "Color conversion coefficient 6"
      },
      {
        "type": "register",
        "name": "ISP_CC_COEFF_7",
        "offset": "0x58c",
        "size": "32",
        "reset": "0x001D1",
        "bit_ranges": [
          {
            "name": "cc_coeff_7",
            "bit_range": "8:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "coefficient 7 for color space conversion\n"
          }
        ],
        "description": "Color conversion coefficient 7"
      },
      {
        "type": "register",
        "name": "ISP_CC_COEFF_8",
        "offset": "0x590",
        "size": "32",
        "reset": "0x01F7",
        "bit_ranges": [
          {
            "name": "cc_coeff_8",
            "bit_range": "8:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "coefficient 8 for color space conversion\n"
          }
        ],
        "description": "Color conversion coefficient 8"
      },
      {
        "type": "register",
        "name": "ISP_OUT_H_OFFS",
        "offset": "0x594",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "ISP_OUT_H_OFFS",
            "bit_range": "13:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "vertical pic offset in lines"
          }
        ],
        "description": "Horizontal offset of output window"
      },
      {
        "type": "register",
        "name": "ISP_OUT_V_OFFS",
        "offset": "0x598",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "ISP_OUT_V_OFFS",
            "bit_range": "13:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "vertical pic offset in lines\n"
          }
        ],
        "description": "Vertical offset of output window"
      },
      {
        "type": "register",
        "name": "ISP_OUT_H_SIZE",
        "offset": "0x59c",
        "size": "32",
        "reset": "0x00001000",
        "bit_ranges": [
          {
            "name": "ISP_OUT_H_SIZE",
            "bit_range": "14:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "horizontal picture size in pixel if ISP_MODE is set to\n001-(ITU-R BT.656 YUV),\n010-( ITU-R BT.601 YUV),\n011-( ITU-R BT.601 Bayer RGB),\n101-( ITU-R BT.656 Bayer RGB)\nonly even numbers are accepted, because complete\nquadruples of YUYV(YCbYCr) are needed for the 422\noutput. (if an odd size is programmed the value will be\ntruncated to even size)\n"
          }
        ],
        "description": "Output horizontal picture size"
      },
      {
        "type": "register",
        "name": "ISP_OUT_V_SIZE",
        "offset": "0x5a0",
        "size": "32",
        "reset": "0x00000C00",
        "bit_ranges": [
          {
            "name": "ISP_OUT_V_SIZE",
            "bit_range": "13:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "vertical pic size in lines"
          }
        ],
        "description": "Output vertical picture size"
      },
      {
        "type": "register",
        "name": "ISP_DEMOSAIC",
        "offset": "0x5a4",
        "size": "32",
        "reset": "0x00000004",
        "bit_ranges": [
          {
            "name": "DEMOSAIC_BYPASS",
            "bit_range": "10",
            "attr": "rw",
            "reset": "CALC",
            "description": "0: normal operation for RGB Bayer Pattern input\n1: demosaicing bypass for Black&White input data"
          },
          {
            "name": "DEMOSAIC_TH",
            "bit_range": "7:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Threshold for Bayer demosaicing texture detection.\nThis value shifted left 4bit is compared with the difference\nof the vertical and horizontal 12Bit wide texture indicators,\nto decide if the vertical or horizontal texture flag must be\nset.\n0xFF: no texture detection 0x00: maximum edge\nsensitivity\n"
          }
        ],
        "description": "Demosaic parameters"
      },
      {
        "type": "register",
        "name": "ISP_FLAGS_SHD",
        "offset": "0x5a8",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "S_HSYNC",
            "bit_range": "31",
            "attr": "r",
            "reset": "CALC",
            "description": "state of ISP input port s_hsync, for test purposes"
          },
          {
            "name": "S_VSYNC",
            "bit_range": "30",
            "attr": "r",
            "reset": "CALC",
            "description": "state of ISP input port s_vsync, for test purposes"
          },
          {
            "name": "S_DATA",
            "bit_range": "27:16",
            "attr": "r",
            "reset": "CALC",
            "description": "state of ISP input port s_data, for test purposes"
          },
          {
            "name": "INFORM_FIELD",
            "bit_range": "2",
            "attr": "r",
            "reset": "CALC",
            "description": "current field information (0=odd, 1=even)"
          },
          {
            "name": "ISP_ENABLE_SHD",
            "bit_range": "0",
            "attr": "r",
            "reset": "CALC",
            "description": "ISP enable shadow register\nshows, if ISP currently outputs data (1) or not (0)"
          }
        ],
        "description": "Flags (current status) of certain signals and Shadow regs \n\nfor enable signals"
      },
      {
        "type": "register",
        "name": "ISP_OUT_H_OFFS_SHD",
        "offset": "0x5ac",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [],
        "description": "current horizontal offset of output window (shadow register)"
      },
      {
        "type": "register",
        "name": "ISP_OUT_V_OFFS_SHD",
        "offset": "0x5b0",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [],
        "description": "current vertical offset of output window (shadow register)"
      },
      {
        "type": "register",
        "name": "ISP_OUT_H_SIZE_SHD",
        "offset": "0x5b4",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [],
        "description": "current output horizontal picture size (shadow register)"
      },
      {
        "type": "register",
        "name": "ISP_OUT_V_SIZE_SHD",
        "offset": "0x5b8",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [],
        "description": "current output vertical picture size (shadow register)"
      },
      {
        "type": "register",
        "name": "ISP_IMSC",
        "offset": "0x5bc",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "IMSC_VSM_END",
            "bit_range": "19",
            "attr": "rw",
            "reset": "CALC",
            "description": "enable interrupt (1) or mask out (0)"
          },
          {
            "name": "IMSC_EXP_END",
            "bit_range": "18",
            "attr": "rw",
            "reset": "CALC",
            "description": "enable interrupt (1) or mask out (0)"
          },
          {
            "name": "IMSC_FLASH_CAP",
            "bit_range": "17",
            "attr": "rw",
            "reset": "CALC",
            "description": "enable interrupt (1) or mask out (0)"
          },
          {
            "name": "IMSC_RESERVED_1",
            "bit_range": "16",
            "attr": "rw",
            "reset": "CALC",
            "description": "enable interrupt (1) or mask out (0)"
          },
          {
            "name": "IMSC_AFM_FIN",
            "bit_range": "14",
            "attr": "rw",
            "reset": "CALC",
            "description": "enable interrupt (1) or mask out (0)"
          },
          {
            "name": "IMSC_AFM_LUM_OF",
            "bit_range": "13",
            "attr": "rw",
            "reset": "CALC",
            "description": "enable interrupt (1) or mask out (0)"
          },
          {
            "name": "IMSC_AFM_SUM_OF",
            "bit_range": "12",
            "attr": "rw",
            "reset": "CALC",
            "description": "enable interrupt (1) or mask out (0)"
          },
          {
            "name": "IMSC_SHUTTER_OFF",
            "bit_range": "11",
            "attr": "rw",
            "reset": "CALC",
            "description": "enable interrupt (1) or mask out (0)"
          },
          {
            "name": "IMSC_SHUTTER_ON",
            "bit_range": "10",
            "attr": "rw",
            "reset": "CALC",
            "description": "enable interrupt (1) or mask out (0)"
          },
          {
            "name": "IMSC_FLASH_OFF",
            "bit_range": "9",
            "attr": "rw",
            "reset": "CALC",
            "description": "enable interrupt (1) or mask out (0)"
          },
          {
            "name": "IMSC_FLASH_ON",
            "bit_range": "8",
            "attr": "rw",
            "reset": "CALC",
            "description": "enable interrupt (1) or mask out (0)"
          },
          {
            "name": "IMSC_H_START",
            "bit_range": "7",
            "attr": "rw",
            "reset": "CALC",
            "description": "enable interrupt (1) or mask out (0)"
          },
          {
            "name": "IMSC_V_START",
            "bit_range": "6",
            "attr": "rw",
            "reset": "CALC",
            "description": "enable interrupt (1) or mask out (0)"
          },
          {
            "name": "IMSC_FRAME_IN",
            "bit_range": "5",
            "attr": "rw",
            "reset": "CALC",
            "description": "enable interrupt (1) or mask out (0)"
          },
          {
            "name": "IMSC_AWB_DONE",
            "bit_range": "4",
            "attr": "rw",
            "reset": "CALC",
            "description": "enable interrupt (1) or mask out (0)"
          },
          {
            "name": "IMSC_PIC_SIZE_ERR",
            "bit_range": "3",
            "attr": "rw",
            "reset": "CALC",
            "description": "enable interrupt (1) or mask out (0)"
          },
          {
            "name": "IMSC_DATA_LOSS",
            "bit_range": "2",
            "attr": "rw",
            "reset": "CALC",
            "description": "enable interrupt (1) or mask out (0)"
          },
          {
            "name": "IMSC_FRAME",
            "bit_range": "1",
            "attr": "rw",
            "reset": "CALC",
            "description": "enable interrupt (1) or mask out (0)"
          },
          {
            "name": "IMSC_ISP_OFF",
            "bit_range": "0",
            "attr": "rw",
            "reset": "CALC",
            "description": "enable interrupt (1) or mask out (0)"
          }
        ],
        "description": "Interrupt mask"
      },
      {
        "type": "register",
        "name": "ISP_RIS",
        "offset": "0x5c0",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "RIS_VSM_END",
            "bit_range": "19",
            "attr": "r",
            "reset": "CALC",
            "description": "VSM measurement complete"
          },
          {
            "name": "RIS_EXP_END",
            "bit_range": "18",
            "attr": "r",
            "reset": "CALC",
            "description": "Exposure measurement complete"
          },
          {
            "name": "RIS_FLASH_CAP",
            "bit_range": "17",
            "attr": "r",
            "reset": "CALC",
            "description": "Signaling captured frame"
          },
          {
            "name": "RIS_RESERVED_1",
            "bit_range": "16",
            "attr": "r",
            "reset": "CALC",
            "description": "reserved"
          },
          {
            "name": "RIS_AFM_FIN",
            "bit_range": "14",
            "attr": "r",
            "reset": "CALC",
            "description": "AF measurement finished: this interrupt is set when\nthe first complete frame is calculated after enabling the AF\nmeasurement"
          },
          {
            "name": "RIS_AFM_LUM_OF",
            "bit_range": "13",
            "attr": "r",
            "reset": "CALC",
            "description": "Auto focus luminance overflow"
          },
          {
            "name": "RIS_AFM_SUM_OF",
            "bit_range": "12",
            "attr": "r",
            "reset": "CALC",
            "description": "Auto focus sum overflow"
          },
          {
            "name": "RIS_SHUTTER_OFF",
            "bit_range": "11",
            "attr": "r",
            "reset": "CALC",
            "description": "Mechanical shutter is switched off"
          },
          {
            "name": "RIS_SHUTTER_ON",
            "bit_range": "10",
            "attr": "r",
            "reset": "CALC",
            "description": "Mechanical shutter is switched on"
          },
          {
            "name": "RIS_FLASH_OFF",
            "bit_range": "9",
            "attr": "r",
            "reset": "CALC",
            "description": "Flash light is switched off"
          },
          {
            "name": "RIS_FLASH_ON",
            "bit_range": "8",
            "attr": "r",
            "reset": "CALC",
            "description": "Flash light is switched on"
          },
          {
            "name": "RIS_H_START",
            "bit_range": "7",
            "attr": "r",
            "reset": "CALC",
            "description": "Start edge of h_sync"
          },
          {
            "name": "RIS_V_START",
            "bit_range": "6",
            "attr": "r",
            "reset": "CALC",
            "description": "Start edge of v_sync"
          },
          {
            "name": "RIS_FRAME_IN",
            "bit_range": "5",
            "attr": "r",
            "reset": "CALC",
            "description": "sampled input frame is complete"
          },
          {
            "name": "RIS_AWB_DONE",
            "bit_range": "4",
            "attr": "r",
            "reset": "CALC",
            "description": "White balancing measurement cycle is complete,\nresults can be read out"
          },
          {
            "name": "RIS_PIC_SIZE_ERR",
            "bit_range": "3",
            "attr": "r",
            "reset": "CALC",
            "description": "pic size violation occurred, programming seems wrong"
          },
          {
            "name": "RIS_DATA_LOSS",
            "bit_range": "2",
            "attr": "r",
            "reset": "CALC",
            "description": "loss of data occurred within a line, processing failure"
          },
          {
            "name": "RIS_FRAME",
            "bit_range": "1",
            "attr": "r",
            "reset": "CALC",
            "description": "frame was completely put out"
          },
          {
            "name": "RIS_ISP_OFF",
            "bit_range": "0",
            "attr": "r",
            "reset": "CALC",
            "description": "isp output was disabled (vsynced) due to f_cnt\nreached or manual"
          }
        ],
        "description": "Raw interrupt status"
      },
      {
        "type": "register",
        "name": "ISP_MIS",
        "offset": "0x5c4",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "MIS_VSM_END",
            "bit_range": "19",
            "attr": "r",
            "reset": "CALC",
            "description": "VSM measurement complete"
          },
          {
            "name": "MIS_EXP_END",
            "bit_range": "18",
            "attr": "r",
            "reset": "CALC",
            "description": "Exposure measurement complete"
          },
          {
            "name": "MIS_FLASH_CAP",
            "bit_range": "17",
            "attr": "r",
            "reset": "CALC",
            "description": "Captured is frame is detected"
          },
          {
            "name": "MIS_RESERVED_1",
            "bit_range": "16",
            "attr": "r",
            "reset": "CALC",
            "description": "reserved"
          },
          {
            "name": "MIS_AFM_FIN",
            "bit_range": "14",
            "attr": "r",
            "reset": "CALC",
            "description": "AF measurement finished: this interrupt is set when\nthe first complete frame is calculated after enabling the AF\nmeasurement"
          },
          {
            "name": "MIS_AFM_LUM_OF",
            "bit_range": "13",
            "attr": "r",
            "reset": "CALC",
            "description": "Luminance overflow"
          },
          {
            "name": "MIS_AFM_SUM_OF",
            "bit_range": "12",
            "attr": "r",
            "reset": "CALC",
            "description": "Sum overflow"
          },
          {
            "name": "MIS_SHUTTER_OFF",
            "bit_range": "11",
            "attr": "r",
            "reset": "CALC",
            "description": "Mechanical shutter is switched off"
          },
          {
            "name": "MIS_SHUTTER_ON",
            "bit_range": "10",
            "attr": "r",
            "reset": "CALC",
            "description": "Mechanical shutter is switched on"
          },
          {
            "name": "MIS_FLASH_OFF",
            "bit_range": "9",
            "attr": "r",
            "reset": "CALC",
            "description": "Flash light is switched off"
          },
          {
            "name": "MIS_FLASH_ON",
            "bit_range": "8",
            "attr": "r",
            "reset": "CALC",
            "description": "Flash light is switched on"
          },
          {
            "name": "MIS_H_START",
            "bit_range": "7",
            "attr": "r",
            "reset": "CALC",
            "description": "Start edge of h_sync"
          },
          {
            "name": "MIS_V_START",
            "bit_range": "6",
            "attr": "r",
            "reset": "CALC",
            "description": "Start edge of v_sync"
          },
          {
            "name": "MIS_FRAME_IN",
            "bit_range": "5",
            "attr": "r",
            "reset": "CALC",
            "description": "sampled input frame is complete"
          },
          {
            "name": "MIS_AWB_DONE",
            "bit_range": "4",
            "attr": "r",
            "reset": "CALC",
            "description": "White balancing measurement cycle is complete,\nresults can be read out"
          },
          {
            "name": "MIS_PIC_SIZE_ERR",
            "bit_range": "3",
            "attr": "r",
            "reset": "CALC",
            "description": "pic size violation occurred, programming seems wrong"
          },
          {
            "name": "MIS_DATA_LOSS",
            "bit_range": "2",
            "attr": "r",
            "reset": "CALC",
            "description": "loss of data occurred within a line, processing failure"
          },
          {
            "name": "MIS_FRAME",
            "bit_range": "1",
            "attr": "r",
            "reset": "CALC",
            "description": "frame was completely put out"
          },
          {
            "name": "MIS_ISP_OFF",
            "bit_range": "0",
            "attr": "r",
            "reset": "CALC",
            "description": "isp was turned off (vsynced) due to f_cnt reached or\nmanual"
          }
        ],
        "description": "Masked interrupt status"
      },
      {
        "type": "register",
        "name": "ISP_ICR",
        "offset": "0x5c8",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "ICR_VSM_END",
            "bit_range": "19",
            "attr": "w",
            "reset": "CALC",
            "description": "clear interrupt"
          },
          {
            "name": "ICR_EXP_END",
            "bit_range": "18",
            "attr": "w",
            "reset": "CALC",
            "description": "clear interrupt"
          },
          {
            "name": "ICR_FLASH_CAP",
            "bit_range": "17",
            "attr": "w",
            "reset": "CALC",
            "description": "clear interrupt"
          },
          {
            "name": "ICR_RESERVED_1",
            "bit_range": "16",
            "attr": "w",
            "reset": "CALC",
            "description": "clear interrupt"
          },
          {
            "name": "ICR_AFM_FIN",
            "bit_range": "14",
            "attr": "w",
            "reset": "CALC",
            "description": "clear interrupt"
          },
          {
            "name": "ICR_AFM_LUM_OF",
            "bit_range": "13",
            "attr": "w",
            "reset": "CALC",
            "description": "clear interrupt"
          },
          {
            "name": "ICR_AFM_SUM_OF",
            "bit_range": "12",
            "attr": "w",
            "reset": "CALC",
            "description": "clear interrupt"
          },
          {
            "name": "ICR_SHUTTER_OFF",
            "bit_range": "11",
            "attr": "w",
            "reset": "CALC",
            "description": "clear interrupt"
          },
          {
            "name": "ICR_SHUTTER_ON",
            "bit_range": "10",
            "attr": "w",
            "reset": "CALC",
            "description": "clear interrupt"
          },
          {
            "name": "ICR_FLASH_OFF",
            "bit_range": "9",
            "attr": "w",
            "reset": "CALC",
            "description": "clear interrupt"
          },
          {
            "name": "ICR_FLASH_ON",
            "bit_range": "8",
            "attr": "w",
            "reset": "CALC",
            "description": "clear interrupt"
          },
          {
            "name": "ICR_H_START",
            "bit_range": "7",
            "attr": "w",
            "reset": "CALC",
            "description": "clear interrupt"
          },
          {
            "name": "ICR_V_START",
            "bit_range": "6",
            "attr": "w",
            "reset": "CALC",
            "description": "clear interrupt"
          },
          {
            "name": "ICR_FRAME_IN",
            "bit_range": "5",
            "attr": "w",
            "reset": "CALC",
            "description": "clear interrupt"
          },
          {
            "name": "ICR_AWB_DONE",
            "bit_range": "4",
            "attr": "w",
            "reset": "CALC",
            "description": "clear interrupt"
          },
          {
            "name": "ICR_PIC_SIZE_ERR",
            "bit_range": "3",
            "attr": "w",
            "reset": "CALC",
            "description": "clear interrupt"
          },
          {
            "name": "ICR_DATA_LOSS",
            "bit_range": "2",
            "attr": "w",
            "reset": "CALC",
            "description": "clear interrupt"
          },
          {
            "name": "ICR_FRAME",
            "bit_range": "1",
            "attr": "w",
            "reset": "CALC",
            "description": "clear interrupt"
          },
          {
            "name": "ICR_ISP_OFF",
            "bit_range": "0",
            "attr": "w",
            "reset": "CALC",
            "description": "clear interrupt"
          }
        ],
        "description": "Interrupt clear register"
      },
      {
        "type": "register",
        "name": "ISP_ISR",
        "offset": "0x5cc",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "ISR_VSM_END",
            "bit_range": "19",
            "attr": "w",
            "reset": "CALC",
            "description": "set interrupt"
          },
          {
            "name": "ISR_EXP_END",
            "bit_range": "18",
            "attr": "w",
            "reset": "CALC",
            "description": "set interrupt"
          },
          {
            "name": "ISR_FLASH_CAP",
            "bit_range": "17",
            "attr": "w",
            "reset": "CALC",
            "description": "set interrupt"
          },
          {
            "name": "ISR_RESERVED_1",
            "bit_range": "16",
            "attr": "w",
            "reset": "CALC",
            "description": "set interrupt"
          },
          {
            "name": "ISR_AFM_FIN",
            "bit_range": "14",
            "attr": "w",
            "reset": "CALC",
            "description": "set interrupt"
          },
          {
            "name": "ISR_AFM_LUM_OF",
            "bit_range": "13",
            "attr": "w",
            "reset": "CALC",
            "description": "set interrupt"
          },
          {
            "name": "ISR_AFM_SUM_OF",
            "bit_range": "12",
            "attr": "w",
            "reset": "CALC",
            "description": "set interrupt"
          },
          {
            "name": "ISR_SHUTTER_OFF",
            "bit_range": "11",
            "attr": "w",
            "reset": "CALC",
            "description": "set interrupt"
          },
          {
            "name": "ISR_SHUTTER_ON",
            "bit_range": "10",
            "attr": "w",
            "reset": "CALC",
            "description": "set interrupt"
          },
          {
            "name": "ISR_FLASH_OFF",
            "bit_range": "9",
            "attr": "w",
            "reset": "CALC",
            "description": "set interrupt"
          },
          {
            "name": "ISR_FLASH_ON",
            "bit_range": "8",
            "attr": "w",
            "reset": "CALC",
            "description": "set interrupt"
          },
          {
            "name": "ISR_H_START",
            "bit_range": "7",
            "attr": "w",
            "reset": "CALC",
            "description": "set interrupt"
          },
          {
            "name": "ISR_V_START",
            "bit_range": "6",
            "attr": "w",
            "reset": "CALC",
            "description": "set interrupt"
          },
          {
            "name": "ISR_FRAME_IN",
            "bit_range": "5",
            "attr": "w",
            "reset": "CALC",
            "description": "set interrupt"
          },
          {
            "name": "ISR_AWB_DONE",
            "bit_range": "4",
            "attr": "w",
            "reset": "CALC",
            "description": "set interrupt"
          },
          {
            "name": "ISR_PIC_SIZE_ERR",
            "bit_range": "3",
            "attr": "w",
            "reset": "CALC",
            "description": "set interrupt"
          },
          {
            "name": "ISR_DATA_LOSS",
            "bit_range": "2",
            "attr": "w",
            "reset": "CALC",
            "description": "set interrupt"
          },
          {
            "name": "ISR_FRAME",
            "bit_range": "1",
            "attr": "w",
            "reset": "CALC",
            "description": "set interrupt"
          },
          {
            "name": "ISR_ISP_OFF",
            "bit_range": "0",
            "attr": "w",
            "reset": "CALC",
            "description": "set interrupt"
          }
        ],
        "description": "Interrupt set register"
      },
      {
        "type": "register",
        "name": "ISP_CT_COEFF",
        "offset": "0x5d0",
        "size": "32",
        "reset": "0x0",
        "bit_ranges": [
          {
            "name": "ct_coeff",
            "bit_range": "10:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Coefficient n for cross talk matrix.\nValues are 11-bit signed fixed-point numbers with 4\nbit integer and 7 bit fractional part,\nranging from -8 (0x400) to +7.992 (0x3FF). 0 is\nreprsented by 0x000 and a coefficient value of 1 as 0x080."
          }
        ],
        "description": "cross-talk configuration register (color correction matrix) n (n=0..8)\nNote: Reset values generate a matrix which does not modify the pixel values. Reset \nvalues are: coeff_0 = 0x80, coeff_1 = 0x00, coeff_2 = 0x00, coeff_3 = 0x00, coeff_4 = 0x80, \n\ncoeff_5 = 0x00, coeff_6 = 0x00, coeff_7 = 0x00, coeff_8 = 0x80 \n\n \n"
      },
      {
        "type": "register",
        "name": "ISP_GAMMA_OUT_MODE",
        "offset": "0x5f4",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "equ_segm",
            "bit_range": "0",
            "attr": "rw",
            "reset": "CALC",
            "description": "0: logarithmic like segmentation of gamma curve\n(default after reset)\nsegmentation from 0 to 4095: 64 64 64 64 128 128\n128 128 256\n256 256 512 512 512 512 512\n1: equidistant segmentation (all 16 segments are\n256 )"
          }
        ],
        "description": "gamma segmentation mode register for output gamma"
      },
      {
        "type": "register",
        "name": "ISP_GAMMA_OUT_Y",
        "offset": "0x5f8",
        "size": "32",
        "reset": "0x0",
        "bit_ranges": [
          {
            "name": "isp_gamma_out_y",
            "bit_range": "9:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Gamma_out curve point definition y-axis (output) for\nall color components (red,green,blue)\nRESTRICTION: The difference between two Y_n\n(dy = Y_n - Y_n-1) is restricted to +511/-512 (10 bit\nsigned)!"
          }
        ],
        "description": "Gamma Out Curve definition y_ n (n=0..16)\nNote: Reset values generate a standard gamma of 2.2. Reset values are: \ny_00 = 0x000, y_01 = 0x049, y_02 = 0x089, y_03 = 0x0B7, y_04 = 0x0DF, y_05 = \n\n0x11F, y_06 = 0x154, y_07 = 0x183, y_08 = 0x1AD, y_09 = 0x1F6, y_10 = 0x235, y_11 = \n0x26F, y_12 = 0x2D3, y_13 = 0x32A, y_14 = 0x378, y_15 = 0x3BF, y_16 = 0x3FF \n\n \n"
      },
      {
        "type": "register",
        "name": "ISP_ERR",
        "offset": "0x63c",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "outform_size_err",
            "bit_range": "2",
            "attr": "r",
            "reset": "CALC",
            "description": "size error is generated in outmux submodule"
          },
          {
            "name": "is_size_err",
            "bit_range": "1",
            "attr": "r",
            "reset": "CALC",
            "description": "size error is generated in image stabilization\nsubmodule"
          },
          {
            "name": "inform_size_err",
            "bit_range": "0",
            "attr": "r",
            "reset": "CALC",
            "description": "size error is generated in inform submodule"
          }
        ],
        "description": "ISP error register\nNote: For debug purposes the ISP_ERR und ISP_ERR_CLR are implemented. For the case \nwhen a PIC_SIZE_ERR interrupt is signaled the SW is able to see in which submodule this error \nis generated. Writing to the ISP_ERR_CLR register clears this bit. \n\n \n"
      },
      {
        "type": "register",
        "name": "ISP_ERR_CLR",
        "offset": "0x640",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "outform_size_err_clr",
            "bit_range": "2",
            "attr": "w",
            "reset": "CALC",
            "description": "size error is cleared"
          },
          {
            "name": "is_size_err_clr",
            "bit_range": "1",
            "attr": "w",
            "reset": "CALC",
            "description": "size error is cleared"
          },
          {
            "name": "inform_size_err_clr",
            "bit_range": "0",
            "attr": "w",
            "reset": "CALC",
            "description": "size error is cleared"
          }
        ],
        "description": "ISP error clear register"
      },
      {
        "type": "register",
        "name": "ISP_FRAME_COUNT",
        "offset": "0x644",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "frame_counter",
            "bit_range": "9:0",
            "attr": "r",
            "reset": "CALC",
            "description": "Current frame count of processing"
          }
        ],
        "description": "Frame counter\nNote: In the ISP_FRAME_COUNT register the number of processed frames are displayed. \nFor example: If a 8 is programmed into the ISP_ACQ_NR_FRAMES register, a read access to \nthe ISP_FRAME_COUNT register during processing of the first picture shows a 7. \n\nAfter the entire frames are processed the ISP_OFF interrupt is generated and the \nISP_FRAME_COUNT has the count zero. In case a \"0\" is programmed into the \nISP_ACQ_NR_FRAMES register (continues mode) the ISP_FRAME_COUNT register keeps the \nvalue \"0\". \n\n \n"
      },
      {
        "type": "register",
        "name": "ISP_CT_OFFSET_R",
        "offset": "0x648",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "ct_offset_r",
            "bit_range": "11:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Offset red for cross talk matrix. Two's complement\ninteger number ranging from -2048 (0x800) to 2047\n(0x7FF). 0 is represented as 0x000.\n"
          }
        ],
        "description": "cross-talk offset red"
      },
      {
        "type": "register",
        "name": "ISP_CT_OFFSET_G",
        "offset": "0x64c",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "ct_offset_g",
            "bit_range": "11:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Offset green for cross talk matrix. Two's complement\ninteger number ranging from -2048 (0x800) to 2047\n(0x7FF). 0 is represented as 0x000."
          }
        ],
        "description": "cross-talk offset green"
      },
      {
        "type": "register",
        "name": "ISP_CT_OFFSET_B",
        "offset": "0x650",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "ct_offset_b",
            "bit_range": "11:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Offset blue for cross talk matrix. Two's\ncomplement integer number ranging from -2048\n(0x800) to 2047 (0x7FF). 0 is represented as 0x000.\n"
          }
        ],
        "description": "cross-talk offset blue"
      },
      {
        "type": "register",
        "name": "ISP_FLASH_CMD",
        "offset": "0x660",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "preflash_on",
            "bit_range": "2",
            "attr": "w",
            "reset": "CALC",
            "description": "preflash on\n0: no effect\n1: flash delay counter is started at next trigger event\nNo capture event is signaled to the sensor interface\nblock."
          },
          {
            "name": "flash_on",
            "bit_range": "1",
            "attr": "w",
            "reset": "CALC",
            "description": "flash on\n0: no effect\n1: flash delay counter is started at next trigger event\nA capture event is signaled to the sensor interface\nblock."
          },
          {
            "name": "prelight_on",
            "bit_range": "0",
            "attr": "w",
            "reset": "CALC",
            "description": "prelight on\n0: prelight is switched off at next trigger event 1:\nprelight is switched on at next trigger event"
          }
        ],
        "description": "Flash command\nNote: This is the command register for flash light and prelight activation. If the \"rw\" bits \n(e.g. \"fl_cap_del\") are re-programmed during operation, the following scheme shall be \napplied: \n\nprelight is active (prelight_on = 1 has been set before): Every write access to this register \nshall use prelight_on = 1 (to prevent undesired switch off of the prelight). \n\nprelight is off: Every write access to this register shall use prelight_on = 0 (to prevent \nundesired switch on of the prelight). \n\n"
      },
      {
        "type": "register",
        "name": "ISP_FLASH_CONFIG",
        "offset": "0x664",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "fl_cap_del",
            "bit_range": "7:4",
            "attr": "rw",
            "reset": "CALC",
            "description": "capture delay\nframe number (0 to 15) to be captured after trigger\nevent"
          },
          {
            "name": "fl_trig_src",
            "bit_range": "3",
            "attr": "rw",
            "reset": "CALC",
            "description": "trigger source for flash and prelight\n0: use \u201cvds_vsync\u201d for trigger event (with evaluation\nof vs_in_edge)\n1: use \u201cfl_trig\u201d for trigger event (positive edge)"
          },
          {
            "name": "fl_pol",
            "bit_range": "2",
            "attr": "rw",
            "reset": "CALC",
            "description": "polarity of flash related signals\n0: flash_trig, prelight_trig are high active\n1: flash_trig, prelight_trig are low active"
          },
          {
            "name": "vs_in_edge",
            "bit_range": "1",
            "attr": "rw",
            "reset": "CALC",
            "description": "VSYNC edge\n0: use negative edge of \u201cvds_vsync\u201d if generating a\ntrigger event\n1: use positive edge of \u201cvds_vsync\u201d if generating a\ntrigger event"
          },
          {
            "name": "prelight_mode",
            "bit_range": "0",
            "attr": "rw",
            "reset": "CALC",
            "description": "prelight mode\n0: prelight is switched off at begin of flash\n1: prelight is switched off at end of flash\n"
          }
        ],
        "description": "Flash config"
      },
      {
        "type": "register",
        "name": "ISP_FLASH_PREDIV",
        "offset": "0x668",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "fl_pre_div",
            "bit_range": "9:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "pre-divider for flush/preflash counter\n"
          }
        ],
        "description": "Flash Counter Pre-Divider"
      },
      {
        "type": "register",
        "name": "ISP_FLASH_DELAY",
        "offset": "0x66c",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "fl_delay",
            "bit_range": "17:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "counter value for flash/preflash delay open_delay = (fl_delay + 1) * (fl_pre_div+1) / clk_isp fl_delay = (open_delay * clk_isp) / (fl_pre_div+1) - 1"
          }
        ],
        "description": "Flash Delay\nNote: Example: \nfl_delay = (10s * 100MHz) / (1023 + 1) \u2013 1 = 976561 \n\n \n"
      },
      {
        "type": "register",
        "name": "ISP_FLASH_TIME",
        "offset": "0x670",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "fl_time",
            "bit_range": "17:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "counter value for flash/preflash time open_time = (fl_time + 1) * (fl_pre_div+1) / clk_isp fl_time = (open_time * clk_isp) / (fl_pre_div+1) - 1"
          }
        ],
        "description": "Flash time\nNote: Example: \nfl_time = (500ms * 100MHz) / (700 + 1) \u2013 1 = 71530 \n\n \n"
      },
      {
        "type": "register",
        "name": "ISP_FLASH_MAXP",
        "offset": "0x674",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "fl_maxp",
            "bit_range": "15:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "maximum period value for flash or preflash\nmax. flash/preflash period = 214 * (fl_maxp + 1) / clk_isp fl_maxp = (max_period * clk_isp) / 214 - 1"
          }
        ],
        "description": "Maximum value for flash or preflash\nNote: Example: \n\nfl_maxp = (10s * 100MHz) / (16384) \u2013 1 = 61034 \n\n"
      },
      {
        "type": "register",
        "name": "ISP_SH_CTRL",
        "offset": "0x680",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "sh_open_pol",
            "bit_range": "4",
            "attr": "rw",
            "reset": "CALC",
            "description": "shutter_open polarity\n0: shutter_open is high active\n1: shutter_open is low active"
          },
          {
            "name": "sh_trig_en",
            "bit_range": "3",
            "attr": "rw",
            "reset": "CALC",
            "description": "mechanical shutter trigger edge\n0: use negative edge of trigger signal\n1: use positive edge of trigger signal"
          },
          {
            "name": "sh_trig_src",
            "bit_range": "2",
            "attr": "rw",
            "reset": "CALC",
            "description": "mechanical shutter trigger source\n0: use \u201cvds_vsync\u201d for trigger event\n1: use \u201cshutter_trig\u201d for trigger event"
          },
          {
            "name": "sh_rep_en",
            "bit_range": "1",
            "attr": "rw",
            "reset": "CALC",
            "description": "mechanical shutter repetition enable\n0: shutter is opened only once\n1: shutter is opened with the repetition rate of the\ntrigger signal"
          },
          {
            "name": "sh_en",
            "bit_range": "0",
            "attr": "rw",
            "reset": "CALC",
            "description": "mechanical shutter enable\n0: mechanical shutter function is disabled\n1: mechanical shutter function is enabled\n"
          }
        ],
        "description": "mechanical shutter control"
      },
      {
        "type": "register",
        "name": "ISP_SH_PREDIV",
        "offset": "0x684",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "sh_pre_div",
            "bit_range": "9:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "pre-divider for mechanical shutter open_delay and open_time counter\n"
          }
        ],
        "description": "Mech. Shutter Counter Pre-Divider"
      },
      {
        "type": "register",
        "name": "ISP_SH_DELAY",
        "offset": "0x688",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "sh_delay",
            "bit_range": "19:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "counter value for delay open_delay = (sh_delay + 1) * (fl_pre_div+1) / clk_isp sh_delay = (open_delay\n* clk_isp) / (sh_pre_div+1) \u2013 1"
          }
        ],
        "description": "Delay register\nNote: Example: \nsh_delay = (250us * 100MHz) / (50 + 1) \u2013 1 = 489 \n\n \n"
      },
      {
        "type": "register",
        "name": "ISP_SH_TIME",
        "offset": "0x68c",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "sh_time",
            "bit_range": "19:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "counter value for time open_time = (sh_time + 1) * (fl_pre_div+1) / clk_isp sh_time = (open_time\n* clk_isp) / (sh_pre_div+1) - 1"
          }
        ],
        "description": "Time register\nNote: Example: \n\nsh_time = (10s * 100MHz) / (1023 + 1) \u2013 1 = 976561 \n\n \n"
      },
      {
        "type": "register",
        "name": "CPROC_CTRL",
        "offset": "0x800",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "cproc_c_out_range",
            "bit_range": "3",
            "attr": "rw",
            "reset": "CALC",
            "description": "Color processing chrominance pixel clipping range at\noutput\n0: CbCr_out clipping range 16..240 according to ITU-R\nBT.601 standard\n1: full UV_out clipping range 0..255"
          },
          {
            "name": "cproc_y_in_range",
            "bit_range": "2",
            "attr": "rw",
            "reset": "CALC",
            "description": "Color processing luminance input range (offset\nprocessing) 0: Y_in range 64..940 according to ITU-R\nBT.601 standard; offset of 64 will be subtracted from Y_in\n1: Y_in full range 0..1023; no offset will be subtracted\nfrom Y_in\n"
          },
          {
            "name": "cproc_y_out_range",
            "bit_range": "1",
            "attr": "rw",
            "reset": "CALC",
            "description": "Color processing luminance output clipping range\n0: Y_out clipping range 16..235; offset of 16 is added\nto Y_out according to ITU-R BT.601 standard\n1: Y_out clipping range 0..255; no offset is added to Y_out"
          },
          {
            "name": "cproc_enable",
            "bit_range": "0",
            "attr": "rw",
            "reset": "CALC",
            "description": "color processing enable\n0: color processing is bypassed\n2 * 10 Bit input data are truncated to 2 * 8Bit output\ndata 1: color processing is active\noutput data are rounded to 2 * 8Bit and clipping is\nactive\n"
          }
        ],
        "description": "Global control register"
      },
      {
        "type": "register",
        "name": "CPROC_CONTRAST",
        "offset": "0x804",
        "size": "32",
        "reset": "0x00000080",
        "bit_ranges": [
          {
            "name": "cproc_contrast",
            "bit_range": "7:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "contrast adjustment value 00H equals x 0.0\n\u2026\n80H equals x 1.0\n\u2026\nFFH equals x 1.992\n"
          }
        ],
        "description": "Color Processing contrast register"
      },
      {
        "type": "register",
        "name": "CPROC_BRIGHTNESS",
        "offset": "0x808",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "cproc_brightness",
            "bit_range": "7:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "brightness adjustment value 80H equals -128\n\u2026\n00H equals +0\n\u2026\n7FH equals +127"
          }
        ],
        "description": "Color Processing brightness register"
      },
      {
        "type": "register",
        "name": "CPROC_SATURATION",
        "offset": "0x80c",
        "size": "32",
        "reset": "0x00000080",
        "bit_ranges": [
          {
            "name": "cproc_saturation",
            "bit_range": "7:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "saturation adjustment value 00H equals x 0.0\n\u2026\n80H equals x 1.0\n\u2026\nFFH equals x 1.992\n"
          }
        ],
        "description": "Color Processing saturation register"
      },
      {
        "type": "register",
        "name": "CPROC_HUE",
        "offset": "0x810",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "cproc_hue",
            "bit_range": "7:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "hue adjustment value 80H equals -90 deg\n\u2026\n00H equals 0 deg\n\u2026\n7FH equals +87.188 deg\n"
          }
        ],
        "description": "Color Processing hue register"
      },
      {
        "type": "register",
        "name": "MRSZ_CTRL",
        "offset": "0xc00",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "auto_upd",
            "bit_range": "9",
            "attr": "rw",
            "reset": "CALC",
            "description": "1: automatic register update at frame end enabled.\n0: automatic register update at frame end disabled."
          },
          {
            "name": "cfg_upd",
            "bit_range": "8",
            "attr": "rw",
            "reset": "CALC",
            "description": "write 0: nothing happens\nwrite 1: update shadow registers read: always 0\n"
          },
          {
            "name": "scale_vc_up",
            "bit_range": "7",
            "attr": "rw",
            "reset": "CALC",
            "description": "1: vertical chrominance upscaling selected\n0: vertical chrominance downscaling selected"
          },
          {
            "name": "scale_vy_up",
            "bit_range": "6",
            "attr": "rw",
            "reset": "CALC",
            "description": "1: vertical luminance upscaling selected\n0: vertical luminance downscaling selected"
          },
          {
            "name": "scale_hc_up",
            "bit_range": "5",
            "attr": "rw",
            "reset": "CALC",
            "description": "1: horizontal chrominance upscaling selected\n0: horizontal chrominance downscaling selected"
          },
          {
            "name": "scale_hy_up",
            "bit_range": "4",
            "attr": "rw",
            "reset": "CALC",
            "description": "1: horizontal luminance upscaling selected\n0: horizontal luminance downscaling selected"
          },
          {
            "name": "scale_vc_enable",
            "bit_range": "3",
            "attr": "rw",
            "reset": "CALC",
            "description": "0: bypass vertical chrominance scaling unit\n1: enable vertical chrominance scaling unit"
          },
          {
            "name": "scale_vy_enable",
            "bit_range": "2",
            "attr": "rw",
            "reset": "CALC",
            "description": "0: bypass vertical luminance scaling unit\n1: enable vertical luminance scaling unit"
          },
          {
            "name": "scale_hc_enable",
            "bit_range": "1",
            "attr": "rw",
            "reset": "CALC",
            "description": "0: bypass horizontal chrominance scaling unit\n1: enable horizontal chrominance scaling unit"
          },
          {
            "name": "scale_hy_enable",
            "bit_range": "0",
            "attr": "rw",
            "reset": "CALC",
            "description": "0: bypass horizontal luminance scaling unit\n1: enable horizontal luminance scaling unit\n"
          }
        ],
        "description": "global control register"
      },
      {
        "type": "register",
        "name": "MRSZ_SCALE_HY",
        "offset": "0xc04",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "scale_hy",
            "bit_range": "15:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "This register is set to the horizontal luminance\ndownscale factor or to the reciprocal of the horizontal\nluminance upscale factor"
          }
        ],
        "description": "horizontal luminance scale factor register\nNote: The size of the output picture is calculated as follows: \n\n \nupscaling: (size_in - 1) / (size_out - 1)) = scale downscaling: (size_out - 1) / (size_in - 1)) \n\n= scale, \n \nwhere size_in/out is the width or height of the in/output picture. The value of the \n\nrespective MRSZ_SCALE register then has to be \nint(scale x 2^14) for upscaling and \nint(scale x 2^14)+1 for downscaling. \nFor downscaling this formula has no restriction. In upscaling processes the limit is factor 5. \n\nThe output is at max. 5 MegaPixel. \nIf a format conversion is performed, the scale factors have to be different for the \n\nluminance and the chrominance component, respectively. For example, for a format \nconversion from 4:2:2 to 4:2:0 the scale register value for the vertical \n\nchrominance component should be half of the vertical luminance scale register value. \n\n \n"
      },
      {
        "type": "register",
        "name": "MRSZ_SCALE_HCB",
        "offset": "0xc08",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "scale_hcb",
            "bit_range": "15:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "This register is set to the horizontal Cb downscale\nfactor or to the reciprocal of the horizontal Cb upscale\nfactor\n"
          }
        ],
        "description": "horizontal Cb scale factor register"
      },
      {
        "type": "register",
        "name": "MRSZ_SCALE_HCR",
        "offset": "0xc0c",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "scale_hcr",
            "bit_range": "15:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "This register is set to the horizontal Cr downscale\nfactor or to the reciprocal of the horizontal Cr upscale\nfactor\n"
          }
        ],
        "description": "horizontal Cr scale factor register"
      },
      {
        "type": "register",
        "name": "MRSZ_SCALE_VY",
        "offset": "0xc10",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "scale_vy",
            "bit_range": "15:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "This register is set to the vertical luminance\ndownscale factor or to the reciprocal of the vertical\nluminance upscale factor\n"
          }
        ],
        "description": "vertical luminance scale factor register"
      },
      {
        "type": "register",
        "name": "MRSZ_SCALE_VC",
        "offset": "0xc14",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "scale_vc",
            "bit_range": "15:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "This register is set to the vertical chrominance\ndownscale factor or to the reciprocal of the vertical\nchrominance upscale factor"
          }
        ],
        "description": "vertical chrominance scale factor register\nNote: The size of the output picture is calculated as follows: (size_out - 1) / (size_in - 1)) \n\n= scale, \nwhere size_in/out is the width or heigth of the in/output picture. The values of the \n\nMRSZ_SCALE registers then have to be int(scale x 2^14)+1 \n\n \n"
      },
      {
        "type": "register",
        "name": "MRSZ_PHASE_HY",
        "offset": "0xc18",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "phase_hy",
            "bit_range": "15:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "This register is set to the horizontal luminance phase\noffset\n"
          }
        ],
        "description": "horizontal luminance phase register"
      },
      {
        "type": "register",
        "name": "MRSZ_PHASE_HC",
        "offset": "0xc1c",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "phase_hc",
            "bit_range": "15:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "This register is set to the horizontal chrominance\nphase offset\n"
          }
        ],
        "description": "horizontal chrominance phase register"
      },
      {
        "type": "register",
        "name": "MRSZ_PHASE_VY",
        "offset": "0xc20",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "phase_vy",
            "bit_range": "15:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "This register is set to the vertical luminance phase\noffset\n"
          }
        ],
        "description": "vertical luminance phase register"
      },
      {
        "type": "register",
        "name": "MRSZ_PHASE_VC",
        "offset": "0xc24",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "phase_vc",
            "bit_range": "15:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "This register is set to the vertical chrominance phase\noffset\n"
          }
        ],
        "description": "vertical chrominance phase register"
      },
      {
        "type": "register",
        "name": "MRSZ_SCALE_LUT_ADDR",
        "offset": "0xc28",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "scale_lut_addr",
            "bit_range": "5:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Pointer to entry of lookup table\n"
          }
        ],
        "description": "Address pointer of up-scaling look up table"
      },
      {
        "type": "register",
        "name": "MRSZ_SCALE_LUT",
        "offset": "0xc2c",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "scale_lut",
            "bit_range": "5:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Entry of lookup table at position scale_lut_addr. The\nlookup table must be filled with appropriate values before\nthe up- scaling functionality can be used.\n"
          }
        ],
        "description": "Entry of up-scaling look up table"
      },
      {
        "type": "register",
        "name": "MRSZ_CTRL_SHD",
        "offset": "0xc30",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "scale_vc_up_shd",
            "bit_range": "7",
            "attr": "r",
            "reset": "CALC",
            "description": "1: vertical chrominance upscaling selected\n0: vertical chrominance downscaling selected"
          },
          {
            "name": "scale_vy_up_shd",
            "bit_range": "6",
            "attr": "r",
            "reset": "CALC",
            "description": "1: vertical luminance upscaling selected\n0: vertical luminance downscaling selected"
          },
          {
            "name": "scale_hc_up_shd",
            "bit_range": "5",
            "attr": "r",
            "reset": "CALC",
            "description": "1: horizontal chrominance upscaling selected\n0: horizontal chrominance downscaling selected"
          },
          {
            "name": "scale_hy_up_shd",
            "bit_range": "4",
            "attr": "r",
            "reset": "CALC",
            "description": "1: horizontal luminance upscaling selected\n0: horizontal luminance downscaling selected"
          },
          {
            "name": "scale_vc_enable_shd",
            "bit_range": "3",
            "attr": "r",
            "reset": "CALC",
            "description": "0: bypass vertical chrominance scaling unit\n1: enable vertical chrominance scaling unit\n"
          },
          {
            "name": "scale_vy_enable_shd",
            "bit_range": "2",
            "attr": "r",
            "reset": "CALC",
            "description": "0: bypass vertical luminance scaling unit\n1: enable vertical luminance scaling unit\n\n"
          },
          {
            "name": "scale_hc_enable_shd",
            "bit_range": "1",
            "attr": "r",
            "reset": "CALC",
            "description": "0: bypass horizontal chrominance scaling unit\n1: enable horizontal chrominance scaling unit"
          },
          {
            "name": "scale_hy_enable_shd",
            "bit_range": "0",
            "attr": "r",
            "reset": "CALC",
            "description": "0: bypass horizontal luminance scaling unit\n1: enable horizontal luminance scaling unit\n"
          }
        ],
        "description": "global control shadow register"
      },
      {
        "type": "register",
        "name": "MRSZ_SCALE_HY_SHD",
        "offset": "0xc34",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "scale_hy_shd",
            "bit_range": "15:0",
            "attr": "r",
            "reset": "CALC",
            "description": "This register is set to the horizontal luminance\ndownscale factor or to the reciprocal of the horizontal\nluminance upscale factor\n"
          }
        ],
        "description": "horizontal luminance scale factor shadow register"
      },
      {
        "type": "register",
        "name": "MRSZ_SCALE_HCB_SHD",
        "offset": "0xc38",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "scale_hcb_shd",
            "bit_range": "15:0",
            "attr": "r",
            "reset": "CALC",
            "description": "This register is set to the horizontal Cb downscale\nfactor or to the reciprocal of the horizontal Cb upscale\nfactor\n"
          }
        ],
        "description": "horizontal Cb scale factor shadow register"
      },
      {
        "type": "register",
        "name": "MRSZ_SCALE_HCR_SHD",
        "offset": "0xc3c",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "scale_hcr_shd",
            "bit_range": "15:0",
            "attr": "r",
            "reset": "CALC",
            "description": "This register is set to the horizontal Cr downscale\nfactor or to the reciprocal of the horizontal Cr upscale\nfactor"
          }
        ],
        "description": "horizontal Cr scale factor shadow register"
      },
      {
        "type": "register",
        "name": "MRSZ_SCALE_VY_SHD",
        "offset": "0xc40",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "scale_vy_shd",
            "bit_range": "15:0",
            "attr": "r",
            "reset": "CALC",
            "description": "This register is set to the vertical luminance\ndownscale factor or to the reciprocal of the vertical\nluminance upscale factor"
          }
        ],
        "description": "vertical luminance scale factor shadow register"
      },
      {
        "type": "register",
        "name": "MRSZ_SCALE_VC_SHD",
        "offset": "0xc44",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "scale_vc_shd",
            "bit_range": "15:0",
            "attr": "r",
            "reset": "CALC",
            "description": "This register is set to the vertical chrominance\ndownscale factor or to the reciprocal of the vertical\nchrominance upscale factor"
          }
        ],
        "description": "vertical chrominance scale factor shadow register"
      },
      {
        "type": "register",
        "name": "MRSZ_PHASE_HY_SHD",
        "offset": "0xc48",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "phase_hy_shd",
            "bit_range": "15:0",
            "attr": "r",
            "reset": "CALC",
            "description": "This register is set to the horizontal luminance phase\noffset"
          }
        ],
        "description": "horizontal luminance phase shadow register"
      },
      {
        "type": "register",
        "name": "MRSZ_PHASE_HC_SHD",
        "offset": "0xc4c",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "phase_hc_shd",
            "bit_range": "15:0",
            "attr": "r",
            "reset": "CALC",
            "description": "This register is set to the horizontal chrominance\nphase offset"
          }
        ],
        "description": "horizontal chrominance phase shadow register"
      },
      {
        "type": "register",
        "name": "MRSZ_PHASE_VY_SHD",
        "offset": "0xc50",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "phase_vy_shd",
            "bit_range": "15:0",
            "attr": "r",
            "reset": "CALC",
            "description": "This register is set to the vertical luminance phase\noffset\n"
          }
        ],
        "description": "vertical luminance phase shadow register"
      },
      {
        "type": "register",
        "name": "MRSZ_PHASE_VC_SHD",
        "offset": "0xc54",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "phase_vc_shd",
            "bit_range": "15:0",
            "attr": "r",
            "reset": "CALC",
            "description": "This register is set to the vertical chrominance phase\noffset\n"
          }
        ],
        "description": "vertical chrominance phase shadow register"
      },
      {
        "type": "register",
        "name": "SRSZ_CTRL",
        "offset": "0x1000",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "auto_upd",
            "bit_range": "9",
            "attr": "rw",
            "reset": "CALC",
            "description": "1: automatic register update at frame end enabled.\n0: automatic register update at frame end disabled."
          },
          {
            "name": "cfg_upd",
            "bit_range": "8",
            "attr": "rw",
            "reset": "CALC",
            "description": "write 0: nothing happens\nwrite 1: update shadow\nregisters read: always 0"
          },
          {
            "name": "scale_vc_up",
            "bit_range": "7",
            "attr": "rw",
            "reset": "CALC",
            "description": "1: vertical chrominance upscaling selected\n0: vertical chrominance downscaling selected"
          },
          {
            "name": "scale_vy_up",
            "bit_range": "6",
            "attr": "rw",
            "reset": "CALC",
            "description": "1: vertical luminance upscaling selected\n0: vertical luminance downscaling selected"
          },
          {
            "name": "scale_hc_up",
            "bit_range": "5",
            "attr": "rw",
            "reset": "CALC",
            "description": "1: horizontal chrominance upscaling selected\n0: horizontal chrominance downscaling selected"
          },
          {
            "name": "scale_hy_up",
            "bit_range": "4",
            "attr": "rw",
            "reset": "CALC",
            "description": "1: horizontal luminance upscaling selected\n0: horizontal luminance downscaling selected\n"
          },
          {
            "name": "scale_vc_enable",
            "bit_range": "3",
            "attr": "rw",
            "reset": "CALC",
            "description": "0: bypass vertical chrominance scaling unit\n1: enable vertical chrominance scaling unit"
          },
          {
            "name": "scale_vy_enable",
            "bit_range": "2",
            "attr": "rw",
            "reset": "CALC",
            "description": "0: bypass vertical luminance scaling unit\n1: enable vertical luminance scaling unit"
          },
          {
            "name": "scale_hc_enable",
            "bit_range": "1",
            "attr": "rw",
            "reset": "CALC",
            "description": "0: bypass horizontal chrominance scaling unit\n1: enable horizontal chrominance scaling unit"
          },
          {
            "name": "scale_hy_enable",
            "bit_range": "0",
            "attr": "rw",
            "reset": "CALC",
            "description": "0: bypass horizontal luminance scaling unit\n1: enable horizontal luminance scaling unit\n"
          }
        ],
        "description": "global control register"
      },
      {
        "type": "register",
        "name": "SRSZ_SCALE_HY",
        "offset": "0x1004",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "scale_hy",
            "bit_range": "15:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "This register is set to the horizontal luminance\ndownscale factor or to the reciprocal of the horizontal\nluminance upscale factor"
          }
        ],
        "description": "horizontal luminance scale factor register\nNote: The size of the output picture is calculated as follows: \nupscaling: (size_in - 1) / (size_out - 1)) = scale downscaling: (size_out - 1) / (size_in - 1)) \n\n= scale, \nwhere size_in/out is the width or height of the in/output picture. The value of the \n\nrespective SRSZ_SCALE register then has to be \nint(scale x 2^14) for upscaling and \nint(scale x 2^14)+1 for downscaling. \nFor downscaling this formula has no restriction. In upscaling processes the limit is factor 5. \n\nIf a format conversion is performed, the scale factors have to be different for the luminance \nand the chrominance component, respectively. For example, for a \n\nformat conversion from 4:2:2 to 4:2:0 the scale register value for the vertical \nchrominance component should be half of the vertical luminance scale register value. \n\n"
      },
      {
        "type": "register",
        "name": "SRSZ_SCALE_HCB",
        "offset": "0x1008",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "scale_hcb",
            "bit_range": "15:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "This register is set to the horizontal Cb downscale\nfactor or to the reciprocal of the horizontal Cb upscale\nfactor\n"
          }
        ],
        "description": "horizontal chrominance scale factor register"
      },
      {
        "type": "register",
        "name": "SRSZ_SCALE_HCR",
        "offset": "0x100c",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "scale_hcr",
            "bit_range": "15:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "This register is set to the horizontal Cr downscale\nfactor or to the reciprocal of the horizontal Cr upscale\nfactor\n"
          }
        ],
        "description": "horizontal chrominance scale factor register"
      },
      {
        "type": "register",
        "name": "SRSZ_SCALE_VY",
        "offset": "0x1010",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "scale_vy",
            "bit_range": "15:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "This register is set to the vertical luminance\ndownscale factor or to the reciprocal of the vertical\nluminance upscale factor\n"
          }
        ],
        "description": "vertical luminance scale factor register"
      },
      {
        "type": "register",
        "name": "SRSZ_SCALE_VC",
        "offset": "0x1014",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "scale_vc",
            "bit_range": "15:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "This register is set to the vertical chrominance\ndownscale factor or to the reciprocal of the vertical\nchrominance upscale factor"
          }
        ],
        "description": "vertical chrominance scale factor register"
      },
      {
        "type": "register",
        "name": "SRSZ_PHASE_HY",
        "offset": "0x1018",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "phase_hy",
            "bit_range": "15:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "This register is set to the horizontal luminance phase\noffset\n"
          }
        ],
        "description": "horizontal luminance phase register"
      },
      {
        "type": "register",
        "name": "SRSZ_PHASE_HC",
        "offset": "0x101c",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "phase_hc",
            "bit_range": "15:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "This register is set to the horizontal chrominance\nphase offset\n"
          }
        ],
        "description": "horizontal chrominance phase register"
      },
      {
        "type": "register",
        "name": "SRSZ_PHASE_VY",
        "offset": "0x1020",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "phase_vy",
            "bit_range": "15:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "This register is set to the vertical luminance phase\noffset\n"
          }
        ],
        "description": "vertical luminance phase register"
      },
      {
        "type": "register",
        "name": "SRSZ_PHASE_VC",
        "offset": "0x1024",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "phase_vc",
            "bit_range": "15:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "This register is set to the vertical chrominance phase\noffset"
          }
        ],
        "description": "vertical chrominance phase register"
      },
      {
        "type": "register",
        "name": "SRSZ_SCALE_LUT_ADDR",
        "offset": "0x1028",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "scale_lut_addr",
            "bit_range": "5:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Pointer to entry of lookup table\n"
          }
        ],
        "description": "Address pointer of up-scaling look up table"
      },
      {
        "type": "register",
        "name": "SRSZ_SCALE_LUT",
        "offset": "0x102c",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "scale_lut",
            "bit_range": "5:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Entry of lookup table at position scale_lut_addr.\nThe lookup table must be filled with appropriate\nvalues before the up- scaling functionality can be\nused.\n"
          }
        ],
        "description": "Entry of up-scaling look up table"
      },
      {
        "type": "register",
        "name": "SRSZ_CTRL_SHD",
        "offset": "0x1030",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "scale_vc_up_shd",
            "bit_range": "7",
            "attr": "r",
            "reset": "CALC",
            "description": "1: vertical chrominance upscaling selected\n0: vertical chrominance downscaling selected"
          },
          {
            "name": "scale_vy_up_shd",
            "bit_range": "6",
            "attr": "r",
            "reset": "CALC",
            "description": "1: vertical luminance upscaling selected\n0: vertical luminance downscaling selected"
          },
          {
            "name": "scale_hc_up_shd",
            "bit_range": "5",
            "attr": "r",
            "reset": "CALC",
            "description": "1: horizontal chrominance upscaling selected\n0: horizontal chrominance downscaling selected"
          },
          {
            "name": "scale_hy_up_shd",
            "bit_range": "4",
            "attr": "r",
            "reset": "CALC",
            "description": "1: horizontal luminance upscaling selected\n0: horizontal luminance downscaling selected"
          },
          {
            "name": "scale_vc_enable_shd",
            "bit_range": "3",
            "attr": "r",
            "reset": "CALC",
            "description": "0: bypass vertical chrominance scaling unit\n1: enable vertical chrominance scaling unit"
          },
          {
            "name": "scale_vy_enable_shd",
            "bit_range": "2",
            "attr": "r",
            "reset": "CALC",
            "description": "0: bypass vertical luminance scaling unit\n1: enable vertical luminance scaling unit\n"
          },
          {
            "name": "scale_hc_enable_shd",
            "bit_range": "1",
            "attr": "r",
            "reset": "CALC",
            "description": "0: bypass horizontal chrominance scaling unit\n1: enable horizontal chrominance scaling unit"
          },
          {
            "name": "scale_hy_enable_shd",
            "bit_range": "0",
            "attr": "r",
            "reset": "CALC",
            "description": "0: bypass horizontal luminance scaling unit\n1: enable horizontal luminance scaling unit\n"
          }
        ],
        "description": "global control shadow register"
      },
      {
        "type": "register",
        "name": "SRSZ_SCALE_HY_SHD",
        "offset": "0x1034",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "scale_hy_shd",
            "bit_range": "15:0",
            "attr": "r",
            "reset": "CALC",
            "description": "This register is set to the horizontal luminance\ndownscale factor or to the reciprocal of the horizontal\nluminance upscale factor\n"
          }
        ],
        "description": "horizontal luminance scale factor shadow register"
      },
      {
        "type": "register",
        "name": "SRSZ_SCALE_HCB_SHD",
        "offset": "0x1038",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "scale_hcb_shd",
            "bit_range": "15:0",
            "attr": "r",
            "reset": "CALC",
            "description": "This register is set to the horizontal Cb downscale\nfactor or to the reciprocal of the horizontal Cb upscale\nfactor\n"
          }
        ],
        "description": "horizontal Cb scale factor shadow register"
      },
      {
        "type": "register",
        "name": "SRSZ_SCALE_HCR_SHD",
        "offset": "0x103c",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "scale_hcr_shd",
            "bit_range": "15:0",
            "attr": "r",
            "reset": "CALC",
            "description": "This register is set to the horizontal r downscale\nfactor or to the reciprocal of the horizontal r upscale\nfactor"
          }
        ],
        "description": "horizontal Cr scale factor shadow register"
      },
      {
        "type": "register",
        "name": "SRSZ_SCALE_VY_SHD",
        "offset": "0x1040",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "scale_vy_shd",
            "bit_range": "15:0",
            "attr": "r",
            "reset": "CALC",
            "description": "This register is set to the vertical luminance\ndownscale factor or to the reciprocal of the vertical\nluminance upscale factor\n"
          }
        ],
        "description": "vertical luminance scale factor shadow register"
      },
      {
        "type": "register",
        "name": "SRSZ_SCALE_VC_SHD",
        "offset": "0x1044",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "scale_vc_shd",
            "bit_range": "15:0",
            "attr": "r",
            "reset": "CALC",
            "description": "This register is set to the vertical chrominance\ndownscale factor or to the reciprocal of the vertical\nchrominance upscale factor\n"
          }
        ],
        "description": "vertical chrominance scale factor shadow register"
      },
      {
        "type": "register",
        "name": "SRSZ_PHASE_HY_SHD",
        "offset": "0x1048",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "phase_hy_shd",
            "bit_range": "15:0",
            "attr": "r",
            "reset": "CALC",
            "description": "This register is set to the horizontal luminance phase\noffset\n"
          }
        ],
        "description": "horizontal luminance phase shadow register"
      },
      {
        "type": "register",
        "name": "SRSZ_PHASE_HC_SHD",
        "offset": "0x104c",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "phase_hc_shd",
            "bit_range": "15:0",
            "attr": "r",
            "reset": "CALC",
            "description": "This register is set to the horizontal chrominance\nphase offset"
          }
        ],
        "description": "horizontal chrominance phase shadow register"
      },
      {
        "type": "register",
        "name": "SRSZ_PHASE_VY_SHD",
        "offset": "0x1050",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "phase_vy_shd",
            "bit_range": "15:0",
            "attr": "r",
            "reset": "CALC",
            "description": "This register is set to the vertical luminance phase\noffset\n"
          }
        ],
        "description": "vertical luminance phase shadow register"
      },
      {
        "type": "register",
        "name": "SRSZ_PHASE_VC_SHD",
        "offset": "0x1054",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "phase_vc_shd",
            "bit_range": "15:0",
            "attr": "r",
            "reset": "CALC",
            "description": "This register is set to the vertical chrominance phase\noffset\n"
          }
        ],
        "description": "vertical chrominance phase shadow register"
      },
      {
        "type": "register",
        "name": "MI_CTRL",
        "offset": "0x1400",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "sp_output_format",
            "bit_range": "30:28",
            "attr": "rw",
            "reset": "CALC",
            "description": "Selects output format of self picture. For possible\nrestrictions see sub-chapter \"Picture Orientation\" in\nchapter \"Self Path Output Programming\".\n111: reserved\n110: RGB 888\n101: RGB 666\n100: RGB 565\n011: YCbCr 4:4:4\n010: YCbCr 4:2:2\n001: YCbCr 4:2:0\n000: YCbCr 4:0:0\nnote:\nProgrammed value becomes effective immediately. So\nwrite to the register only if no picture data is sent to the\nself path.\nfor RGB output format the SP input format must be\nYCbCr 4:2:2\n"
          },
          {
            "name": "sp_input_format",
            "bit_range": "27:26",
            "attr": "rw",
            "reset": "CALC",
            "description": "Selects input format of self picture. For possible\nrestrictions see sub-chapter \"Picture Orientation\" in\nchapter \"Self Path Output Programming\".\n\n11: YCbCr 4:4:4\n10: YCbCr 4:2:2\n01: YCbCr 4:2:0\n00: YCbCr 4:0:0\nnote: Programmed value becomes effective\nimmediately. So write to the register only if no picture data\nis sent to the self path."
          },
          {
            "name": "sp_write_format",
            "bit_range": "25:24",
            "attr": "rw",
            "reset": "CALC",
            "description": "Defines how YCbCr self picture data is written to\nmemory. Must be set to 00 if RGB conversion is active.\nNote that with RGB conversion active the output format is\nalways interleaved.\n00: planar\n01: semi planar, for YCbCr 4:2:x\n10: interleaved (combined), for YCbCr 4:2:2 only 11:\nreserved\nnote: Programmed value becomes effective\nimmediately. So write to the register only if no picture data\nis sent to the self path."
          },
          {
            "name": "mp_write_format",
            "bit_range": "23:22",
            "attr": "rw",
            "reset": "CALC",
            "description": "Defines how YCbCr main picture data is written to\nmemory. Ignored if JPEG data is chosen.\nIn YCbCr mode the following meaning is applicable 00:\nplanar\n01: semi planar, for YCbCr 4:2:x\n10: interleaved (combined), for YCbCr 4:2:2 only 11:\nreserved\nIn RAW data mode the following meaning is applicable\n00: RAW 8 bit\n01: reserved\n10: RAW 12 bit\n11: reserved\nnote: Programmed value becomes effective\nimmediately. So write to the register only if no picture data\nis sent to the main path.\n"
          },
          {
            "name": "init_offset_en",
            "bit_range": "21",
            "attr": "rw",
            "reset": "CALC",
            "description": "Enables updating of the offset counters shadow\nregisters for main and self picture to the programmed\nregister init values. MI_MP/SP_Y/CB/CR_OFFS_CNT_INIT\n-> MI_MP/SP_Y/CB/CR_OFFS_CNT_SHD\nThe update will be executed either when a forced\nsoftware update occurs (in register MI_INIT bit cfg_upd =\n1) or when an automatic config update signal arrives at\nthe MI input port. The latter is split into main and self\npicture. So only the corresponding main/self shadow\nregisters are affected.\nAfter a picture skip has been performed init_offset_en\nselects between skip restart and skip init mode (see bit\nskip in register MI_INIT)."
          },
          {
            "name": "init_base_en",
            "bit_range": "20",
            "attr": "rw",
            "reset": "CALC",
            "description": "Enables updating of the base address and buffer size\nshadow registers for main and self picture to the\nprogrammed register init values. MI_MP/SP_Y/CB/CR_BASE_AD_INIT\n-> MI_MP/SP_Y/CB/CR_BASE_AD_SHD MI_MP/SP_Y/CB/CR_SIZE_INIT\n-> MI_MP/SP_Y/CB/CR_SIZE_SHD\nThe update will be executed either when a forced\nsoftware update occurs (in register MI_INIT bit cfg_upd =\n1) or when an automatic config update signal arrives at\nthe MI input port. The latter is split into main and self\npicture. So only the corresponding main/self shadow\nregisters are affected."
          },
          {
            "name": "burst_len_chrom",
            "bit_range": "19:18",
            "attr": "rw",
            "reset": "CALC",
            "description": "Burst length for Cb or Cr data affecting write port.\n00: 4-beat bursts\n01: 8-beat bursts\n10: 16-beat bursts\n11: reserved\nIgnored if 8- or 16-beat bursts are not supported. If\nrotation is active, then only 4-beat bursts will be\ngenerated in self path, regardless of the setting here.\nnote: Programmed value becomes effective\nimmediately. So write to the register only if no picture data\nis sent to the main and self path."
          },
          {
            "name": "burst_len_lum",
            "bit_range": "17:16",
            "attr": "rw",
            "reset": "CALC",
            "description": "Burst length for Y, JPEG, or raw data affecting write\nport. 00: 4-beat bursts\n01: 8-beat bursts\n10: 16-beat bursts\n11: reserved\nIgnored if 8- or 16-beat bursts are not supported.\nnote: Programmed value becomes effective\nimmediately. So write to the register only if no picture data\nis sent to the main and self path.\n"
          },
          {
            "name": "last_pixel_sig_en",
            "bit_range": "15",
            "attr": "rw",
            "reset": "CALC",
            "description": "enables the last pixel signalization\n1: enabled\n0: disabled"
          },
          {
            "name": "sp_auto_update",
            "bit_range": "14",
            "attr": "rw",
            "reset": "CALC",
            "description": "automatic update of configuration registers for self\npath at frame end.\n1: enabled\n0: disabled"
          },
          {
            "name": "mp_auto_update",
            "bit_range": "13",
            "attr": "rw",
            "reset": "CALC",
            "description": "automatic update of configuration registers for main\npath at frame end.\n1: enabled\n0: disabled"
          },
          {
            "name": "sp_pingpong_enable",
            "bit_range": "12",
            "attr": "rw",
            "reset": "CALC",
            "description": "pingpong mode of configuration registers for self path\nat frame end.\n1: enabled\n0: disabled"
          },
          {
            "name": "mp_pingpong_enable",
            "bit_range": "11",
            "attr": "rw",
            "reset": "CALC",
            "description": "pingpong mode of configuration registers for main\npath at frame end.\n1: enabled\n0: disabled"
          },
          {
            "name": "422noncosited",
            "bit_range": "10",
            "attr": "rw",
            "reset": "CALC",
            "description": "Enables self path YCbCr422non-co-sited -> YCbCr444\ninterpolation\n1: YCbCr422 data are non_co-sited (Cb and Cr\nsamples are centered between Y samples) so modified\ninterpolation is activated\n0: YCbCr422 data are co-sited (Y0 Cb0 and Cr0 are\nsampled at the same position)\nnote: Programmed value becomes effective\nimmediately. So write to the register only if no picture data\nis sent to the self path."
          },
          {
            "name": "cbcr_full_range",
            "bit_range": "9",
            "attr": "rw",
            "reset": "CALC",
            "description": "Enables CbCr full range for self path YCbCr -> RGB\nconversion\n1: CbCr have full range (0..255)\n0: CbCr have compressed range range (16..240)\nnote: Programmed value becomes effective\nimmediately. So write to the register only if no picture data\nis sent to the self path."
          },
          {
            "name": "y_full_range",
            "bit_range": "8",
            "attr": "rw",
            "reset": "CALC",
            "description": "Enables Y full range for self path YCbCr -> RGB\nconversion\n1: Y has full range (0..255)\n0: Y has compressed range (16..235)\nnote: Programmed value becomes effective\nimmediately. So write to the register only if no picture data\nis sent to the self path.\n"
          },
          {
            "name": "byte_swap",
            "bit_range": "7",
            "attr": "rw",
            "reset": "CALC",
            "description": "Enables change of byte order of the 32 bit output word\nat write port\n1: byte order is mirrored but the bit order within one\nbyte doesn\u201ft change\n0: no byte mirroring\nnote: Programmed value becomes effective\nimmediately. So write to the register only if no picture data\nis sent to the main and self path."
          },
          {
            "name": "rot",
            "bit_range": "6",
            "attr": "rw",
            "reset": "CALC",
            "description": "Rotation 90 degree counter clockwise of self picture,\nonly in RGB mode. For picture orientation and operation\nmodes see sub-chapter \"Picture Orientation\" in chapter\n\"Self Path Output Programming\".\nFor RGB 565 format the line length must be a multiple\nof 2. There are no restrictions for RGB 888/666.\n1: enabled\n0: disabled\nnote: Programmed value becomes effective\nimmediately. So write to the register only if no picture\ndata is sent to the self path. In rotation mode only 4-beat\nbursts are supported for self- path."
          },
          {
            "name": "v_flip",
            "bit_range": "5",
            "attr": "rw",
            "reset": "CALC",
            "description": "Vertical flipping of self picture. For picture orientation\nand operation modes see sub-chapter \"Picture\nOrientation\" in chapter \"Self Path Output Programming\".\nFor Y component the line length in 4:2:x planar mode\nmust be a multiple of 8, for all other component modes a\nmultiple of 4 and for RGB 565 a multiple of 2. There are no\nrestrictions for RGB 888/666.\n1: enabled\n0: disabled\nnote: Programmed value becomes effective\nimmediately. So write to the register only if no picture\ndata is sent to the self path."
          },
          {
            "name": "h_flip",
            "bit_range": "4",
            "attr": "rw",
            "reset": "CALC",
            "description": "Horizontal flipping of self picture. For picture\norientation and operation modes see sub-chapter \"Picture\nOrientation\" in chapter \"Self Path Output Programming\".\nFor Y component the line length in 4:2:x planar mode\nmust be a multiple of 8, for all other component modes a\nmultiple of 4 and for RGB 565 a multiple of 2. There are no\nrestrictions for RGB 888/666.\n1: enabled\n0: disabled\nnote: Programmed value becomes effective\nimmediately. So write to the register only if no picture\ndata is sent to the self path.\n"
          },
          {
            "name": "path_enable",
            "bit_range": "3:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Enables data pathes of MI according to the following\ntable:\n\n0000: disabled, no data is transferred\n0001: YUV data output, mainpath only (mp_enable\nonly) 0010: self-path only, output data format depending\non other settings (sp_enable only)\n0011: YUV data output in mainpath and self-path\nimage data active\n0100: JPEG data output, mainpath only (jpeg_enable\nonly) 0101: not allowed\n0110: JPEG data output in mainpath and self-path\nimage data active\n0111: not allowed\n1000: RAW data output, mainpath only (raw_enable\nonly) 1001: defect pixel data on self-path, image data on\nmainpath 1010: defect pixel data on mainpath, image\ndata on self-path 1011: not allowed\n1100: defect pixel data on self-path, JPEG data on\nmainpath 1101: defect pixel data on mainpath only\n1110: defect pixel data on self-path only\n1111: defect pixel data on self-path, RAW data on\nmainpath\nProgrammed value becomes effective (visible in\nshadow register) after a soft reset, a forced software\nupdate or an automatic config update. Affects MI_IN and MI_OUT module.\n\n"
          }
        ],
        "description": "Global control register"
      },
      {
        "type": "register",
        "name": "MI_INIT",
        "offset": "0x1404",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "mi_cfg_upd",
            "bit_range": "4",
            "attr": "w",
            "reset": "CALC",
            "description": "Forced configuration update. Leads to an immediate\nupdate of the shadow registers.\nDepending on the two init enable bits in the MI_CTRL\nregister (init_offset_en and init_base_en) the offset\ncounter, base address and buffer size shadow registers\nare also updated."
          },
          {
            "name": "mi_skip",
            "bit_range": "2",
            "attr": "w",
            "reset": "CALC",
            "description": "Skip of current or next starting main picture:\nAborts writing of main picture image data of the\ncurrent frame to RAM (after the current burst transmission\nhas been completed). Further main picture data up to the\nend of the current frame are discarded.\n\nNo further makroblock line interrupt (mblk_line), no\nwrap around interrupt for main picture (wrap_mp_y/cb/cr) and no fill level interrupt (fill_mp_y)\nare generated.\n\nSkip does not affect the generation of the main path\nframe end interrupt (mp_frame_end).\nSkip does not affect the processing of self picture and\nits corresponding interrupts namely the self path frame\nend interrupt (sp_frame_end).\n\nThe byte counter (register MI_BYTE_CNT) is not\naffected. It produces the correct number of JPEG or RAW\ndata bytes at the end of the current (skipped) frame.\nAfter a skip has been performed the offset counter for\nthe main picture at the start of the following frame are set\ndepending on the bit init_offset_en in register MI_CTRL:\nSkip restart mode (init_offset_en = 0)\nThe offset counters of the main picture are restarted\nat the old start values of the previous skipped frame.\nSkip init mode (init_offset_en = 1)\nThe offset counters of the main picture are initialized\nwith the register contents of the offset counter init\nregisters without any additional forced software update or\nautomatic config update."
          }
        ],
        "description": "Control register for address init and skip function"
      },
      {
        "type": "register",
        "name": "MI_MP_Y_BASE_AD_INIT",
        "offset": "0x1408",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "mp_y_base_ad_init",
            "bit_range": "31:3",
            "attr": "rw",
            "reset": "CALC",
            "description": "Base address of main picture Y component ring\nbuffer, JPEG ring buffer or raw data ring buffer.\nProgrammed value becomes effective (visible in\ncorresponding shadow register) after a soft reset, a forced\nsoftware update or an automatic config update."
          }
        ],
        "description": "Base address for main picture Y component, JPEG or raw data\nNote: This register protects from non-aligned access. The bits 0 to 2 are hard wired to \n\"000\". As a consequence any byte address that is written to the register will automatically be \nre-mapped to the next lower 64 bit aligned address: write(MI_MP_Y_BASE_AD_INIT, \naddress_value) is equivalent to write(MI_Y_BASE_AD_INIT, address_value & 0xFFFFFFF8). \nAnyhow, in order to avoid confusion it is NOT recommended to use non-aligned address values \nfor access. It is also NOT recommended to actively consider the register slice for register \naccess in order to avoid unneccessary mask and shift operations. \n\nIn addition, if ISP provides AXI interfaces the programmed base address shall be \n\nburst aligned with respect to the burst length configured in MI_CTRL . \n\nSet control bit init_base_en before updating so that a forced or automatic update can take \n\neffect. \n"
      },
      {
        "type": "register",
        "name": "MI_MP_Y_SIZE_INIT",
        "offset": "0x140c",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "mp_y_size_init",
            "bit_range": "28:3",
            "attr": "rw",
            "reset": "CALC",
            "description": "Size of main picture Y component ring buffer, JPEG\nring buffer or raw data ring buffer.\nProgrammed value becomes effective (visible in\ncorresponding shadow register) after a soft reset, a\nforced software update or an automatic config update."
          }
        ],
        "description": "Size of main picture Y component, JPEG or raw data\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \nregister description for details. \n\nSet control bit init_base_en before updating so that a forced or automatic update can take \neffect. \n\n \n\n"
      },
      {
        "type": "register",
        "name": "MI_MP_Y_OFFS_CNT_INIT",
        "offset": "0x1410",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "mp_y_offs_cnt_init",
            "bit_range": "28:3",
            "attr": "rw",
            "reset": "CALC",
            "description": "Offset counter init value of main picture Y component\nring buffer, JPEG ring buffer or raw data ring buffer.\nProgrammed value becomes effective (visible in\ncorresponding shadow register) after a soft reset, a forced\nsoftware update or an automatic config update."
          }
        ],
        "description": "Offset counter init value for main picture Y, JPEG or raw data\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \nregister description for details. \n\nSet control bit init_base_en before updating so that a forced or automatic update can \n\ntake effect. Check exceptional handling in skip modes. \n\n"
      },
      {
        "type": "register",
        "name": "MI_MP_Y_OFFS_CNT_START",
        "offset": "0x1414",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "mp_y_offs_cnt_start",
            "bit_range": "28:3",
            "attr": "r",
            "reset": "CALC",
            "description": "Offset counter value which points to the start address\nof the previously processed picture (main picture Y\ncomponent, JPEG or raw data). Updated at frame end.\nNote: A soft reset resets the contents to the reset\nvalue."
          }
        ],
        "description": "Offset counter start value for main picture Y, JPEG or raw data\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \nregister description for details. \n\n \n"
      },
      {
        "type": "register",
        "name": "MI_MP_Y_IRQ_OFFS_INIT",
        "offset": "0x1418",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "mp_y_irq_offs_init",
            "bit_range": "28:3",
            "attr": "rw",
            "reset": "CALC",
            "description": "Reaching this programmed value by the current offset\ncounter for addressing main picture Y component, JPEG or\nraw data leads to generation of fill level interrupt fill_mp_y.\nProgrammed value becomes effective (visible in\ncorresponding shadow register) after a soft reset, a\nforced software update or an automatic config update."
          }
        ],
        "description": "Fill level interrupt offset value for main picture Y, JPEG or raw data\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \nregister description for details. \n\n \n"
      },
      {
        "type": "register",
        "name": "MI_MP_CB_BASE_AD_INIT",
        "offset": "0x141c",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "mp_cb_base_ad_init",
            "bit_range": "31:3",
            "attr": "rw",
            "reset": "CALC",
            "description": "Base address of main picture Cb component ring\nbuffer. Programmed value becomes effective (visible in\ncorresponding shadow register) after a soft reset, a forced\nsoftware update or an automatic config update.\nnote: Set control bit init_base_en before\nupdating so that a forced or automatic update can\ntake effect."
          }
        ],
        "description": "Base address for main picture Cb component ring buffer\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \nregister description for details. \n\nRefer also to MI_MP_Y_BASE_AD_INIT with respect to the burst alignment restriction for \nAXI. \n\n \n"
      },
      {
        "type": "register",
        "name": "MI_MP_CB_SIZE_INIT",
        "offset": "0x1420",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "mp_cb_size_init",
            "bit_range": "27:3",
            "attr": "rw",
            "reset": "CALC",
            "description": ".\nProgrammed value becomes effective (visible in\ncorresponding shadow register) after a soft reset, a forced\nsoftware update or an automatic config update.\nNote: Set control bit init_base_en before updating so\nthat a forced or automatic update can take effect."
          }
        ],
        "description": "Size of main picture Cb component ring buffer\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \nregister description for details. \n\n \n"
      },
      {
        "type": "register",
        "name": "MI_MP_CB_OFFS_CNT_INIT",
        "offset": "0x1424",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "mp_cb_offs_cnt_init",
            "bit_range": "27:3",
            "attr": "rw",
            "reset": "CALC",
            "description": "Offset counter init value of main picture Cb component\nring buffer.\nProgrammed value becomes effective (visible in\ncorresponding shadow register) after a soft reset, a forced\nsoftware update or an automatic config update.\nNote: Set control bit init_base_en before updating so\nthat a forced or automatic update can take effect. Check\nexceptional handling in skip modes."
          }
        ],
        "description": "Offset counter init value for main picture Cb component ring buffer\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \nregister description for details. \n\n \n"
      },
      {
        "type": "register",
        "name": "MI_MP_CB_OFFS_CNT_START",
        "offset": "0x1428",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "mp_cb_offs_cnt_start",
            "bit_range": "27:3",
            "attr": "r",
            "reset": "CALC",
            "description": "Offset counter value which points to the start address\nof the previously processed picture (main picture Cb\ncomponent). Updated at frame end."
          }
        ],
        "description": "Offset counter start value for main picture Cb component ring buffer\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \nregister description for details. \n\n \n"
      },
      {
        "type": "register",
        "name": "MI_MP_CR_BASE_AD_INIT",
        "offset": "0x142c",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "mp_cr_base_ad_init",
            "bit_range": "31:3",
            "attr": "rw",
            "reset": "CALC",
            "description": "Base address of main picture Cr component ring\nbuffer. Programmed value becomes effective (visible in\ncorresponding shadow register) after a soft reset, a forced\nsoftware update or an automatic config update.\nNote: Set control bit init_base_en before updating so\nthat a forced or automatic update can take effect."
          }
        ],
        "description": "Base address for main picture Cr component ring buffer\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \nregister description for details. \n\nRefer also to MI_MP_Y_BASE_AD_INIT with respect to the burst alignment restriction for \nAXI. \n\n \n"
      },
      {
        "type": "register",
        "name": "MI_MP_CR_SIZE_INIT",
        "offset": "0x1430",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "mp_cr_size_init",
            "bit_range": "27:3",
            "attr": "rw",
            "reset": "CALC",
            "description": ".\nProgrammed value becomes effective (visible in\ncorresponding shadow register) after a soft reset, a forced\nsoftware update or an automatic config update.\nNote: Set control bit init_base_en before updating so\nthat a forced or automatic update can take effect.\n"
          }
        ],
        "description": "Size of main picture Cr component ring buffer\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \nregister description for details. \n\n \n"
      },
      {
        "type": "register",
        "name": "MI_MP_CR_OFFS_CNT_INIT",
        "offset": "0x1434",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "mp_cr_offs_cnt_init",
            "bit_range": "27:3",
            "attr": "rw",
            "reset": "CALC",
            "description": "Offset counter init value of main picture Cr component\nring buffer.\nProgrammed value becomes effective (visible in\ncorresponding shadow register) after a soft reset, a forced\nsoftware update or an automatic config update.\nNote: Set control bit init_base_en before updating so\nthat a forced or automatic update can take effect. Check\nexceptional handling in skip modes."
          }
        ],
        "description": "Offset counter init value for main picture Cr component ring buffer\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \nregister description for details. \n\n \n"
      },
      {
        "type": "register",
        "name": "MI_MP_CR_OFFS_CNT_START",
        "offset": "0x1438",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "mp_cr_offs_cnt_start",
            "bit_range": "27:3",
            "attr": "r",
            "reset": "CALC",
            "description": "Offset counter value which points to the start address\nof the previously processed picture (main picture Cr\ncomponent). Updated at frame end.\nNote: Soft reset will reset the contents to reset value.\n"
          }
        ],
        "description": "Offset counter start value for main picture Cr component ring buffer\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \nregister description for details. \n\n \n"
      },
      {
        "type": "register",
        "name": "MI_SP_Y_BASE_AD_INIT",
        "offset": "0x143c",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "sp_y_base_ad_init",
            "bit_range": "31:3",
            "attr": "rw",
            "reset": "CALC",
            "description": "Base address of self picture Y component ring buffer.\nProgrammed value becomes effective (visible in\ncorresponding shadow register) after a soft reset, a forced\nsoftware update or an automatic config update.\nnote: Set control bit init_base_en before\nupdating so that a forced or automatic update can\ntake effect."
          }
        ],
        "description": "Base address for self picture Y component ring buffer\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \nregister description for details. \n\nRefer also to MI_MP_Y_BASE_AD_INIT with respect to the burst alignment restriction for \nAXI. \n\n \n"
      },
      {
        "type": "register",
        "name": "MI_SP_Y_SIZE_INIT",
        "offset": "0x1440",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "sp_y_size_init",
            "bit_range": "28:3",
            "attr": "rw",
            "reset": "CALC",
            "description": ".\nProgrammed value becomes effective (visible in\ncorresponding shadow register) after a soft reset, a forced\nsoftware update or an automatic config update.\nNote: Set control bit init_base_en before updating so\nthat a forced or automatic update can take effect.\n"
          }
        ],
        "description": "Size of self picture Y component ring buffer\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \nregister description for details. \n\n \n"
      },
      {
        "type": "register",
        "name": "MI_SP_Y_OFFS_CNT_INIT",
        "offset": "0x1444",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "sp_y_offs_cnt_init",
            "bit_range": "28:3",
            "attr": "rw",
            "reset": "CALC",
            "description": "Offset counter init value of self picture Y component\nring buffer. Programmed value becomes effective (visible\nin corresponding shadow register) after a soft reset, a\nforced software update or an automatic config update.\nNote: Set control bit init_base_en before updating so\nthat a forced or automatic update can take effect."
          }
        ],
        "description": "Offset counter init value for self picture Y component ring buffer\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \nregister description for details. \n\n \n"
      },
      {
        "type": "register",
        "name": "MI_SP_Y_OFFS_CNT_START",
        "offset": "0x1448",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "sp_y_offs_cnt_start",
            "bit_range": "28:3",
            "attr": "r",
            "reset": "CALC",
            "description": "Offset counter value which points to the start address\nof the previously processed picture (self picture Y\ncomponent).\nUpdated at frame end.\nNote: Soft reset will reset the contents to reset value.\n"
          }
        ],
        "description": "Offset counter start value for self picture Y component ring buffer\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \nregister description for details. \n\n \n"
      },
      {
        "type": "register",
        "name": "MI_SP_Y_LLENGTH",
        "offset": "0x144c",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "sp_y_llength",
            "bit_range": "14:0",
            "attr": "rw",
            "reset": "CALC",
            "description": " or RGB picture\nin pixel, also known as line stride.\nIf no line stride is used, line length must match image\nwidth.\nFor Y component the line length in 4:2:x planar mode\nmust be a multiple of 8, for all other component modes a\nmultiple of 4 and for RGB 565 a multiple of 2. There are no\nrestrictions for RGB 888/666.\nIn planar mode the line length of the Cb and Cr\ncomponent is assumed according to the YCbCr format, i.e.\nhalf for 4:2:x and the same size for 4:4:4. In semi planar\n4:2:x mode the line length of the Cb and Cr component is\nassumed the same size. Note: Line length always refers to\nthe line length of the output image. This is particularly\nimportant when rotating."
          }
        ],
        "description": "Line length of self picture Y component\nNote: Programmed value becomes effective \nimmediately. So write to the register only if no picture data \nis sent to the self path. \n\n \n\n"
      },
      {
        "type": "register",
        "name": "MI_SP_CB_BASE_AD_INIT",
        "offset": "0x1450",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "sp_cb_base_ad_init",
            "bit_range": "31:3",
            "attr": "rw",
            "reset": "CALC",
            "description": "Base address of self picture Cb component ring buffer.\nProgrammed value becomes effective (visible in\ncorresponding shadow register) after a soft reset, a forced\nsoftware update or an automatic config update.\nNote: Set control bit init_base_en before updating so\nthat a forced or automatic update can take effect."
          }
        ],
        "description": "Base address for self picture Cb component ring buffer\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \nregister description for details. \n\nRefer also to MI_MP_Y_BASE_AD_INIT with respect to the burst alignment restriction for \nAXI. \n\n \n"
      },
      {
        "type": "register",
        "name": "MI_SP_CB_SIZE_INIT",
        "offset": "0x1454",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "sp_cb_size_init",
            "bit_range": "27:3",
            "attr": "rw",
            "reset": "CALC",
            "description": ".\nProgrammed value becomes effective (visible in\ncorresponding shadow register) after a soft reset, a forced\nsoftware update or an automatic config update.\nNote: Set control bit init_base_en before updating so\nthat a forced or automatic update can take effect."
          }
        ],
        "description": "Size of self picture Cb component ring buffer\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \nregister description for details. \n\n \n"
      },
      {
        "type": "register",
        "name": "MI_SP_CB_OFFS_CNT_INIT",
        "offset": "0x1458",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "sp_cb_offs_cnt_init",
            "bit_range": "27:3",
            "attr": "rw",
            "reset": "CALC",
            "description": "Offset counter init value of self picture Cb component\nring buffer.\nProgrammed value becomes effective (visible in\ncorresponding shadow register) after a soft reset, a forced\nsoftware update or an automatic config update.\nNote: Set control bit init_base_en before updating so\nthat a forced or automatic update can take effect."
          }
        ],
        "description": "Offset counter init value for self picture Cb component ring buffer\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \nregister description for details. \n\n \n \n"
      },
      {
        "type": "register",
        "name": "MI_SP_CB_OFFS_CNT_START",
        "offset": "0x145c",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "sp_cb_offs_cnt_start",
            "bit_range": "27:3",
            "attr": "r",
            "reset": "CALC",
            "description": "Offset counter value which points to the start address\nof the previously processed picture (self picture Cb\ncomponent). Updated at frame end.\nNote: Soft reset will reset the contents to reset value."
          }
        ],
        "description": "Offset counter start value for self picture Cb component ring buffer\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \nregister description for details. \n\n \n\n"
      },
      {
        "type": "register",
        "name": "MI_SP_CR_BASE_AD_INIT",
        "offset": "0x1460",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "sp_cr_base_ad_init",
            "bit_range": "31:3",
            "attr": "rw",
            "reset": "CALC",
            "description": "Base address of self picture Cr component ring buffer.\nProgrammed value becomes effective (visible in\ncorresponding shadow register) after a soft reset, a forced\nsoftware update or an automatic config update.\nNote: Set control bit init_base_en before updating so\nthat a forced or automatic update can take effect."
          }
        ],
        "description": "Base address for self picture Cr component ring buffer\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \nregister description for details. \n\nRefer also to MI_MP_Y_BASE_AD_INIT with respect to the burst alignment restriction for \nAXI. \n\n \n"
      },
      {
        "type": "register",
        "name": "MI_SP_CR_SIZE_INIT",
        "offset": "0x1464",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "sp_cr_size_init",
            "bit_range": "27:3",
            "attr": "rw",
            "reset": "CALC",
            "description": ".\nProgrammed value becomes effective (visible in\ncorresponding shadow register) after a soft reset, a forced\nsoftware update or an automatic config update.\nNote: Set control bit init_base_en before updating so\nthat a forced or automatic update can take effect."
          }
        ],
        "description": "Size of self picture Cr component ring buffer\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \nregister description for details. \n\n \n"
      },
      {
        "type": "register",
        "name": "MI_SP_CR_OFFS_CNT_INIT",
        "offset": "0x1468",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "sp_cr_offs_cnt_init",
            "bit_range": "27:3",
            "attr": "rw",
            "reset": "CALC",
            "description": "Offset counter init value of self picture Cr component\nring buffer. Programmed value becomes effective (visible\nin corresponding shadow register) after a soft reset, a\nforced software update or an automatic config update.\nNote: Set control bit init_base_en before updating so\nthat a forced or automatic update can take effect."
          }
        ],
        "description": "Offset counter init value for self picture Cr component ring buffer\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \n\nregister description for details. \n\n \n"
      },
      {
        "type": "register",
        "name": "MI_SP_CR_OFFS_CNT_START",
        "offset": "0x146c",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "sp_cr_offs_cnt_start",
            "bit_range": "27:3",
            "attr": "r",
            "reset": "CALC",
            "description": "Offset counter value which points to the start address\nof the previously processed picture (self picture Cr\ncomponent).\nUpdated at frame end."
          }
        ],
        "description": "Offset counter start value for self picture Cr component ring buffer\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \n\nregister description for details. \n\n \n \n\n \n"
      },
      {
        "type": "register",
        "name": "MI_BYTE_CNT",
        "offset": "0x1470",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "byte_cnt",
            "bit_range": "27:0",
            "attr": "r",
            "reset": "CALC",
            "description": "Counter value specifies the number of JPEG or RAW\ndata bytes of the last transmitted frame. Updated at frame\nend. A soft reset will set the byte counter to zero.\n"
          }
        ],
        "description": "Counter value of JPEG or RAW data bytes"
      },
      {
        "type": "register",
        "name": "MI_CTRL_SHD",
        "offset": "0x1474",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "path_enable_out",
            "bit_range": "19:16",
            "attr": "r",
            "reset": "CALC",
            "description": "path_enable shadow register for module MI_OUT\n(former raw_enable_out, jpeg_enable_out, sp_enable_out, mp_enable_out)"
          },
          {
            "name": "path_enable_in",
            "bit_range": "3:0",
            "attr": "r",
            "reset": "CALC",
            "description": "path_enable shadow register for module MI_IN\n(former raw_enable_in, jpeg_enable_in, sp_enable_in, mp_enable_in)"
          }
        ],
        "description": "global control internal shadow register"
      },
      {
        "type": "register",
        "name": "MI_MP_Y_BASE_AD_SHD",
        "offset": "0x1478",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "mp_y_base_ad",
            "bit_range": "31:3",
            "attr": "r",
            "reset": "CALC",
            "description": "Base address of main picture Y component ring buffer,\nJPEG ring buffer or raw data ring buffer."
          }
        ],
        "description": "Base address shadow register for main picture Y \n\ncomponent, JPEG or raw data ring buffer\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \n\nregister description for details. \n\n"
      },
      {
        "type": "register",
        "name": "MI_MP_Y_SIZE_SHD",
        "offset": "0x147c",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "mp_y_size",
            "bit_range": "28:3",
            "attr": "r",
            "reset": "CALC",
            "description": "Size of main picture Y component ring buffer, JPEG\nring buffer or raw data ring buffer.\n\n"
          }
        ],
        "description": "Size shadow register of main picture Y component, JPEG \n\nor raw data\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \n\nregister description for details. \n\n \n"
      },
      {
        "type": "register",
        "name": "MI_MP_Y_OFFS_CNT_SHD",
        "offset": "0x1480",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "mp_y_offs_cnt",
            "bit_range": "28:3",
            "attr": "r",
            "reset": "CALC",
            "description": "Current offset counter of main picture Y component,\nJPEG or raw data ring buffer for address generation\nNote: Soft reset will reset the contents to reset value."
          }
        ],
        "description": "Current offset counter of main picture Y component, JPEG \n\nor raw data ring buffer\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \n\nregister description for details. \n\n \n"
      },
      {
        "type": "register",
        "name": "MI_MP_Y_IRQ_OFFS_SHD",
        "offset": "0x1484",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "mp_y_irq_offs",
            "bit_range": "28:3",
            "attr": "r",
            "reset": "CALC",
            "description": "Reaching this offset value by the current offset\ncounter for addressing main picture Y component, JPEG or\nraw data leads to generation of fill level interrupt fill_mp_y."
          }
        ],
        "description": "Shadow register of fill level interrupt offset value for main \n\npicture Y component, JPEG or raw data\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \n\nregister description for details. \n\n"
      },
      {
        "type": "register",
        "name": "MI_MP_CB_BASE_AD_SHD",
        "offset": "0x1488",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "mp_cb_base_ad",
            "bit_range": "31:3",
            "attr": "r",
            "reset": "CALC",
            "description": "Base address of main picture Cb component ring\nbuffer."
          }
        ],
        "description": "Base address shadow register for main picture Cb \n\ncomponent ring buffer\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \n\nregister description for details. \n\n \n"
      },
      {
        "type": "register",
        "name": "MI_MP_CB_SIZE_SHD",
        "offset": "0x148c",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "mp_cb_size",
            "bit_range": "27:3",
            "attr": "r",
            "reset": "CALC",
            "description": "Size of main picture Cb component ring buffer."
          }
        ],
        "description": "Size shadow register of main picture Cb component ring buffer\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \n\nregister description for details. \n\n \n"
      },
      {
        "type": "register",
        "name": "MI_MP_CB_OFFS_CNT_SHD",
        "offset": "0x1490",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "mp_cb_offs_cnt",
            "bit_range": "27:3",
            "attr": "r",
            "reset": "CALC",
            "description": "Current offset counter of main picture Cb component\nring buffer for address generation\nNote: Soft reset will reset the contents to reset value."
          }
        ],
        "description": "Current offset counter of main picture Cb component ring buffer\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \n\nregister description for details. \n\n"
      },
      {
        "type": "register",
        "name": "MI_MP_CR_BASE_AD_SHD",
        "offset": "0x1494",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "mp_cr_base_ad",
            "bit_range": "31:3",
            "attr": "r",
            "reset": "CALC",
            "description": "Base address of main picture Cr component ring\nbuffer."
          }
        ],
        "description": "Base address shadow register for main picture Cr \n\ncomponent ring buffer\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \n\nregister description for details. \n\n \n"
      },
      {
        "type": "register",
        "name": "MI_MP_CR_SIZE_SHD",
        "offset": "0x1498",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "mp_cr_size",
            "bit_range": "27:3",
            "attr": "r",
            "reset": "CALC",
            "description": "Size of main picture Cr component ring buffer."
          }
        ],
        "description": "Size shadow register of main picture Cr component ring buffer\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \n\nregister description for details. \n\n \n"
      },
      {
        "type": "register",
        "name": "MI_MP_CR_OFFS_CNT_SHD",
        "offset": "0x149c",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "mp_cr_offs_cnt",
            "bit_range": "27:3",
            "attr": "r",
            "reset": "CALC",
            "description": "Current offset counter of main picture Cr component\nring buffer for address generation\nNote: Soft reset will reset the contents to reset value."
          }
        ],
        "description": "Current offset counter of main picture Cr component ring buffer\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \n\nregister description for details. \n\n"
      },
      {
        "type": "register",
        "name": "MI_SP_Y_BASE_AD_SHD",
        "offset": "0x14a0",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "sp_y_base_ad",
            "bit_range": "31:3",
            "attr": "r",
            "reset": "CALC",
            "description": "Base address of self picture Y component ring buffer."
          }
        ],
        "description": "Base address shadow register for self picture Y \n\ncomponent ring buffer\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \n\nregister description for details. \n\n \n"
      },
      {
        "type": "register",
        "name": "MI_SP_Y_SIZE_SHD",
        "offset": "0x14a4",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "sp_y_size",
            "bit_range": "28:3",
            "attr": "r",
            "reset": "CALC",
            "description": "Size of self picture Y component ring buffer."
          }
        ],
        "description": "Size shadow register of self picture Y component ring buffer\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \n\nregister description for details. \n\n \n"
      },
      {
        "type": "register",
        "name": "MI_SP_Y_OFFS_CNT_SHD",
        "offset": "0x14a8",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "sp_y_offs_cnt",
            "bit_range": "28:3",
            "attr": "r",
            "reset": "CALC",
            "description": "Current offset counter of self picture Y component\nring buffer for address generation\nNote: Soft reset will reset the contents to reset value."
          }
        ],
        "description": "Current offset counter of self picture Y component ring buffer\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \n\nregister description for details. \n\n"
      },
      {
        "type": "register",
        "name": "MI_SP_CB_BASE_AD_SHD",
        "offset": "0x14b0",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "sp_cb_base_ad",
            "bit_range": "31:3",
            "attr": "r",
            "reset": "CALC",
            "description": "Base address of self picture Cb component ring buffer."
          }
        ],
        "description": "Base address shadow register for self picture Cb \n\ncomponent ring buffer\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \n\nregister description for details. \n\n \n"
      },
      {
        "type": "register",
        "name": "MI_SP_CB_SIZE_SHD",
        "offset": "0x14b4",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "sp_cb_size",
            "bit_range": "27:3",
            "attr": "r",
            "reset": "CALC",
            "description": "Size of self picture Cb component ring buffer."
          }
        ],
        "description": "Size shadow register of self picture Cb component ring buffer\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \n\nregister description for details. \n\n \n"
      },
      {
        "type": "register",
        "name": "MI_SP_CB_OFFS_CNT_SHD",
        "offset": "0x14b8",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "sp_cb_offs_cnt",
            "bit_range": "27:3",
            "attr": "r",
            "reset": "CALC",
            "description": "Current offset counter of self picture Cb component\nring buffer for address generation\nNote: Soft reset will reset the contents to reset value."
          }
        ],
        "description": "Current offset counter of self picture Cb component ring buffer\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \n\nregister description for details. \n\n"
      },
      {
        "type": "register",
        "name": "MI_SP_CR_BASE_AD_SHD",
        "offset": "0x14bc",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "sp_cr_base_ad",
            "bit_range": "31:3",
            "attr": "r",
            "reset": "CALC",
            "description": "Base address of self picture Cr component ring buffer."
          }
        ],
        "description": "Base address shadow register for self picture Cr \n\ncomponent ring buffer\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \n\nregister description for details. \n\n \n"
      },
      {
        "type": "register",
        "name": "MI_SP_CR_SIZE_SHD",
        "offset": "0x14c0",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "sp_cr_size",
            "bit_range": "27:3",
            "attr": "r",
            "reset": "CALC",
            "description": "Size of self picture Cr component ring buffer."
          }
        ],
        "description": "Size shadow register of self picture Cr component ring buffer\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \n\nregister description for details. \n\n \n"
      },
      {
        "type": "register",
        "name": "MI_SP_CR_OFFS_CNT_SHD",
        "offset": "0x14c4",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "sp_cr_offs_cnt",
            "bit_range": "27:3",
            "attr": "r",
            "reset": "CALC",
            "description": "Current offset counter of self picture Cr component\nring buffer for address generation\nNote: Soft reset will reset the contents to reset value."
          }
        ],
        "description": "Current offset counter of self picture Cr component ring buffer\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \n\nregister description for details. \n\n"
      },
      {
        "type": "register",
        "name": "MI_DMA_Y_PIC_START_AD",
        "offset": "0x14c8",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "dma_y_pic_start_ad",
            "bit_range": "31:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Image start address of the y component"
          }
        ],
        "description": "Y component image start address\nNote: Must be multiple of 4 in interleaved mode. \n\n \n"
      },
      {
        "type": "register",
        "name": "MI_DMA_Y_PIC_WIDTH",
        "offset": "0x14cc",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "dma_y_pic_width",
            "bit_range": "14:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Image width of the Y component in pixel.\nFor YCbCr 4:2:x the image width must be a multiple of\n2.\nIn planar mode the image width of the Cb and Cr\ncomponent is assumed according to the YCbCr format, i.e.\nhalf for 4:2:x and the same size for 4:4:4. In semi planar\n4:2:x mode the image width of the Cb component (which\nincludes Cr) is assumed the same size. In interleave mode\nno Cb/Cr image width is used.\n"
          }
        ],
        "description": "Y component image width"
      },
      {
        "type": "register",
        "name": "MI_DMA_Y_LLENGTH",
        "offset": "0x14d0",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "dma_y_llength",
            "bit_range": "14:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Line length of the Y component of the original image in\nmemory For an uncropped image, where lines follow each\nother without offset (no line stride), line length must\nmatch image width.\nFor Y component the line length in 4:2:x planar mode\nmust be a multiple of 8, for all other component modes a\nmultiple of 4.\nIn planar mode the line length of the Cb and Cr\ncomponent is assumed according to the YCbCr format, i.e.\nhalf for 4:2:x and the same size for 4:4:4. In semi planar\n4:2:x mode the line length of the Cb component (which\nincludes Cr) is assumed the same size. In interleave mode\nno Cb/Cr line length is used."
          }
        ],
        "description": "Y component original line length"
      },
      {
        "type": "register",
        "name": "MI_DMA_Y_PIC_SIZE",
        "offset": "0x14d4",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "dma_y_pic_size",
            "bit_range": "27:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Image size of the Y component in pixel which has to be\nthe Y line length multiplied by the Y image height (dma_y_llength * dma_y_pic_height).\nIn planar mode the image size of the Cb and Cr\ncomponent is assumed according to the YCbCr format, i.e.\na quarter for 4:2:0, half for 4:2:2 and the same for 4:4:4.\nIn semi planar mode the image size of the Cb component\n(which includes Cr) is assumed half for 4:2:0 and the\nsame size for 4:2:2. In interleave mode no Cb/Cr image\nsize is used.\n"
          }
        ],
        "description": "Y component image size"
      },
      {
        "type": "register",
        "name": "MI_DMA_CB_PIC_START_AD",
        "offset": "0x14d8",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "dma_cb_pic_start_ad",
            "bit_range": "31:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Image start address of the Cb component"
          }
        ],
        "description": "Cb component image start address\nNote: Must be multiple of 2 in semi-planar mode. \n\n \n"
      },
      {
        "type": "register",
        "name": "MI_DMA_CR_PIC_START_AD",
        "offset": "0x14e8",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "dma_cr_pic_start_ad",
            "bit_range": "31:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Image start address of the Cr component\n"
          }
        ],
        "description": "Cr component image start address"
      },
      {
        "type": "register",
        "name": "MI_IMSC",
        "offset": "0x14f8",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "dma_ready",
            "bit_range": "11",
            "attr": "rw",
            "reset": "CALC",
            "description": "Mask bit for dma ready interrupt"
          },
          {
            "name": "wrap_sp_cr",
            "bit_range": "9",
            "attr": "rw",
            "reset": "CALC",
            "description": "Mask bit for self picture Cr address wrap interrupt"
          },
          {
            "name": "wrap_sp_cb",
            "bit_range": "8",
            "attr": "rw",
            "reset": "CALC",
            "description": "Mask bit for self picture Cb address wrap interrupt"
          },
          {
            "name": "wrap_sp_y",
            "bit_range": "7",
            "attr": "rw",
            "reset": "CALC",
            "description": "Mask bit for self picture Y address wrap interrupt"
          },
          {
            "name": "wrap_mp_cr",
            "bit_range": "6",
            "attr": "rw",
            "reset": "CALC",
            "description": "Mask bit for main picture Cr address wrap interrupt"
          },
          {
            "name": "wrap_mp_cb",
            "bit_range": "5",
            "attr": "rw",
            "reset": "CALC",
            "description": "Mask bit for main picture Cb address wrap interrupt"
          },
          {
            "name": "wrap_mp_y",
            "bit_range": "4",
            "attr": "rw",
            "reset": "CALC",
            "description": "Mask bit for main picture Y address wrap interrupt"
          },
          {
            "name": "fill_mp_y",
            "bit_range": "3",
            "attr": "rw",
            "reset": "CALC",
            "description": "Mask bit for fill level interrupt of main picture Y,\nJPEG or raw data"
          },
          {
            "name": "mblk_line",
            "bit_range": "2",
            "attr": "rw",
            "reset": "CALC",
            "description": "Mask bit for makroblock line interrupt of main picture\n(16 lines of Y, 8 lines of Cb and 8 lines of Cr are written\ninto RAM)"
          },
          {
            "name": "sp_frame_end",
            "bit_range": "1",
            "attr": "rw",
            "reset": "CALC",
            "description": "Mask self picture end of frame interrupt"
          },
          {
            "name": "mp_frame_end",
            "bit_range": "0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Mask main picture end of frame interrupt\n"
          }
        ],
        "description": "Interrupt Mask (\u201e1\u201f: interrupt active, \u201e0\u201f: interrupt masked)"
      },
      {
        "type": "register",
        "name": "MI_RIS",
        "offset": "0x14fc",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "dma_ready",
            "bit_range": "11",
            "attr": "r",
            "reset": "CALC",
            "description": "Raw status of dma ready interrupt"
          },
          {
            "name": "wrap_sp_cr",
            "bit_range": "9",
            "attr": "r",
            "reset": "CALC",
            "description": "Raw status of self picture Cr address wrap interrupt"
          },
          {
            "name": "wrap_sp_cb",
            "bit_range": "8",
            "attr": "r",
            "reset": "CALC",
            "description": "Raw status of self picture Cb address wrap interrupt"
          },
          {
            "name": "wrap_sp_y",
            "bit_range": "7",
            "attr": "r",
            "reset": "CALC",
            "description": "Raw status of self picture Y address wrap interrupt"
          },
          {
            "name": "wrap_mp_cr",
            "bit_range": "6",
            "attr": "r",
            "reset": "CALC",
            "description": "Raw status of main picture Cr address wrap interrupt"
          },
          {
            "name": "wrap_mp_cb",
            "bit_range": "5",
            "attr": "r",
            "reset": "CALC",
            "description": "Raw status of main picture Cb address wrap interrupt"
          },
          {
            "name": "wrap_mp_y",
            "bit_range": "4",
            "attr": "r",
            "reset": "CALC",
            "description": "Raw status of main picture Y address wrap interrupt\n"
          },
          {
            "name": "fill_mp_y",
            "bit_range": "3",
            "attr": "r",
            "reset": "CALC",
            "description": "Raw status of fill level interrupt of main picture Y,\nJPEG or raw data"
          },
          {
            "name": "mblk_line",
            "bit_range": "2",
            "attr": "r",
            "reset": "CALC",
            "description": "Raw status of makroblock line interrupt of main\npicture (16 lines of Y, 8 lines of Cb and 8 lines of Cr are\nwritten into RAM, valid only for planar and semi-planar\nmode)"
          },
          {
            "name": "sp_frame_end",
            "bit_range": "1",
            "attr": "r",
            "reset": "CALC",
            "description": "Raw status of self picture end of frame interrupt"
          },
          {
            "name": "mp_frame_end",
            "bit_range": "0",
            "attr": "r",
            "reset": "CALC",
            "description": "Raw status of main picture end of frame interrupt\n"
          }
        ],
        "description": "Raw Interrupt Status"
      },
      {
        "type": "register",
        "name": "MI_MIS",
        "offset": "0x1500",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "dma_ready",
            "bit_range": "11",
            "attr": "r",
            "reset": "CALC",
            "description": "Masked status of dma ready interrupt"
          },
          {
            "name": "wrap_sp_cr",
            "bit_range": "9",
            "attr": "r",
            "reset": "CALC",
            "description": "Masked status of self picture Cr address wrap interrupt"
          },
          {
            "name": "wrap_sp_cb",
            "bit_range": "8",
            "attr": "r",
            "reset": "CALC",
            "description": "Masked status of self picture Cb address wrap\ninterrupt"
          },
          {
            "name": "wrap_sp_y",
            "bit_range": "7",
            "attr": "r",
            "reset": "CALC",
            "description": "Masked status of self picture Y address wrap interrupt"
          },
          {
            "name": "wrap_mp_cr",
            "bit_range": "6",
            "attr": "r",
            "reset": "CALC",
            "description": "Masked status of main picture Cr address wrap\ninterrupt"
          },
          {
            "name": "wrap_mp_cb",
            "bit_range": "5",
            "attr": "r",
            "reset": "CALC",
            "description": "Masked status of main picture Cb address wrap\ninterrupt"
          },
          {
            "name": "wrap_mp_y",
            "bit_range": "4",
            "attr": "r",
            "reset": "CALC",
            "description": "Masked status of main picture Y address wrap\ninterrupt"
          },
          {
            "name": "fill_mp_y",
            "bit_range": "3",
            "attr": "r",
            "reset": "CALC",
            "description": "Masked status of fill level interrupt of main picture\nY, JPEG or raw data"
          },
          {
            "name": "mblk_line",
            "bit_range": "2",
            "attr": "r",
            "reset": "CALC",
            "description": "Masked status of makroblock line interrupt of main\npicture (16 lines of Y, 8 lines of Cb and 8 lines of Cr are\nwritten into RAM, valid only for planar and semi-planar\nmode)"
          },
          {
            "name": "sp_frame_end",
            "bit_range": "1",
            "attr": "r",
            "reset": "CALC",
            "description": "Masked status of self picture end of frame interrupt"
          },
          {
            "name": "mp_frame_end",
            "bit_range": "0",
            "attr": "r",
            "reset": "CALC",
            "description": "Masked status of main picture end of frame interrupt"
          }
        ],
        "description": "Masked Interrupt Status"
      },
      {
        "type": "register",
        "name": "MI_ICR",
        "offset": "0x1504",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "dma_ready",
            "bit_range": "11",
            "attr": "w",
            "reset": "CALC",
            "description": "Clear dma ready interrupt"
          },
          {
            "name": "wrap_sp_cr",
            "bit_range": "9",
            "attr": "w",
            "reset": "CALC",
            "description": "Clear self picture Cr address wrap interrupt"
          },
          {
            "name": "wrap_sp_cb",
            "bit_range": "8",
            "attr": "w",
            "reset": "CALC",
            "description": "Clear self picture Cb address wrap interrupt"
          },
          {
            "name": "wrap_sp_y",
            "bit_range": "7",
            "attr": "w",
            "reset": "CALC",
            "description": "Clear self picture Y address wrap interrupt"
          },
          {
            "name": "wrap_mp_cr",
            "bit_range": "6",
            "attr": "w",
            "reset": "CALC",
            "description": "Clear main picture Cr address wrap interrupt"
          },
          {
            "name": "wrap_mp_cb",
            "bit_range": "5",
            "attr": "w",
            "reset": "CALC",
            "description": "Clear main picture Cb address wrap interrupt"
          },
          {
            "name": "wrap_mp_y",
            "bit_range": "4",
            "attr": "w",
            "reset": "CALC",
            "description": "Clear main picture Y address wrap interrupt"
          },
          {
            "name": "fill_mp_y",
            "bit_range": "3",
            "attr": "w",
            "reset": "CALC",
            "description": "Clear fill level interrupt"
          },
          {
            "name": "mblk_line",
            "bit_range": "2",
            "attr": "w",
            "reset": "CALC",
            "description": "Clear makroblock line interrupt"
          },
          {
            "name": "sp_frame_end",
            "bit_range": "1",
            "attr": "w",
            "reset": "CALC",
            "description": "Clear self picture end of frame interrupt"
          },
          {
            "name": "mp_frame_end",
            "bit_range": "0",
            "attr": "w",
            "reset": "CALC",
            "description": "Clear main picture end of frame interrupt\n"
          }
        ],
        "description": "Interrupt Clear Register"
      },
      {
        "type": "register",
        "name": "MI_ISR",
        "offset": "0x1508",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "dma_ready",
            "bit_range": "11",
            "attr": "w",
            "reset": "CALC",
            "description": "Set dma ready interrupt"
          },
          {
            "name": "wrap_sp_cr",
            "bit_range": "9",
            "attr": "w",
            "reset": "CALC",
            "description": "Set self picture Cr address wrap interrupt"
          },
          {
            "name": "wrap_sp_cb",
            "bit_range": "8",
            "attr": "w",
            "reset": "CALC",
            "description": "Set self picture Cb address wrap interrupt"
          },
          {
            "name": "wrap_sp_y",
            "bit_range": "7",
            "attr": "w",
            "reset": "CALC",
            "description": "Set self picture Y address wrap interrupt"
          },
          {
            "name": "wrap_mp_cr",
            "bit_range": "6",
            "attr": "w",
            "reset": "CALC",
            "description": "Set main picture Cr address wrap interrupt"
          },
          {
            "name": "wrap_mp_cb",
            "bit_range": "5",
            "attr": "w",
            "reset": "CALC",
            "description": "Set main picture Cb address wrap interrupt\n"
          },
          {
            "name": "wrap_mp_y",
            "bit_range": "4",
            "attr": "w",
            "reset": "CALC",
            "description": "Set main picture Y address wrap interrupt"
          },
          {
            "name": "fill_mp_y",
            "bit_range": "3",
            "attr": "w",
            "reset": "CALC",
            "description": "Set fill level interrupt"
          },
          {
            "name": "mblk_line",
            "bit_range": "2",
            "attr": "w",
            "reset": "CALC",
            "description": "Set makroblock line interrupt"
          },
          {
            "name": "sp_frame_end",
            "bit_range": "1",
            "attr": "w",
            "reset": "CALC",
            "description": "Set self picture end of frame interrupt"
          },
          {
            "name": "mp_frame_end",
            "bit_range": "0",
            "attr": "w",
            "reset": "CALC",
            "description": "Set main picture end of frame interrupt\n"
          }
        ],
        "description": "Interrupt Set Register"
      },
      {
        "type": "register",
        "name": "MI_STATUS",
        "offset": "0x150c",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "sp_cr_fifo_full",
            "bit_range": "6",
            "attr": "r",
            "reset": "CALC",
            "description": "FIFO full flag of Cr FIFO in self path asserted since last\nclear"
          },
          {
            "name": "sp_cb_fifo_full",
            "bit_range": "5",
            "attr": "r",
            "reset": "CALC",
            "description": "FIFO full flag of Cb FIFO in self path asserted since last\nclear"
          },
          {
            "name": "sp_y_fifo_full",
            "bit_range": "4",
            "attr": "r",
            "reset": "CALC",
            "description": "FIFO full flag of Y FIFO in self path asserted since last\nclear"
          },
          {
            "name": "mp_cr_fifo_full",
            "bit_range": "2",
            "attr": "r",
            "reset": "CALC",
            "description": "FIFO full flag of Cr FIFO in main path asserted since\nlast clear"
          },
          {
            "name": "mp_cb_fifo_full",
            "bit_range": "1",
            "attr": "r",
            "reset": "CALC",
            "description": "FIFO full flag of Cb FIFO in main path asserted since\nlast clear"
          },
          {
            "name": "mp_y_fifo_full",
            "bit_range": "0",
            "attr": "r",
            "reset": "CALC",
            "description": "FIFO full flag of Y FIFO in main path asserted since last\nclear\n"
          }
        ],
        "description": "MI Status Register"
      },
      {
        "type": "register",
        "name": "MI_STATUS_CLR",
        "offset": "0x1510",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "sp_cr_fifo_full",
            "bit_range": "6",
            "attr": "w",
            "reset": "CALC",
            "description": "Clear status of Cr FIFO full flag in self path"
          },
          {
            "name": "sp_cb_fifo_full",
            "bit_range": "5",
            "attr": "w",
            "reset": "CALC",
            "description": "Clear status of Cb FIFO full flag in self path"
          },
          {
            "name": "sp_y_fifo_full",
            "bit_range": "4",
            "attr": "w",
            "reset": "CALC",
            "description": "Clear status of Y FIFO full flag in self path\n"
          },
          {
            "name": "mp_cr_fifo_full",
            "bit_range": "2",
            "attr": "w",
            "reset": "CALC",
            "description": "Clear status of Cr FIFO full flag in main path"
          },
          {
            "name": "mp_cb_fifo_full",
            "bit_range": "1",
            "attr": "w",
            "reset": "CALC",
            "description": "Clear status of Cb FIFO full flag in main path"
          },
          {
            "name": "mp_y_fifo_full",
            "bit_range": "0",
            "attr": "w",
            "reset": "CALC",
            "description": "Clear status of Y FIFO full flag in main path\n"
          }
        ],
        "description": "MI Status Clear Register"
      },
      {
        "type": "register",
        "name": "MI_SP_Y_PIC_WIDTH",
        "offset": "0x1514",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "sp_y_pic_width",
            "bit_range": "14:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Image width of the self picture Y component or RGB\npicture in pixel.\nFor YCbCr 4:2:x and RGB 565 the image width must\nbe a multiple of 2. If no line stride is used but flipping\nrequired, the image width must be a multiple of 8 for 4:2:x\nplanar or 4 for 4:4:4 planar/4:2:x semi planar. There are\nno restrictions for RGB 888/666.\nIn planar mode the image width of the Cb and Cr\ncomponent is assumed according to the YCbCr format, i.e.\nhalf for 4:2:x and the same size for 4:4:4. In semi planar\n4:2:x mode the image width of the Cb component (which\nincludes Cr) is assumed the same size. In interleave mode\nno Cb/Cr image width is used. Note: Image width always\nrefers to the picture width of the output image. This is\nparticularly important when rotating."
          }
        ],
        "description": "Y component image width\nNote: Programmed value becomes effective \nimmediately. So write to the register only if no picture \ndata is sent to the self path. \n\n \n"
      },
      {
        "type": "register",
        "name": "MI_SP_Y_PIC_HEIGHT",
        "offset": "0x1518",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "sp_y_pic_height",
            "bit_range": "14:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Image height of the y component or RGB picture in\npixel.\nIn planar and semi planar mode the image width of\nthe cb and cr component is assumed according to the\nYCbCr format, i.e. half for 4:2:0 and the same for 4:2:2\nand 4:4:4.\nNote: Image height always refers to the picture\nheight of the output image. This is particularly\nimportant when rotating."
          }
        ],
        "description": "Y component image height\nNote: Programmed value becomes effective \n"
      },
      {
        "type": "register",
        "name": "MI_SP_Y_PIC_SIZE",
        "offset": "0x151c",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "sp_y_pic_size",
            "bit_range": "24:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Image size of the Y component or RGB picture in pixel\nwhich has to be the Y line length multiplied by the Y image\nheight (sp_y_llength * sp_y_pic_height).\nIn planar mode the image size of the Cb and Cr\ncomponent is assumed according to the YCbCr format, i.e.\na quarter for 4:2:0, half for 4:2:2 and the same for 4:4:4.\nIn semi planar mode the image size of the Cb and Cr\ncomponent is assumed half for 4:2:0 and the same size for\n4:2:2."
          }
        ],
        "description": "Y component image size\nNote: Programmed value becomes effective \n\nimmediately. So write to the register only if no picture \n\ndata is sent to the self path. \n"
      },
      {
        "type": "register",
        "name": "MI_DMA_CTRL",
        "offset": "0x1520",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "dma_rgb_format",
            "bit_range": "13:12",
            "attr": "rw",
            "reset": "CALC",
            "description": "Selects RGB Bayer data of read DMA picture 00: no\nDMA RGB Bayer data\n01: 8 bit RGB Bayer data\n10: 16 bit RGB Bayer data (12 bit used)\nbytes are organized MSB first and 4 lower bits of LSB\nremain unused: byte_even -> bayer[11:4], byte_odd[7:4] ->\nbayer[3:0] 11: reserved."
          }
        ],
        "description": "DMA control register\nNote: The dma_ready \ninterrupt is raised as usual, but the dma_frame_end \ninterrupt will not be generated until v_end has been \nenabled again. \n\n9 dma_continuous_en Enables continuous mode. If set the same frame is \nread back over and over. A start pulse on dma_start is \nneeded only for the first time. To stop continuous mode \nreset this bit (takes effect after the next frame end) or \nexecute a soft reset. This bit is intended to be used in \nconjunction with the Superimpose feature. \n\n8 dma_byte_swap Enables change of DMA byte order of the 32 bit \n\ninput word at read port \n1: byte order is mirrored but the bit order within one \n\nbyte doesn\u201ft change \n\n0: no byte mirroring \n\n7:6 dma_inout_format Selects input/output format of \n\nDMA picture. 11: YCbCr 4:4:4 \n\n10: YCbCr 4:2:2 \n\n01: YCbCr 4:2:0 \n\n00: YCbCr 4:0:0 \n\n5:4 dma_read_format Defines how YCbCr picture data is read from \n\nmemory. 00: planar \n01: semi planar, for YCbCr 4:2:x \n10: interleaved (combined), for YCbCr 4:2:2 and RGB \n\nonly 11: reserved \n\n3:2 dma_burst_len_chrom Burst length for Cb or Cr data affecting DMA \n\nread port. 00: 4-beat bursts \n\n01: 8-beat bursts \n\n10: 16-beat bursts \n11: reserved \nIgnored if 8- or 16-beat bursts are not supported. \n\nDMA control register Reset value: 0000'0000H \n \n\nAddress: ISP_MI_BASE + 0120H Mode : rw \n\nBit\n\ns \n\nName Description \n\n1:0 dma_burst_len_lum Burst length for Y data affecting DMA read port. \n\n00: 4-beat bursts \n\n01: 8-beat bursts \n10: 16-beat bursts \n\n11: reserved \n\nIgnored if 8- or 16-beat bursts are not supported. \n\n \n"
      },
      {
        "type": "register",
        "name": "MI_DMA_START",
        "offset": "0x1524",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "dma_start",
            "bit_range": "0",
            "attr": "w",
            "reset": "CALC",
            "description": "Enables DMA access. Additionally main or self path\nhas to be enabled separately.\n"
          }
        ],
        "description": "DMA start register"
      },
      {
        "type": "register",
        "name": "MI_DMA_STATUS",
        "offset": "0x1528",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "dma_active",
            "bit_range": "0",
            "attr": "r",
            "reset": "CALC",
            "description": "If set DMA access is active.\n"
          }
        ],
        "description": "DMA status register"
      },
      {
        "type": "register",
        "name": "MI_PIXEL_CNT",
        "offset": "0x152c",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "pix_cnt",
            "bit_range": "27:0",
            "attr": "r",
            "reset": "CALC",
            "description": "Counter value specifies the number of pixels of the\ndefect pixel list generated by DPCC of the last transmitted\nframe. Updated at frame end.\nA soft reset will set the counter to zero.\n"
          }
        ],
        "description": "Counter value for defect pixel list"
      },
      {
        "type": "register",
        "name": "MI_MP_Y_BASE_AD_INIT2",
        "offset": "0x1530",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "mp_y_base_ad_init2",
            "bit_range": "31:3",
            "attr": "rw",
            "reset": "CALC",
            "description": "2nd ping pong base address of main picture Y\ncomponent buffer, JPEG buffer or raw data buffer.\nProgrammed value becomes effective (visible in\ncorresponding shadow register) after a soft reset, a forced\nsoftware update or an automatic config update.\nNote: Set control bit init_base_en before updating so\nthat a forced or automatic update can take effect."
          }
        ],
        "description": "Base address 2 (ping pong) for main picture Y component, \n\nJPEG or raw data\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \nregister description for details. \n\nRefer also to MI_MP_Y_BASE_AD_INIT with respect to the burst alignment restriction for \nAXI. \n\n \n"
      },
      {
        "type": "register",
        "name": "MI_MP_CB_BASE_AD_INIT2",
        "offset": "0x1534",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "mp_cb_base_ad_init2",
            "bit_range": "31:3",
            "attr": "rw",
            "reset": "CALC",
            "description": "2nd ping pong base address of main picture Cb\ncomponent buffer.\nProgrammed value becomes effective (visible in\ncorresponding shadow register) after a soft reset, a forced\nsoftware update or an automatic config update.\nnote: Set control bit init_base_en before updating so\nthat a forced or automatic update can take effect.\n"
          }
        ],
        "description": "Base address 2 (pingpong) for main picture Cb component\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \nregister description for details. \n\nRefer also to MI_MP_Y_BASE_AD_INIT with respect to the burst alignment restriction for \nAXI. \n\n \n"
      },
      {
        "type": "register",
        "name": "MI_MP_CR_BASE_AD_INIT2",
        "offset": "0x1538",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "mp_cr_base_ad_init2",
            "bit_range": "31:3",
            "attr": "rw",
            "reset": "CALC",
            "description": "2nd ping pong Base address of main picture Cr\ncomponent buffer.\nProgrammed value becomes effective (visible in\ncorresponding shadow register) after a soft reset, a forced\nsoftware update or an automatic config update.\nNote: Set control bit init_base_en before updating so\nthat a forced or automatic update can take effect."
          }
        ],
        "description": "Base address 2 (pingpong) for main picture Cr component ring buffer\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \nregister description for details. \n\nRefer also to MI_MP_Y_BASE_AD_INIT with respect to the burst alignment restriction for \nAXI. \n\n \n"
      },
      {
        "type": "register",
        "name": "MI_SP_Y_BASE_AD_INIT2",
        "offset": "0x153c",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "sp_y_base_ad_init2",
            "bit_range": "31:3",
            "attr": "rw",
            "reset": "CALC",
            "description": "2nd ping pong base address of self picture Y\ncomponent buffer. Programmed value becomes effective\n(visible in corresponding shadow register) after a soft\nreset, a forced software update or an automatic config\nupdate.\nnote: Set control bit init_base_en before updating so\nthat a forced or automatic update can take effect."
          }
        ],
        "description": "Base address 2 (ping pong) for self picture Y component\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \nregister description for details. \n\nRefer also to MI_MP_Y_BASE_AD_INIT with respect to the burst alignment restriction for \nAXI. \n\n \n"
      },
      {
        "type": "register",
        "name": "MI_SP_CB_BASE_AD_INIT2",
        "offset": "0x1540",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "sp_cb_base_ad_init2",
            "bit_range": "31:3",
            "attr": "rw",
            "reset": "CALC",
            "description": "2nd ping pong base address of self picture Cb\ncomponent buffer.\nProgrammed value becomes effective (visible in\ncorresponding shadow register) after a soft reset, a\nforced software update or an automatic config update.\nnote: Set control bit init_base_en before\nupdating so that a forced or automatic update can\ntake effect."
          }
        ],
        "description": "Base address 2 (pingpong) for self picture Cb component\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \nregister description for details. \n\nRefer also to MI_MP_Y_BASE_AD_INIT with respect to the burst alignment restriction for \nAXI. \n\n \n"
      },
      {
        "type": "register",
        "name": "MI_SP_CR_BASE_AD_INIT2",
        "offset": "0x1544",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "sp_cr_base_ad_init2",
            "bit_range": "31:3",
            "attr": "rw",
            "reset": "CALC",
            "description": "2nd ping pong Base address of self picture Cr\ncomponent buffer.\nProgrammed value becomes effective (visible in\ncorresponding shadow register) after a soft reset, a forced\nsoftware update or an automatic config update.\nnote: Set control bit init_base_en before\nupdating so that a forced or automatic update can\ntake effect."
          }
        ],
        "description": "Base address 2 (pingpong) for self picture Cr component ring buffer\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \nregister description for details. \n\nRefer also to MI_MP_Y_BASE_AD_INIT with respect to the burst alignment restriction for \nAXI. \n\n"
      },
      {
        "type": "register",
        "name": "MI_XTD_FORMAT_CTRL",
        "offset": "0x1548",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "nv21_dma_read",
            "bit_range": "2",
            "attr": "rw",
            "reset": "CALC",
            "description": "0: dma read path: use NV12 storage format for\nsemi-planar YCbCr 4:2:x mode, Cb is located on even\naddresses.\n1: dma read path: use NV21 storage format for\nsemi-planar YCbCr 4:2:x mode, Cr is located on even"
          },
          {
            "name": "nv21_self",
            "bit_range": "1",
            "attr": "rw",
            "reset": "CALC",
            "description": "0: self path: use NV12 storage format for semi-planar\nYCbCr 4:2:x mode, Cb is located on even addresses.\n1: self path: use NV21 storage format for semi-planar\nYCbCr 4:2:x mode, Cr is located on even addresses.\n"
          },
          {
            "name": "nv21_main",
            "bit_range": "0",
            "attr": "rw",
            "reset": "CALC",
            "description": "0: main path: use NV12 storage format for\nsemi-planar YCbCr 4:2:x mode, Cb is located on even\naddresses.\n1: main path: use NV21 storage format for\nsemi-planar YCbCr 4:2:x mode, Cr is located on even"
          }
        ],
        "description": "Extended Storage Format Control for main, self and dma read path"
      },
      {
        "type": "register",
        "name": "MIPI_CTRL",
        "offset": "0x1c00",
        "size": "32",
        "reset": "0x00060000",
        "bit_ranges": [
          {
            "name": "S_ENABLE_CLK",
            "bit_range": "18",
            "attr": "rw",
            "reset": "CALC",
            "description": "Sensor clock lane enable signal. This register is\ndirectly connected to the output port \"s_enableclk\".\n'1': enable sensor clock lane (DEFAULT) '0': disable\nsensor clock lane"
          },
          {
            "name": "ERR_SOT_HS_SKIP",
            "bit_range": "16",
            "attr": "rw",
            "reset": "CALC",
            "description": "1: data within the current transmission is skipped if\nErrSotHS is detected\n0: ErrSotHS does not affect transmission (default)"
          },
          {
            "name": "NUM_LANES",
            "bit_range": "13:12",
            "attr": "rw",
            "reset": "CALC",
            "description": "00: Lane 1 is used\n01: Lanes 1 and 2 are used\n10: Lanes 1, 2 and 3 are used\n11: Lanes 1, 2, 3 and 4 are used (default)"
          },
          {
            "name": "SHUTDOWN_LANE",
            "bit_range": "11:8",
            "attr": "rw",
            "reset": "CALC",
            "description": "Shutdown Lane Module. Content of this register is\ndirectly connected to the output signal shutdown[n-1:0]\nwhere n denotes the lane number 1..4"
          },
          {
            "name": "FLUSH_FIFO",
            "bit_range": "1",
            "attr": "rw",
            "reset": "CALC",
            "description": "writing '1' resets the write- and read pointers of the\nadditional data fifo, reading returns the status of the flush_fifo bit. This bit must be reset by software."
          },
          {
            "name": "OUTPUT_ENA",
            "bit_range": "0",
            "attr": "rw",
            "reset": "CALC",
            "description": "1: output to add data fifo and to output interface is\nenabled 0: output is disabled"
          }
        ],
        "description": "global control register"
      },
      {
        "type": "register",
        "name": "MIPI_STATUS",
        "offset": "0x1c04",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "S_STOPSTATE_CLK",
            "bit_range": "12",
            "attr": "r",
            "reset": "CALC",
            "description": "sensor clock lane is in stopstate. This register is\ndirectly connected to the synchronized input signal \"s_stopstateclk\""
          },
          {
            "name": "STOPSTATE",
            "bit_range": "11:8",
            "attr": "r",
            "reset": "CALC",
            "description": "Data Lane is in stopstate. This register is directly\nconnected to the synchronized input signal\nstopstate[n-1:0] where n denotes the lane number 1..4"
          },
          {
            "name": "ADD_DATA_AVAIL",
            "bit_range": "0",
            "attr": "r",
            "reset": "CALC",
            "description": "1: additional data fifo contains data 0: additional data\nfifo is empty"
          }
        ],
        "description": "global status register"
      },
      {
        "type": "register",
        "name": "MIPI_IMSC",
        "offset": "0x1c08",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "IMSC_GEN_SHORT_PACK",
            "bit_range": "27",
            "attr": "rw",
            "reset": "CALC",
            "description": "enable interrupt (1) or mask out (0)"
          },
          {
            "name": "IMSC_ADD_DATA_OVFLW",
            "bit_range": "25",
            "attr": "rw",
            "reset": "CALC",
            "description": "enable interrupt (1) or mask out (0)"
          },
          {
            "name": "IMSC_FRAME_END",
            "bit_range": "24",
            "attr": "rw",
            "reset": "CALC",
            "description": "enable interrupt (1) or mask out (0)"
          },
          {
            "name": "IMSC_ERR_CS",
            "bit_range": "23",
            "attr": "rw",
            "reset": "CALC",
            "description": "enable interrupt (1) or mask out (0)"
          },
          {
            "name": "IMSC_ERR_ECC1",
            "bit_range": "22",
            "attr": "rw",
            "reset": "CALC",
            "description": "enable interrupt (1) or mask out (0)"
          },
          {
            "name": "IMSC_ERR_ECC2",
            "bit_range": "21",
            "attr": "rw",
            "reset": "CALC",
            "description": "enable interrupt (1) or mask out (0)"
          },
          {
            "name": "IMSC_ERR_PROTOCOL",
            "bit_range": "20",
            "attr": "rw",
            "reset": "CALC",
            "description": "enable interrupt (1) or mask out (0)"
          },
          {
            "name": "IMSC_ERR_CONTROL",
            "bit_range": "19:16",
            "attr": "rw",
            "reset": "CALC",
            "description": "enable interrupt (1) or mask out (0)"
          },
          {
            "name": "IMSC_ERR_EOT_SYNC",
            "bit_range": "15:12",
            "attr": "rw",
            "reset": "CALC",
            "description": "enable interrupt (1) or mask out (0)"
          },
          {
            "name": "IMSC_ERR_SOT_SYNC",
            "bit_range": "11:8",
            "attr": "rw",
            "reset": "CALC",
            "description": "enable interrupt (1) or mask out (0)"
          },
          {
            "name": "IMSC_ERR_SOT",
            "bit_range": "7:4",
            "attr": "rw",
            "reset": "CALC",
            "description": "enable interrupt (1) or mask out (0)"
          }
        ],
        "description": "Interrupt mask"
      },
      {
        "type": "register",
        "name": "MIPI_RIS",
        "offset": "0x1c0c",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "RIS_GEN_SHORT_PACK",
            "bit_range": "27",
            "attr": "r",
            "reset": "CALC",
            "description": "generic short packet was received (only available in\nversion 2 of MIPI interface)\n\nWhen this interrupt is cleared, all the bits of the MIPI_GEN_SHORT_DT status register are cleared as well;\nSetting of this interrupt via MIPI_ISR register will set all\nthe bits of the MIPI_GEN_SHORT_DT register."
          },
          {
            "name": "RIS_ADD_DATA_OVFLW",
            "bit_range": "25",
            "attr": "r",
            "reset": "CALC",
            "description": "additional data fifo overflow occurred"
          },
          {
            "name": "RIS_FRAME_END",
            "bit_range": "24",
            "attr": "r",
            "reset": "CALC",
            "description": "frame end send to output interface"
          },
          {
            "name": "RIS_ERR_CS",
            "bit_range": "23",
            "attr": "r",
            "reset": "CALC",
            "description": "checksum error occurred"
          },
          {
            "name": "RIS_ERR_ECC1",
            "bit_range": "22",
            "attr": "r",
            "reset": "CALC",
            "description": "1-bit ecc error occurred"
          },
          {
            "name": "RIS_ERR_ECC2",
            "bit_range": "21",
            "attr": "r",
            "reset": "CALC",
            "description": "2-bit ecc error occurred"
          },
          {
            "name": "RIS_ERR_PROTOCOL",
            "bit_range": "20",
            "attr": "r",
            "reset": "CALC",
            "description": "packet start detected within current packet"
          },
          {
            "name": "RIS_ERR_CONTROL",
            "bit_range": "19:16",
            "attr": "r",
            "reset": "CALC",
            "description": "PPI interface control error occured, one bit for each\nlane"
          },
          {
            "name": "RIS_ERR_EOT_SYNC",
            "bit_range": "15:12",
            "attr": "r",
            "reset": "CALC",
            "description": "PPI interface eot sync error occured, one bit for each\nlane"
          },
          {
            "name": "RIS_ERR_SOT_SYNC",
            "bit_range": "11:8",
            "attr": "r",
            "reset": "CALC",
            "description": "PPI interface sot sync error occured, one bit for each\nlane"
          },
          {
            "name": "RIS_ERR_SOT",
            "bit_range": "7:4",
            "attr": "r",
            "reset": "CALC",
            "description": "PPI interface sot error occured, one bit for each lane"
          }
        ],
        "description": "Raw interrupt status"
      },
      {
        "type": "register",
        "name": "MIPI_MIS",
        "offset": "0x1c10",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "MIS_GEN_SHORT_PACK",
            "bit_range": "27",
            "attr": "r",
            "reset": "CALC",
            "description": "generic short packet was received (only available in\nversion 2 of MIPI interface)"
          },
          {
            "name": "MIS_ADD_DATA_OVFLW",
            "bit_range": "25",
            "attr": "r",
            "reset": "CALC",
            "description": "additional data fifo overflow"
          },
          {
            "name": "MIS_FRAME_END",
            "bit_range": "24",
            "attr": "r",
            "reset": "CALC",
            "description": "frame end send to output interface"
          },
          {
            "name": "MIS_ERR_CS",
            "bit_range": "23",
            "attr": "r",
            "reset": "CALC",
            "description": "checksum error occurred\n"
          },
          {
            "name": "MIS_ERR_ECC1",
            "bit_range": "22",
            "attr": "r",
            "reset": "CALC",
            "description": "1-bit ecc error occurred"
          },
          {
            "name": "MIS_ERR_ECC2",
            "bit_range": "21",
            "attr": "r",
            "reset": "CALC",
            "description": "2-bit ecc error occurred"
          },
          {
            "name": "MIS_ERR_PROTOCOL",
            "bit_range": "20",
            "attr": "r",
            "reset": "CALC",
            "description": "packet start detected within current packet"
          },
          {
            "name": "MIS_ERR_CONTROL",
            "bit_range": "19:16",
            "attr": "r",
            "reset": "CALC",
            "description": "PPI interface control error occured, one bit for each\nlane"
          },
          {
            "name": "MIS_ERR_EOT_SYNC",
            "bit_range": "15:12",
            "attr": "r",
            "reset": "CALC",
            "description": "PPI interface eot sync error occured, one bit for each\nlane"
          },
          {
            "name": "MIS_ERR_SOT_SYNC",
            "bit_range": "11:8",
            "attr": "r",
            "reset": "CALC",
            "description": "PPI interface sot sync error occured, one bit for each\nlane"
          },
          {
            "name": "MIS_ERR_SOT",
            "bit_range": "7:4",
            "attr": "r",
            "reset": "CALC",
            "description": "PPI interface sot error occured, one bit for each lane"
          }
        ],
        "description": "Masked interrupt status"
      },
      {
        "type": "register",
        "name": "MIPI_ICR",
        "offset": "0x1c14",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "ICR_GEN_SHORT_PACK",
            "bit_range": "27",
            "attr": "w",
            "reset": "CALC",
            "description": "1: clear register; 0: nothing happens"
          },
          {
            "name": "ICR_ADD_DATA_OVFLW",
            "bit_range": "25",
            "attr": "w",
            "reset": "CALC",
            "description": "1: clear register; 0: nothing happens"
          },
          {
            "name": "ICR_FRAME_END",
            "bit_range": "24",
            "attr": "w",
            "reset": "CALC",
            "description": "1: clear register; 0: nothing happens"
          },
          {
            "name": "ICR_ERR_CS",
            "bit_range": "23",
            "attr": "w",
            "reset": "CALC",
            "description": "1: clear register; 0: nothing happens"
          },
          {
            "name": "ICR_ERR_ECC1",
            "bit_range": "22",
            "attr": "w",
            "reset": "CALC",
            "description": "1: clear register; 0: nothing happens"
          },
          {
            "name": "ICR_ERR_ECC2",
            "bit_range": "21",
            "attr": "w",
            "reset": "CALC",
            "description": "1: clear register; 0: nothing happens"
          },
          {
            "name": "ICR_ERR_PROTOCOL",
            "bit_range": "20",
            "attr": "w",
            "reset": "CALC",
            "description": "1: clear register; 0: nothing happens"
          },
          {
            "name": "ICR_ERR_CONTROL",
            "bit_range": "19:16",
            "attr": "w",
            "reset": "CALC",
            "description": "1: clear register; 0: nothing happens (one bit for each\nlane)\n\n"
          },
          {
            "name": "ICR_ERR_EOT_SYNC",
            "bit_range": "15:12",
            "attr": "w",
            "reset": "CALC",
            "description": "1: clear register;\n0: nothing happens (one bit for each lane)"
          },
          {
            "name": "ICR_ERR_SOT_SYNC",
            "bit_range": "11:8",
            "attr": "w",
            "reset": "CALC",
            "description": "1: clear register; 0: nothing happens (one bit for each\nlane)"
          },
          {
            "name": "ICR_ERR_SOT",
            "bit_range": "7:4",
            "attr": "w",
            "reset": "CALC",
            "description": "1: clear register; 0: nothing happens (one bit for each\nlane)\n"
          },
          {
            "name": "ICR_SYNC_FIFO_OVFLW",
            "bit_range": "3:0",
            "attr": "w",
            "reset": "CALC",
            "description": "1: clear register; 0: nothing happens (one bit for each\nlane)"
          }
        ],
        "description": "Interrupt clear register\nNote: clears corresponding bits in MIPI_RIS register \n\n \n"
      },
      {
        "type": "register",
        "name": "MIPI_ISR",
        "offset": "0x1c18",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "ISR_GEN_SHORT_PACK",
            "bit_range": "27",
            "attr": "w",
            "reset": "CALC",
            "description": "1: set register; 0: nothing happens"
          },
          {
            "name": "ISR_ADD_DATA_OVFLW",
            "bit_range": "25",
            "attr": "w",
            "reset": "CALC",
            "description": "1: set register; 0: nothing happens"
          },
          {
            "name": "ISR_FRAME_END",
            "bit_range": "24",
            "attr": "w",
            "reset": "CALC",
            "description": "1: set register; 0: nothing happens"
          },
          {
            "name": "ISR_ERR_CS",
            "bit_range": "23",
            "attr": "w",
            "reset": "CALC",
            "description": "1: set register; 0: nothing happens"
          },
          {
            "name": "ISR_ERR_ECC1",
            "bit_range": "22",
            "attr": "w",
            "reset": "CALC",
            "description": "1: set register; 0: nothing happens"
          },
          {
            "name": "ISR_ERR_ECC2",
            "bit_range": "21",
            "attr": "w",
            "reset": "CALC",
            "description": "1: set register; 0: nothing happens"
          },
          {
            "name": "ISR_ERR_PROTOCOL",
            "bit_range": "20",
            "attr": "w",
            "reset": "CALC",
            "description": "1: set register; 0: nothing happens"
          },
          {
            "name": "ISR_ERR_CONTROL",
            "bit_range": "19:16",
            "attr": "w",
            "reset": "CALC",
            "description": "1: set register; 0: nothing happens (one bit for each\nlane)"
          },
          {
            "name": "ISR_ERR_EOT_SYNC",
            "bit_range": "15:12",
            "attr": "w",
            "reset": "CALC",
            "description": "1: set register; 0: nothing happens (one bit for each\nlane)"
          },
          {
            "name": "ISR_ERR_SOT_SYNC",
            "bit_range": "11:8",
            "attr": "w",
            "reset": "CALC",
            "description": "1: set register; 0: nothing happens (one bit for each\nlane)"
          },
          {
            "name": "ISR_ERR_SOT",
            "bit_range": "7:4",
            "attr": "w",
            "reset": "CALC",
            "description": "1: set register; 0: nothing happens (one bit for each\nlane)"
          }
        ],
        "description": "Interrupt set register\nNote: sets corresponding bits in MIPI_RIS register \n\n \n\n"
      },
      {
        "type": "register",
        "name": "MIPI_CUR_DATA_ID",
        "offset": "0x1c1c",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "VIRTUAL_CHANNEL",
            "bit_range": "7:6",
            "attr": "r",
            "reset": "CALC",
            "description": "virtual channel of currently received packet"
          },
          {
            "name": "DATA_TYPE",
            "bit_range": "5:0",
            "attr": "r",
            "reset": "CALC",
            "description": "data type of currently received packet"
          }
        ],
        "description": "Current Data Identifier"
      },
      {
        "type": "register",
        "name": "MIPI_IMG_DATA_SEL",
        "offset": "0x1c20",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "DATA_TYPE_SEL",
            "bit_range": "5:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "data type selector for image\ndata output: 0x08...0x0F generic\nshort packets\n0x12 embedded\n8-bit data 0x18 YUV\n420 8-bit\n0x19 YUV 420 10-bit\n0x1A Legacy YUV 420 8-bit 0x1C YUV 420 8-bit\n(CSPS)\n0x1D YUV 420 10-bit (CSPS)\n0x1E YUV 422 8-bit\n0x1F YUV 422 10-bit\n0x20 RGB 444\n0x21 RGB 555\n0x22 RGB 565\n0x23 RGB 666\n0x24 RGB 888\n0x28 RAW 6\n0x29 RAW 7\n0x2A RAW 8\n0x2B RAW 10\n0x2C RAW 12\n0x30...0x37 User Defined Byte-based data"
          }
        ],
        "description": "Image Data Selector"
      },
      {
        "type": "register",
        "name": "MIPI_ADD_DATA_SEL_1",
        "offset": "0x1c24",
        "size": "32",
        "reset": "0x000000FF",
        "bit_ranges": [
          {
            "name": "ADD_DATA_VC_1",
            "bit_range": "7:6",
            "attr": "rw",
            "reset": "CALC",
            "description": "virtual channel selector for additional data output"
          },
          {
            "name": "ADD_DATA_TYPE_1",
            "bit_range": "5:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "data type selector for additional data output\n"
          }
        ],
        "description": "Additional Data Selector 1"
      },
      {
        "type": "register",
        "name": "MIPI_ADD_DATA_SEL_2",
        "offset": "0x1c28",
        "size": "32",
        "reset": "0x000000FF",
        "bit_ranges": [
          {
            "name": "ADD_DATA_VC_2",
            "bit_range": "7:6",
            "attr": "rw",
            "reset": "CALC",
            "description": "virtual channel selector for additional data output"
          },
          {
            "name": "ADD_DATA_TYPE_2",
            "bit_range": "5:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "data type selector for additional data output\n"
          }
        ],
        "description": "Additional Data Selector 2"
      },
      {
        "type": "register",
        "name": "MIPI_ADD_DATA_SEL_3",
        "offset": "0x1c2c",
        "size": "32",
        "reset": "0x000000FF",
        "bit_ranges": [
          {
            "name": "ADD_DATA_VC_3",
            "bit_range": "7:6",
            "attr": "rw",
            "reset": "CALC",
            "description": "virtual channel selector for additional data output"
          },
          {
            "name": "ADD_DATA_TYPE_3",
            "bit_range": "5:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "data type selector for additional data output\n"
          }
        ],
        "description": "Additional Data Selector 3"
      },
      {
        "type": "register",
        "name": "MIPI_ADD_DATA_SEL_4",
        "offset": "0x1c30",
        "size": "32",
        "reset": "0x000000FF",
        "bit_ranges": [
          {
            "name": "ADD_DATA_VC_4",
            "bit_range": "7:6",
            "attr": "rw",
            "reset": "CALC",
            "description": "virtual channel selector for additional data output\n\n"
          },
          {
            "name": "ADD_DATA_TYPE_4",
            "bit_range": "5:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "data type selector for additional data output\n"
          }
        ],
        "description": "Additional Data Selector 4"
      },
      {
        "type": "register",
        "name": "MIPI_ADD_DATA_FIFO",
        "offset": "0x1c34",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "ADD_DATA_FIFO",
            "bit_range": "31:0",
            "attr": "r",
            "reset": "CALC",
            "description": "lowest 4 bytes in additional data fifo; reading\nincrements fifo read pointer.\nFirst embedded data byte will be written to bits 7:0 of\n32-bit data word, second data byte written to 15:8 etc.\n"
          }
        ],
        "description": "Additional Data Fifo"
      },
      {
        "type": "register",
        "name": "MIPI_ADD_DATA_FILL_LEVEL",
        "offset": "0x1c38",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [],
        "description": "Additional Data FIFO Fill Level"
      },
      {
        "type": "register",
        "name": "MIPI_COMPRESSED_MODE",
        "offset": "0x1c3c",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "predictor_sel",
            "bit_range": "8",
            "attr": "rw",
            "reset": "CALC",
            "description": "predictor to be\nused: 0: predictor1\n1: predictor 2"
          },
          {
            "name": "comp_scheme",
            "bit_range": "6:4",
            "attr": "rw",
            "reset": "CALC",
            "description": "data compression scheme:\n0: 12\u20138\u201312\n1: 12\u20137\u201312\n2: 12\u20136\u201312\n3: 10\u20138\u201310\n4: 10\u20137\u201310\n5: 10\u20136\u201310\n6..7: reserved"
          },
          {
            "name": "compress_en",
            "bit_range": "0",
            "attr": "rw",
            "reset": "CALC",
            "description": "1: enable compressed mode\nprocessing 0: disable compressed\nmode"
          }
        ],
        "description": "controls processing of compressed raw data types\nNote: This register is only available in MIPI interface version 2 of ISP \n\n \n\n \n"
      },
      {
        "type": "register",
        "name": "MIPI_FRAME",
        "offset": "0x1c40",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "frame_number_fe",
            "bit_range": "31:16",
            "attr": "r",
            "reset": "CALC",
            "description": "16 bit frame number from Frame End (FE) short\npacket"
          },
          {
            "name": "frame_number_fs",
            "bit_range": "15:0",
            "attr": "r",
            "reset": "CALC",
            "description": "16 bit frame number from Frame Start (FS) short\npacket"
          }
        ],
        "description": "frame number from frame start and frame end short packets\nNote: This register is only available in MIPI interface version 2 of ISP \n\n"
      },
      {
        "type": "register",
        "name": "MIPI_GEN_SHORT_DT",
        "offset": "0x1c44",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "GEN_SHORT_DT_0xF",
            "bit_range": "7",
            "attr": "r",
            "reset": "CALC",
            "description": "1: generic short packet of data type 0xF received 0:\ndata type 0xF not received"
          },
          {
            "name": "GEN_SHORT_DT_0xE",
            "bit_range": "6",
            "attr": "r",
            "reset": "CALC",
            "description": "1: generic short packet of data type 0xE received 0:\ndata type 0xE not received"
          },
          {
            "name": "GEN_SHORT_DT_0xD",
            "bit_range": "5",
            "attr": "r",
            "reset": "CALC",
            "description": "1: generic short packet of data type 0xD\nreceived 0: data type 0xD not received"
          },
          {
            "name": "GEN_SHORT_DT_0xC",
            "bit_range": "4",
            "attr": "r",
            "reset": "CALC",
            "description": "1: generic short packet of data type 0xC\nreceived 0: data type 0xC not received"
          },
          {
            "name": "GEN_SHORT_DT_0xB",
            "bit_range": "3",
            "attr": "r",
            "reset": "CALC",
            "description": "1: generic short packet of data type 0xB\nreceived 0: data type 0xB not received"
          },
          {
            "name": "GEN_SHORT_DT_0xA",
            "bit_range": "2",
            "attr": "r",
            "reset": "CALC",
            "description": "1: generic short packet of data type 0xA\nreceived 0: data type 0xA not received"
          },
          {
            "name": "GEN_SHORT_DT_0x9",
            "bit_range": "1",
            "attr": "r",
            "reset": "CALC",
            "description": "1: generic short packet of data type 0x9\nreceived 0: data type 0x9 not received"
          },
          {
            "name": "GEN_SHORT_DT_0x8",
            "bit_range": "0",
            "attr": "r",
            "reset": "CALC",
            "description": "1: generic short packet of data type 0x8\nreceived 0: data type 0x8 not received"
          }
        ],
        "description": "data type flags for received generic short packets\nNote: This register is only available in MIPI interface version 2 of ISP \n\n \n"
      },
      {
        "type": "register",
        "name": "MIPI_GEN_SHORT_8_9",
        "offset": "0x1c48",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "data_field_9",
            "bit_range": "31:16",
            "attr": "r",
            "reset": "CALC",
            "description": "16 bit user defined data field from last generic\nshort packet of data type 0x9"
          },
          {
            "name": "data_field_8",
            "bit_range": "15:0",
            "attr": "r",
            "reset": "CALC",
            "description": "16 bit user defined data field from last generic\nshort packet of data type 0x8"
          }
        ],
        "description": "data field for generic short packets of data type 0x8 and 0x9\nNote: This register is only available in MIPI interface version 2 of ISP \n\n"
      },
      {
        "type": "register",
        "name": "MIPI_GEN_SHORT_A_B",
        "offset": "0x1c4c",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "data_field_B",
            "bit_range": "31:16",
            "attr": "r",
            "reset": "CALC",
            "description": "16 bit user defined data field from last generic\nshort packet of data type 0xB"
          },
          {
            "name": "data_field_A",
            "bit_range": "15:0",
            "attr": "r",
            "reset": "CALC",
            "description": "16 bit user defined data field from last generic short\npacket of data type 0xA"
          }
        ],
        "description": "data field for generic short packets of data type 0xA and 0xB\nNote: This register is only available in MIPI interface version 2 of ISP \n\n \n"
      },
      {
        "type": "register",
        "name": "MIPI_GEN_SHORT_C_D",
        "offset": "0x1c50",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "data_field_D",
            "bit_range": "31:16",
            "attr": "r",
            "reset": "CALC",
            "description": "16 bit user defined data field from last generic\nshort packet of data type 0xD"
          },
          {
            "name": "data_field_C",
            "bit_range": "15:0",
            "attr": "r",
            "reset": "CALC",
            "description": "16 bit user defined data field from last generic\nshort packet of data type 0xC"
          }
        ],
        "description": "data field for generic short packets of data type 0xC and 0xD\nNote: This register is only available in MIPI interface version 2 of ISP \n\n \n\n"
      },
      {
        "type": "register",
        "name": "MIPI_GEN_SHORT_E_F",
        "offset": "0x1c54",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "data_field_F",
            "bit_range": "31:16",
            "attr": "r",
            "reset": "CALC",
            "description": "16 bit user defined data field from last generic short\npacket of data type 0xF"
          },
          {
            "name": "data_field_E",
            "bit_range": "15:0",
            "attr": "r",
            "reset": "CALC",
            "description": "16 bit user defined data field from last generic short\npacket of data type 0xE"
          }
        ],
        "description": "data field for generic short packets of data type 0xE and 0xF\nNote: This register is only available in MIPI interface version 2 of ISP \n\n \n\n \n\n \n\n \n\n \n\n \n \n\nThis is the control register for AF measurement unit Reset value: 0000'0000H \n \n\nAddress: ISP_AFM_BASE + 0000H Mode : rw \n\nBit\n\ns \n\nName Description \n\n31:\n\n1 \n\n--- unused \n\n0 afm_en AF measurement enable \n\n0: AF measurement is \n\ndisabled 1: AF \n\nmeasurement is enabled \n\nWriting a 1 to this register starts a new measurement \n\nand resets the afm_fin (measurement finished) interrupt \n\nto 0. \n\nAs long as the afm_en is 1, the AFM unit \n"
      },
      {
        "type": "register",
        "name": "ISP_AFM_LT_A",
        "offset": "0x2004",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "a_h_l",
            "bit_range": "28:16",
            "attr": "rw",
            "reset": "CALC",
            "description": "first pixel of window A (horizontal left row),\nvalue must be greater or equal 5"
          },
          {
            "name": "a_v_t",
            "bit_range": "12:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "first line of window A (vertical top line), value must\nbe greater or equal 2\n"
          }
        ],
        "description": "Top Left corner of measure window A"
      },
      {
        "type": "register",
        "name": "ISP_AFM_RB_A",
        "offset": "0x2008",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "a_h_r",
            "bit_range": "28:16",
            "attr": "rw",
            "reset": "CALC",
            "description": "last pixel of window A (horizontal right row)"
          },
          {
            "name": "a_v_b",
            "bit_range": "12:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "last line of window A (vertical bottom line), value must\nbe lower than (number of lines \u2013 2)"
          }
        ],
        "description": "Bottom right corner of measure window A"
      },
      {
        "type": "register",
        "name": "ISP_AFM_LT_B",
        "offset": "0x200c",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "b_h_l",
            "bit_range": "28:16",
            "attr": "rw",
            "reset": "CALC",
            "description": "first pixel of window B (horizontal left row),\nvalue must be greater or equal 5"
          },
          {
            "name": "b_v_t",
            "bit_range": "12:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "first line of window B (vertical top line), value must\nbe greater or equal 2\n"
          }
        ],
        "description": "Top left corner of measure window B"
      },
      {
        "type": "register",
        "name": "ISP_AFM_RB_B",
        "offset": "0x2010",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "b_h_r",
            "bit_range": "28:16",
            "attr": "rw",
            "reset": "CALC",
            "description": "last pixel of window B (horizontal right row)"
          },
          {
            "name": "b_v_b",
            "bit_range": "12:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "last line of window B (vertical bottom line), value\nmust be lower than (number of lines \u2013 2)\n"
          }
        ],
        "description": "Bottom right corner of measure window B"
      },
      {
        "type": "register",
        "name": "ISP_AFM_LT_C",
        "offset": "0x2014",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "c_h_l",
            "bit_range": "28:16",
            "attr": "rw",
            "reset": "CALC",
            "description": "first pixel of window C (horizontal left row),\nvalue must be greater or equal 5"
          },
          {
            "name": "c_v_t",
            "bit_range": "12:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "first line of window C (vertical top line), value must\nbe greater or equal 2"
          }
        ],
        "description": "Top left corner of measure window C"
      },
      {
        "type": "register",
        "name": "ISP_AFM_RB_C",
        "offset": "0x2018",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "c_h_r",
            "bit_range": "28:16",
            "attr": "rw",
            "reset": "CALC",
            "description": "last pixel of window C (horizontal right row)"
          },
          {
            "name": "c_v_b",
            "bit_range": "12:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "last line of window C (vertical bottom line), value\nmust be lower than (number of lines \u2013 2)\n"
          }
        ],
        "description": "Bottom right corner of measure window C"
      },
      {
        "type": "register",
        "name": "ISP_AFM_THRES",
        "offset": "0x201c",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "afm_thres",
            "bit_range": "15:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "AF measurement threshold\nThis register defines a threshold which can be\nused for minimizing the influence of noise in the\nmeasurement result.\n"
          }
        ],
        "description": "Threshold register"
      },
      {
        "type": "register",
        "name": "ISP_AFM_VAR_SHIFT",
        "offset": "0x2020",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "lum_var_shift",
            "bit_range": "18:16",
            "attr": "rw",
            "reset": "CALC",
            "description": "variable shift for luminance summation\nThe lum_var_shift defines the number of bits for the\nshift operation of the value of the current pixel before\nsummation. The shift operation is used to avoid a\nluminance sum overflow."
          },
          {
            "name": "afm_var_shift",
            "bit_range": "2:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "variable shift for AF measurement\nThe afm_var_shift defines the number of bits for the\nshift operation at the end of the calculation chain. The shift\noperation is used to avoid an AF measurement sum\noverflow."
          }
        ],
        "description": "Variable shift register"
      },
      {
        "type": "register",
        "name": "ISP_AFM_SUM_A",
        "offset": "0x2024",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "afm_sum_a",
            "bit_range": "31:0",
            "attr": "r",
            "reset": "CALC",
            "description": "sharpness value of window A\n"
          }
        ],
        "description": "Sharpness Value Status Register of Window A"
      },
      {
        "type": "register",
        "name": "ISP_AFM_SUM_B",
        "offset": "0x2028",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "afm_sum_b",
            "bit_range": "31:0",
            "attr": "r",
            "reset": "CALC",
            "description": "sharpness value of window B\n"
          }
        ],
        "description": "Sharpness Value Status Register of Window B"
      },
      {
        "type": "register",
        "name": "ISP_AFM_SUM_C",
        "offset": "0x202c",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "afm_sum_c",
            "bit_range": "31:0",
            "attr": "r",
            "reset": "CALC",
            "description": "sharpness value of window C\n"
          }
        ],
        "description": "Sharpness Value Status Register of Window C"
      },
      {
        "type": "register",
        "name": "ISP_AFM_LUM_A",
        "offset": "0x2030",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "afm_lum_a",
            "bit_range": "23:0",
            "attr": "r",
            "reset": "CALC",
            "description": "luminance value of window A\n"
          }
        ],
        "description": "Luminance Value Status Register of Window A"
      },
      {
        "type": "register",
        "name": "ISP_AFM_LUM_B",
        "offset": "0x2034",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "afm_lum_b",
            "bit_range": "23:0",
            "attr": "r",
            "reset": "CALC",
            "description": "luminance value of window B\n\n"
          }
        ],
        "description": "Luminance Value Status Register of Window B"
      },
      {
        "type": "register",
        "name": "ISP_AFM_LUM_C",
        "offset": "0x2038",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "afm_lum_c",
            "bit_range": "23:0",
            "attr": "r",
            "reset": "CALC",
            "description": "luminance value of window C\n"
          }
        ],
        "description": "Luminance Value Status Register of Window C"
      },
      {
        "type": "register",
        "name": "ISP_LSC_CTRL",
        "offset": "0x2200",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "lsc_en",
            "bit_range": "0",
            "attr": "rw",
            "reset": "CALC",
            "description": "0: activation request for lens shading correction\n1: deactivation reqeust for lens shading correction\nActivation/Deactivation is object of a shadowing\nmechnism. The current status is visible at ISP_LSC_STATUS::lsc_enable_status\n"
          }
        ],
        "description": "Lens shade control"
      },
      {
        "type": "register",
        "name": "ISP_LSC_R_TABLE_ADDR",
        "offset": "0x2204",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "r_ram_addr",
            "bit_range": "8:0",
            "attr": "rwh",
            "reset": "CALC",
            "description": "table address in RAM for samples of the R color\ncomponent. Will be automatically incremented by each\nread or write access to the table.\nValid addresses are in the range 0 to 152."
          }
        ],
        "description": "Table RAM Address for red component\nNote: The table values are written into an internal RAM. The RAM Address is generated per \nauto- increment. The tables values will be read back by a continuous read access to the \ncorresponding register. The read address is auto-incremented for each read access to that \nregister and is reset to a specific value by a write access to the ISP_LSC_TABLE_ADDR \nregister. \n\nTable set 0 access by SW at table address 0...152. Table set 1 access at table address \n153...305. \n\n \n"
      },
      {
        "type": "register",
        "name": "ISP_LSC_GR_TABLE_ADDR",
        "offset": "0x2208",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "gr_ram_addr",
            "bit_range": "8:0",
            "attr": "rwh",
            "reset": "CALC",
            "description": "table address in RAM for samples of the G_R color\ncomponent. Will be automatically incremented by each\nread or write access to the table."
          }
        ],
        "description": "Table RAM Address for green (red) component\nNote: MKOE tbc: Orignial register mode was rwh which is no longer supported with new \nversion of SIG-> rwhh Table set 0 access by SW at table address 0...153. Table set 1 access at \ntable address 154...307. \n\n \n"
      },
      {
        "type": "register",
        "name": "ISP_LSC_B_TABLE_ADDR",
        "offset": "0x220c",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "b_ram_addr",
            "bit_range": "8:0",
            "attr": "rwh",
            "reset": "CALC",
            "description": "table address in RAM for samples of the B color\ncomponent. Will be automatically incremented by each\nread or write access to the table."
          }
        ],
        "description": "Table RAM Address for blue component\nNote: MKOE tbc: Orignial register mode was rwh which is no longer supported with new \nversion of SIG-> rwhh Table set 0 access by SW at table address 0...153. Table set 1 access at \ntable address 154...307. \n\n \n"
      },
      {
        "type": "register",
        "name": "ISP_LSC_GB_TABLE_ADDR",
        "offset": "0x2210",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "gb_ram_addr",
            "bit_range": "8:0",
            "attr": "rwh",
            "reset": "CALC",
            "description": "table address in RAM for samples of the G_B color\ncomponent. Will be automatically incremented by each\nread or write access to the table."
          }
        ],
        "description": "Table RAM Address for green (blue) component\nNote: MKOE tbc: Orignial register mode was rwh which is no longer supported with new \nversion of SIG-> rwhh Table set 0 access by SW at table address 0...153. Table set 1 access at \ntable address 154...307. \n\n \n"
      },
      {
        "type": "register",
        "name": "ISP_LSC_R_TABLE_DATA",
        "offset": "0x2214",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "r_sample_1",
            "bit_range": "23:12",
            "attr": "rw",
            "reset": "CALC",
            "description": "correction factor at sample point (fixed point\nnumber: 2 bits integer with 10-bit fractional part,\nrange 1..3.999)\n\n"
          },
          {
            "name": "r_sample_0",
            "bit_range": "11:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "correction factor at sample point (fixed point number:\n2 bits integer with 10-bit fractional part, range 1..3.999)"
          }
        ],
        "description": "Sample table red\nNote: The programmed sample value is immediately written into the RAM. The RAM \naddress is generated per auto-increment. The parameter RAMs for Lens Shade Correction and \nBad Pixel Correction can only be programmed, if the RGB Bayer path is switched on via \nISP_CTRL register (ISP_MODE bits). \n\nTable set 0 access by SW at table address 0...153. Table set 1 access at table address \n\n154...307. "
      },
      {
        "type": "register",
        "name": "ISP_LSC_GR_TABLE_DATA",
        "offset": "0x2218",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "gr_sample_1",
            "bit_range": "23:12",
            "attr": "rw",
            "reset": "CALC",
            "description": "correction factor at sample point (fixed point number - 2 bits integer with 10-bit fractional part, range 1..3.999)"
          },
          {
            "name": "gr_sample_0",
            "bit_range": "11:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "correction factor at sample point (fixed point number - 2 bits integer with 10-bit fractional part, range 1..3.999)"
          }
        ],
        "description": "Sample table green (red)\nNote: The programmed sample value is immediately written into the RAM. The RAM \naddress is generated per auto-increment. The parameter RAMs for Lens Shade Correction and \nBad Pixel Correction can only be programmed, if the RGB Bayer path is switched on via \nISP_CTRL register (ISP_MODE bits). \n\nTable set 0 access by SW at table address 0...153. Table set 1 access at table address \n\n154...307. \n\n"
      },
      {
        "type": "register",
        "name": "ISP_LSC_B_TABLE_DATA",
        "offset": "0x221c",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "b_sample_1",
            "bit_range": "23:12",
            "attr": "rw",
            "reset": "CALC",
            "description": "correction factor at sample point (fixed point number - 2 bits integer with 10-bit fractional part, range 1..3.999)"
          },
          {
            "name": "b_sample_0",
            "bit_range": "11:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "correction factor at sample point (fixed point number - 2 bits integer with 10-bit fractional part, range 1..3.999)"
          }
        ],
        "description": "Sample table blue\nNote: The programmed sample value is immediately written into the RAM. The \n\nRAM address is generated per auto-increment. The parameter RAMs for Lens Shade \n\nCorrection and Bad Pixel Correction can only be programmed, if the RGB Bayer path is \n\nswitched on via ISP_CTRL register (ISP_MODE bits). \n\nTable set 0 access by SW at table address 0...153. Table set 1 access at table address \n\n154...307. \n\n"
      },
      {
        "type": "register",
        "name": "ISP_LSC_GB_TABLE_DATA",
        "offset": "0x2220",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "gb_sample_1",
            "bit_range": "23:12",
            "attr": "rw",
            "reset": "CALC",
            "description": "correction factor at sample point (fixed point number - 2 bits integer with 10-bit fractional part, range 1..3.999)"
          },
          {
            "name": "gb_sample_0",
            "bit_range": "11:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "correction factor at sample point (fixed point number - 2 bits integer with 10-bit fractional part, range 1..3.999)"
          }
        ],
        "description": "Sample table green (blue)\nNote: The programmed sample value is immediately written into the RAM. The RAM \naddress is generated per auto-increment. The parameter RAMs for Lens Shade Correction and \nBad Pixel Correction can only be programmed, if the RGB Bayer path is switched on via \nISP_CTRL register (ISP_MODE bits).Table set 0 access by SW at table address 0...153. Table \nset 1 access at table address 154...307. \n\n \n\n \n\n"
      },
      {
        "type": "register",
        "name": "ISP_LSC_XGRAD_01",
        "offset": "0x2224",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "xgrad_1",
            "bit_range": "27:16",
            "attr": "rw",
            "reset": "CALC",
            "description": "factor for x-gradient calculation of sector 1"
          },
          {
            "name": "xgrad_0",
            "bit_range": "11:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "factor for x-gradient calculation of sector 0\n"
          }
        ],
        "description": "Gradient table x"
      },
      {
        "type": "register",
        "name": "ISP_LSC_XGRAD_23",
        "offset": "0x2228",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "xgrad_3",
            "bit_range": "27:16",
            "attr": "rw",
            "reset": "CALC",
            "description": "factor for x-gradient calculation of sector 3"
          },
          {
            "name": "xgrad_2",
            "bit_range": "11:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "factor for x-gradient calculation of sector 2\n"
          }
        ],
        "description": "Gradient table x"
      },
      {
        "type": "register",
        "name": "ISP_LSC_XGRAD_45",
        "offset": "0x222c",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "xgrad_5",
            "bit_range": "27:16",
            "attr": "rw",
            "reset": "CALC",
            "description": "factor for x-gradient calculation of sector 5"
          },
          {
            "name": "xgrad_4",
            "bit_range": "11:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "factor for x-gradient calculation of sector 4\n"
          }
        ],
        "description": "Gradient table x"
      },
      {
        "type": "register",
        "name": "ISP_LSC_XGRAD_67",
        "offset": "0x2230",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "xgrad_7",
            "bit_range": "27:16",
            "attr": "rw",
            "reset": "CALC",
            "description": "factor for x-gradient calculation of sector 7"
          },
          {
            "name": "xgrad_6",
            "bit_range": "11:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "factor for x-gradient calculation of sector 6\n"
          }
        ],
        "description": "Gradient table x"
      },
      {
        "type": "register",
        "name": "ISP_LSC_YGRAD_01",
        "offset": "0x2234",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "ygrad_1",
            "bit_range": "27:16",
            "attr": "rw",
            "reset": "CALC",
            "description": "factor for y-gradient calculation of sector 1"
          },
          {
            "name": "ygrad_0",
            "bit_range": "11:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "factor for y-gradient calculation of sector 0\n"
          }
        ],
        "description": "Gradient table y"
      },
      {
        "type": "register",
        "name": "ISP_LSC_YGRAD_23",
        "offset": "0x2238",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "ygrad_3",
            "bit_range": "27:16",
            "attr": "rw",
            "reset": "CALC",
            "description": "factor for y-gradient calculation of sector 3"
          },
          {
            "name": "ygrad_2",
            "bit_range": "11:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "factor for y-gradient calculation of sector 2\n"
          }
        ],
        "description": "Gradient table y"
      },
      {
        "type": "register",
        "name": "ISP_LSC_YGRAD_45",
        "offset": "0x223c",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "ygrad_5",
            "bit_range": "27:16",
            "attr": "rw",
            "reset": "CALC",
            "description": "factor for y-gradient calculation of sector 5"
          },
          {
            "name": "ygrad_4",
            "bit_range": "11:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "factor for y-gradient calculation of sector 4\n"
          }
        ],
        "description": "Gradient table y"
      },
      {
        "type": "register",
        "name": "ISP_LSC_YGRAD_67",
        "offset": "0x2240",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "ygrad_7",
            "bit_range": "27:16",
            "attr": "rw",
            "reset": "CALC",
            "description": "factor for y-gradient calculation of sector 7"
          },
          {
            "name": "ygrad_6",
            "bit_range": "11:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "factor for y-gradient calculation of sector 6\n"
          }
        ],
        "description": "Gradient table y"
      },
      {
        "type": "register",
        "name": "ISP_LSC_XSIZE_01",
        "offset": "0x2244",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "x_sect_size_1",
            "bit_range": "25:16",
            "attr": "rw",
            "reset": "CALC",
            "description": "sector size 1 in x-direction"
          },
          {
            "name": "x_sect_size_0",
            "bit_range": "9:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "sector size 0 in x-direction"
          }
        ],
        "description": "Size table\nNote: The sector size in x-direction must be greater than 12 pixels. The sum of the sector \nsizes in x- direction must be \"picture width / 2\". The sum of the sector sizes in y-direction must \nbe \"picture height / 2\". No interrupt is generated if above requirements are not fulfilled and the \nbehaviour of the hardware cannot be predicted. \n\nThe sector size in x-direction was defined to be 9 bits for preliminary ISP versions. \n\n"
      },
      {
        "type": "register",
        "name": "ISP_LSC_XSIZE_23",
        "offset": "0x2248",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "x_sect_size_3",
            "bit_range": "25:16",
            "attr": "rw",
            "reset": "CALC",
            "description": "sector size 3 in x-direction"
          },
          {
            "name": "x_sect_size_2",
            "bit_range": "9:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "sector size 2 in x-direction"
          }
        ],
        "description": "Size table\nNote: minimum sector size is 10 in x direction \n\n \n"
      },
      {
        "type": "register",
        "name": "ISP_LSC_XSIZE_45",
        "offset": "0x224c",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "x_sect_size_5",
            "bit_range": "25:16",
            "attr": "rw",
            "reset": "CALC",
            "description": "sector size 5 in x-direction"
          },
          {
            "name": "x_sect_size_4",
            "bit_range": "9:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "sector size 4in x-direction"
          }
        ],
        "description": "Size table\nNote: minimum sector size is 10 in x direction \n\n \n"
      },
      {
        "type": "register",
        "name": "ISP_LSC_XSIZE_67",
        "offset": "0x2250",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "x_sect_size_7",
            "bit_range": "25:16",
            "attr": "rw",
            "reset": "CALC",
            "description": "sector size 7 in x-direction"
          },
          {
            "name": "x_sect_size_6",
            "bit_range": "9:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "sector size 6 in x-direction"
          }
        ],
        "description": "Size table\nNote: minimum sector size is 10 in x direction \n\n"
      },
      {
        "type": "register",
        "name": "ISP_LSC_YSIZE_01",
        "offset": "0x2254",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "y_sect_size_1",
            "bit_range": "25:16",
            "attr": "rw",
            "reset": "CALC",
            "description": "sector size 1 in y-direction"
          },
          {
            "name": "y_sect_size_0",
            "bit_range": "9:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "sector size 0 in y-direction"
          }
        ],
        "description": "Size table\nNote: minimum sector size is 8 in y direction. \n\nThe sector size in y-direction was defined to be 9 bits for preliminary ISP versions. \n\n \n"
      },
      {
        "type": "register",
        "name": "ISP_LSC_YSIZE_23",
        "offset": "0x2258",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "y_sect_size_3",
            "bit_range": "25:16",
            "attr": "rw",
            "reset": "CALC",
            "description": "sector size 3 in y-direction"
          },
          {
            "name": "y_sect_size_2",
            "bit_range": "9:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "sector size 2 in y-direction"
          }
        ],
        "description": "Size table\nNote: minimum sector size is 8 in y direction \n\n \n"
      },
      {
        "type": "register",
        "name": "ISP_LSC_YSIZE_45",
        "offset": "0x225c",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "y_sect_size_5",
            "bit_range": "25:16",
            "attr": "rw",
            "reset": "CALC",
            "description": "sector size 5 in y-direction"
          },
          {
            "name": "y_sect_size_4",
            "bit_range": "9:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "sector size 4 in y-direction"
          }
        ],
        "description": "Size table\nNote: minimum sector size is 8 in y direction \n\n"
      },
      {
        "type": "register",
        "name": "ISP_LSC_YSIZE_67",
        "offset": "0x2260",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "y_sect_size_7",
            "bit_range": "25:16",
            "attr": "rw",
            "reset": "CALC",
            "description": "sector size 7 in y-direction"
          },
          {
            "name": "y_sect_size_6",
            "bit_range": "9:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "sector size 6 in y-direction"
          }
        ],
        "description": "Size table\nNote: minimum sector size is 8 in y direction \n\n \n"
      },
      {
        "type": "register",
        "name": "ISP_LSC_TABLE_SEL",
        "offset": "0x2264",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "table_sel",
            "bit_range": "0",
            "attr": "rw",
            "reset": "CALC",
            "description": "0: next active tables set is\ntable set 0. 1: next active tables\nset is table set 1.\nTable selection is object of a shadowing mechnism.\nThe current status is visible at"
          }
        ],
        "description": "Lens shade table set selection\nNote: Table set 0 access by SW at table address 0...153. Table set 1 access at table \naddress 154...307. For LSC4_MSZ the table set 1 is physically not available: \nISP_LSC_TABLE_SEL shall always be 0 for this HW configuration. \n\n \n"
      },
      {
        "type": "register",
        "name": "ISP_LSC_STATUS",
        "offset": "0x2268",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "active_table",
            "bit_range": "1",
            "attr": "r",
            "reset": "CALC",
            "description": "0: currently active tables set is\ntable set 0 1: currently active tables\nset is table set 1"
          },
          {
            "name": "lsc_en_status",
            "bit_range": "0",
            "attr": "r",
            "reset": "CALC",
            "description": "0: lens shading correction is\ncurrently off 1: lens shading\ncorrection is currently on"
          }
        ],
        "description": "Lens shade status"
      },
      {
        "type": "register",
        "name": "ISP_IS_CTRL",
        "offset": "0x2300",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "is_en",
            "bit_range": "0",
            "attr": "rw",
            "reset": "CALC",
            "description": "1: image stabilization\nswitched on 0: image\nstabilization switched off\n"
          }
        ],
        "description": "Image Stabilization Control Register"
      },
      {
        "type": "register",
        "name": "ISP_IS_RECENTER",
        "offset": "0x2304",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "is_recenter",
            "bit_range": "2:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "000: recenter feature switched off\n1..7: recentering by (cur_h/v_offs-H/V_OFFS)/2^RECENTER\n"
          }
        ],
        "description": "Recenter register"
      },
      {
        "type": "register",
        "name": "ISP_IS_H_OFFS",
        "offset": "0x2308",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "is_h_offs",
            "bit_range": "13:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "horizontal picture offset in pixel\n"
          }
        ],
        "description": "Horizontal offset of output window"
      },
      {
        "type": "register",
        "name": "ISP_IS_V_OFFS",
        "offset": "0x230c",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "is_v_offs",
            "bit_range": "13:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "vertical picture offset in lines"
          }
        ],
        "description": "Vertical offset of output window"
      },
      {
        "type": "register",
        "name": "ISP_IS_H_SIZE",
        "offset": "0x2310",
        "size": "32",
        "reset": "0x00001000",
        "bit_ranges": [
          {
            "name": "is_h_size",
            "bit_range": "13:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "horizontal picture size in pixel if ISP_MODE is set to\n001-(ITU-R BT.656 YUV),\n010-( ITU-R BT.601 YUV),\n011-( ITU-R BT.601 Bayer RGB),\n101-( ITU-R BT.656 Bayer RGB)\nonly even numbers are accepted, because complete\nquadruples of YUYV(YCbYCr) are needed for the following\nmodules. If an odd size is programmed the value will be\ntruncated to even size.\n"
          }
        ],
        "description": "Output horizontal picture size"
      },
      {
        "type": "register",
        "name": "ISP_IS_V_SIZE",
        "offset": "0x2314",
        "size": "32",
        "reset": "0x00000C00",
        "bit_ranges": [
          {
            "name": "is_v_size",
            "bit_range": "13:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "vertical picture size in lines\n"
          }
        ],
        "description": "Output vertical picture size"
      },
      {
        "type": "register",
        "name": "ISP_IS_MAX_DX",
        "offset": "0x2318",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "is_max_dx",
            "bit_range": "12:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "maximum allowed accumulated horizontal\ndisplacement in pixels\n"
          }
        ],
        "description": "Maximum Horizontal Displacement"
      },
      {
        "type": "register",
        "name": "ISP_IS_MAX_DY",
        "offset": "0x231c",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "is_max_dy",
            "bit_range": "12:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "maximum allowed accumulated vertical displacement\nin lines\n"
          }
        ],
        "description": "Maximum Vertical Displacement"
      },
      {
        "type": "register",
        "name": "ISP_IS_DISPLACE",
        "offset": "0x2320",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "dy",
            "bit_range": "28:16",
            "attr": "rw",
            "reset": "CALC",
            "description": "ISP_IS will compensate for vertical camera\ndisplacement of DY lines in the next frame"
          },
          {
            "name": "dx",
            "bit_range": "12:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "ISP_IS will compensate for horizontal camera\ndisplacement of DX pixels in the next frame\n"
          }
        ],
        "description": "Camera displacement"
      },
      {
        "type": "register",
        "name": "ISP_IS_H_OFFS_SHD",
        "offset": "0x2324",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "is_h_offs_shd",
            "bit_range": "13:0",
            "attr": "r",
            "reset": "CALC",
            "description": "current horizonatl picture offset in lines\n"
          }
        ],
        "description": "current horizontal offset of output window (shadow register)"
      },
      {
        "type": "register",
        "name": "ISP_IS_V_OFFS_SHD",
        "offset": "0x2328",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "is_v_offs_shd",
            "bit_range": "13:0",
            "attr": "r",
            "reset": "CALC",
            "description": "current vertical picture offset in lines\n"
          }
        ],
        "description": "current vertical offset of output window (shadow register)"
      },
      {
        "type": "register",
        "name": "ISP_IS_H_SIZE_SHD",
        "offset": "0x232c",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "isp_h_size_shd",
            "bit_range": "13:0",
            "attr": "r",
            "reset": "CALC",
            "description": "current horizontal picture size in pixel\n"
          }
        ],
        "description": "current output horizontal picture size (shadow register)"
      },
      {
        "type": "register",
        "name": "ISP_IS_V_SIZE_SHD",
        "offset": "0x2330",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "isp_v_size_shd",
            "bit_range": "13:0",
            "attr": "r",
            "reset": "CALC",
            "description": "vertical picture size in lines\n"
          }
        ],
        "description": "current output vertical picture size (shadow register)"
      },
      {
        "type": "register",
        "name": "ISP_HIST_PROP",
        "offset": "0x2400",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "stepsize",
            "bit_range": "9:3",
            "attr": "rw",
            "reset": "CALC",
            "description": "histogram predivider, process every (stepsize)th\npixel, all other pixels are skipped\n0,1,2: not allowed\n3: process every third input pixel 4: process every\nfourth input pixel\n...\n7FH: process every 127th pixel"
          },
          {
            "name": "hist_mode",
            "bit_range": "2:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "histogram mode, luminance is taken at ISP output\nbefore output formatter, RGB is taken at xtalk output\n7, 6: must not be used\n5: Y (luminance) histogram 4: B histogram\n3: G histogram\n2: R histogram\n1: RGB combined histogram 0: disable, no\nmeasurements"
          }
        ],
        "description": "Histogram properties\nNote: If RGB combined mode is used, then the 3 color components are sampled one \n\nafter the other. The software has to assure that all 3 color components are inside the \n\nselected window. \n\n \n"
      },
      {
        "type": "register",
        "name": "ISP_HIST_H_OFFS",
        "offset": "0x2404",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "hist_h_offset",
            "bit_range": "12:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Horizontal offset of first window in pixels."
          }
        ],
        "description": "Histogram window horizontal offset for first window of \n\n25 sub- windows\nNote: histogram measurement is done in 25 sub-windows like the exposure \n\nmeasurement, if histogram version 3 is implemented. All earlier versions use just one \n\nwindow. \n \n"
      },
      {
        "type": "register",
        "name": "ISP_HIST_V_OFFS",
        "offset": "0x2408",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "hist_v_offset",
            "bit_range": "12:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Vertical offset of first window in pixels."
          }
        ],
        "description": "Histogram window vertical offset for first window of 25 sub-windows\nNote: histogram measurement is done in 25 sub-windows like the exposure \nmeasurement, if histogram version 3 is implemented. All earlier versions use just one window. \n\n \n\n"
      },
      {
        "type": "register",
        "name": "ISP_HIST_H_SIZE",
        "offset": "0x240c",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "hist_h_size",
            "bit_range": "10:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Horizontal size in pixels of one sub-window, if\nhistogram version 3 is implemented."
          }
        ],
        "description": "Horizontal (sub-)window size\nNote: hist_h_offset + hist_h_size x 5 should be less than or equal to the horizontal size \n\nof the picture, if histogram version 3 is implemented. Otherwise hist_h_size is the horizontal \n\nsize of the measurement window in pixels. \n\n \n"
      },
      {
        "type": "register",
        "name": "ISP_HIST_V_SIZE",
        "offset": "0x2410",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "hist_v_size",
            "bit_range": "10:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Vertical size in lines of one sub-window, if histogram\nversion 3 is implemented."
          }
        ],
        "description": "Vertical (sub-)window size\nNote: hist_v_offset + hist_v_size x 5 should be less than or equal to the vertical size \n\nof the picture, if histogram version 3 is implemented. Otherwise hist_v_size is the vertical \n\nsize of the measurement window in lines. \n\n \n"
      },
      {
        "type": "register",
        "name": "ISP_HIST_BIN",
        "offset": "0x2414",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "hist_bin_n",
            "bit_range": "19:0",
            "attr": "r",
            "reset": "CALC",
            "description": "measured bin count as 16-bit unsigned integer\nvalue plus 4 bit fractional part"
          }
        ],
        "description": "histogram measurement result bin n (n=0..15)\nNote: MKOE tbc: Orignial register mode was rh which is no longer supported with new \nversion of SIG -> r \n\n \n\n"
      },
      {
        "type": "register",
        "name": "ISP_HIST_WEIGHT_00TO30",
        "offset": "0x2454",
        "size": "32",
        "reset": "0x10101010",
        "bit_ranges": [
          {
            "name": "hist_weight_30",
            "bit_range": "28:24",
            "attr": "rw",
            "reset": "CALC",
            "description": "weighting factor for sub-window 30"
          },
          {
            "name": "hist_weight_20",
            "bit_range": "20:16",
            "attr": "rw",
            "reset": "CALC",
            "description": "weighting factor for sub-window 20"
          },
          {
            "name": "hist_weight_10",
            "bit_range": "12:8",
            "attr": "rw",
            "reset": "CALC",
            "description": "weighting factor for sub-window 10"
          },
          {
            "name": "hist_weight_00",
            "bit_range": "4:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "weighting factor for sub-window 00"
          }
        ],
        "description": "Weighting factor for sub-windows\nNote: Allowed value range for weight factor is 0 to 16. The resulting weight is \nregister_value / 16. The host software has to limit the register value for each factor to 16. \nWeight registers are available, if histogram version 3 is implemented. \n\n \n"
      },
      {
        "type": "register",
        "name": "ISP_HIST_WEIGHT_40TO21",
        "offset": "0x2458",
        "size": "32",
        "reset": "0x10101010",
        "bit_ranges": [
          {
            "name": "hist_weight_21",
            "bit_range": "28:24",
            "attr": "rw",
            "reset": "CALC",
            "description": "weighting factor for sub-window 21\n"
          },
          {
            "name": "hist_weight_11",
            "bit_range": "20:16",
            "attr": "rw",
            "reset": "CALC",
            "description": "weighting factor for sub-window 11"
          },
          {
            "name": "hist_weight_01",
            "bit_range": "12:8",
            "attr": "rw",
            "reset": "CALC",
            "description": "weighting factor for sub-window 01"
          },
          {
            "name": "hist_weight_40",
            "bit_range": "4:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "weighting factor for sub-window 40"
          }
        ],
        "description": "Weighting factor for sub-windows\nNote: Allowed value range for weight factor is 0 to 16. The resulting weight is \n\nregister_value / 16. The host software has to limit the register value for each factor to 16. \n\nWeight registers are available, if histogram version 3 is implemented. \n\n \n\n"
      },
      {
        "type": "register",
        "name": "ISP_HIST_WEIGHT_31TO12",
        "offset": "0x245c",
        "size": "32",
        "reset": "0x10101010",
        "bit_ranges": [
          {
            "name": "hist_weight_12",
            "bit_range": "28:24",
            "attr": "rw",
            "reset": "CALC",
            "description": "weighting factor for sub-window 12"
          },
          {
            "name": "hist_weight_02",
            "bit_range": "20:16",
            "attr": "rw",
            "reset": "CALC",
            "description": "weighting factor for sub-window 02"
          },
          {
            "name": "hist_weight_41",
            "bit_range": "12:8",
            "attr": "rw",
            "reset": "CALC",
            "description": "weighting factor for sub-window 41"
          },
          {
            "name": "hist_weight_31",
            "bit_range": "4:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "weighting factor for sub-window 31"
          }
        ],
        "description": "Weighting factor for sub-windows\nNote: Allowed value range for weight factor is 0 to 16. The resulting weight is \nregister_value / 16. The host software has to limit the register value for each factor to 16. \nWeight registers are available, if histogram version 3 is implemented. \n\n \n"
      },
      {
        "type": "register",
        "name": "ISP_HIST_WEIGHT_22TO03",
        "offset": "0x2460",
        "size": "32",
        "reset": "0x10101010",
        "bit_ranges": [
          {
            "name": "hist_weight_03",
            "bit_range": "28:24",
            "attr": "rw",
            "reset": "CALC",
            "description": "weighting factor for sub-window 03"
          },
          {
            "name": "hist_weight_42",
            "bit_range": "20:16",
            "attr": "rw",
            "reset": "CALC",
            "description": "weighting factor for sub-window 42\n"
          },
          {
            "name": "hist_weight_32",
            "bit_range": "12:8",
            "attr": "rw",
            "reset": "CALC",
            "description": "weighting factor for sub-window 32"
          },
          {
            "name": "hist_weight_22",
            "bit_range": "4:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "weighting factor for sub-window 22"
          }
        ],
        "description": "Weighting factor for sub-windows\nNote: Allowed value range for weight factor is 0 to 16. The resulting weight is \nregister_value / 16. The host software has to limit the register value for each factor to 16. \nWeight registers are available, if histogram version 3 is implemented. \n\n \n\n"
      },
      {
        "type": "register",
        "name": "ISP_HIST_WEIGHT_13TO43",
        "offset": "0x2464",
        "size": "32",
        "reset": "0x10101010",
        "bit_ranges": [
          {
            "name": "hist_weight_43",
            "bit_range": "28:24",
            "attr": "rw",
            "reset": "CALC",
            "description": "weighting factor for sub-window 43"
          },
          {
            "name": "hist_weight_33",
            "bit_range": "20:16",
            "attr": "rw",
            "reset": "CALC",
            "description": "weighting factor for sub-window 33"
          },
          {
            "name": "hist_weight_23",
            "bit_range": "12:8",
            "attr": "rw",
            "reset": "CALC",
            "description": "weighting factor for sub-window 23"
          },
          {
            "name": "hist_weight_13",
            "bit_range": "4:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "weighting factor for sub-window 13"
          }
        ],
        "description": "Weighting factor for sub-windows\nNote: Allowed value range for weight factor is 0 to 16. The resulting weight is \nregister_value / 16. The host software has to limit the register value for each factor to 16. \nWeight registers are available, if histogram version 3 is implemented. \n\n \n"
      },
      {
        "type": "register",
        "name": "ISP_HIST_WEIGHT_04TO34",
        "offset": "0x2468",
        "size": "32",
        "reset": "0x10101010",
        "bit_ranges": [
          {
            "name": "hist_weight_34",
            "bit_range": "28:24",
            "attr": "rw",
            "reset": "CALC",
            "description": "weighting factor for sub-window 34"
          },
          {
            "name": "hist_weight_24",
            "bit_range": "20:16",
            "attr": "rw",
            "reset": "CALC",
            "description": "weighting factor for sub-window 24"
          },
          {
            "name": "hist_weight_14",
            "bit_range": "12:8",
            "attr": "rw",
            "reset": "CALC",
            "description": "weighting factor for sub-window 14\n"
          },
          {
            "name": "hist_weight_04",
            "bit_range": "4:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "weighting factor for sub-window 04"
          }
        ],
        "description": "Weighting factor for sub-windows\nNote: Allowed value range for weight factor is 0 to 16. The resulting weight is \nregister_value / 16. The host software has to limit the register value for each factor to 16. \nWeight registers are available, if histogram version 3 is implemented. \n\n"
      },
      {
        "type": "register",
        "name": "ISP_HIST_WEIGHT_44",
        "offset": "0x246c",
        "size": "32",
        "reset": "0x00000010",
        "bit_ranges": [
          {
            "name": "hist_weight_44",
            "bit_range": "4:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "weighting factor for sub-window 44"
          }
        ],
        "description": "Weighting factor for sub-windows\nNote: Allowed value range for weight factor is 0 to 16. The resulting weight is \nregister_value / 16. The host software has to limit the register value for each factor to 16. \nWeight registers are available, if histogram version 3 is implemented. \n\n"
      },
      {
        "type": "register",
        "name": "ISP_FILT_MODE",
        "offset": "0x2500",
        "size": "32",
        "reset": "0x000004F2",
        "bit_ranges": [
          {
            "name": "stage1_select",
            "bit_range": "11:8",
            "attr": "rw",
            "reset": "CALC",
            "description": "Green filter stage 1 select (range 0x0...0x8) 0x0\nmaximum blurring\n0x4 Default\n0x7 minimum blurring 0x8 filter stage1 bypass\nFor a detailed description refer to chapter \"ISP Filter\nProgramming\" of user manual"
          },
          {
            "name": "filt_chr_h_mode",
            "bit_range": "7:6",
            "attr": "rw",
            "reset": "CALC",
            "description": "Chroma filter horizontal mode 00 horizontal chroma filter bypass 01 horizontal chroma filter 1 static mask = [10 12 10] 10 horizontal chroma filter 2 (dynamic blur1) 11 horizontal chroma filter 3 (dynamic blur2) Default"
          },
          {
            "name": "filt_chr_v_mode",
            "bit_range": "5:4",
            "attr": "rw",
            "reset": "CALC",
            "description": "Chroma filter vertical mode\nvertical chroma filter bypass\nvertical chroma filter 1 static [8 16 8]\nvertical chroma filter 2 static [10 12 10]\nvertical chroma filter 3 static [12 8 12] Default"
          },
          {
            "name": "filt_mode",
            "bit_range": "1",
            "attr": "rw",
            "reset": "CALC",
            "description": "0 green filter static mode (active filter factor = FILT_FAC_MID)\n1 dynamic noise reduction/sharpen Default\n"
          },
          {
            "name": "filt_enable",
            "bit_range": "0",
            "attr": "rw",
            "reset": "CALC",
            "description": "1 enable filter\n0 bypass filter Default"
          }
        ],
        "description": "mode control register for the filter block"
      },
      {
        "type": "register",
        "name": "ISP_FILT_THRESH_BL0",
        "offset": "0x2528",
        "size": "32",
        "reset": "0x0000000D",
        "bit_ranges": [
          {
            "name": "filt_thresh_bl0",
            "bit_range": "9:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "If filt_thresh_bl1 < sum_grad < filt_thresh_bl0 then filt_fac_bl0 is selected"
          }
        ],
        "description": "Blurring threshold 0\nNote: sum_grad is calculated by the texture detection unit as the sum of \n\nhorizontal and vertical gradients \n\n"
      },
      {
        "type": "register",
        "name": "ISP_FILT_THRESH_BL1",
        "offset": "0x252c",
        "size": "32",
        "reset": "0x00000005",
        "bit_ranges": [
          {
            "name": "filt_thresh_bl1",
            "bit_range": "9:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "If sum_grad < filt_thresh_bl1 then filt_fac_bl1 is\nselected"
          }
        ],
        "description": "Blurring threshold 1\nNote: sum_grad is calculated by the texture detection unit as the sum of horizontal and \nvertical gradients \n\n"
      },
      {
        "type": "register",
        "name": "ISP_FILT_THRESH_SH0",
        "offset": "0x2530",
        "size": "32",
        "reset": "0x0000001A",
        "bit_ranges": [
          {
            "name": "filt_thresh_sh0",
            "bit_range": "9:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "If filt_thresh_sh0 < sum_grad < filt_thresh_sh1 then filt_thresh_sh0 is selected"
          }
        ],
        "description": "Sharpening threshold 0\nNote: sum_grad is calculated by the texture detection unit as the sum of horizontal and \nvertical gradients \n\n \n\n"
      },
      {
        "type": "register",
        "name": "ISP_FILT_THRESH_SH1",
        "offset": "0x2534",
        "size": "32",
        "reset": "0x0000002C",
        "bit_ranges": [
          {
            "name": "filt_thresh_sh1",
            "bit_range": "9:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "If filt_thresh_sh1 < sum_grad then filt_thresh_sh1 is\nselected"
          }
        ],
        "description": "Sharpening threshold 1\nNote: sum_grad is calculated by the texture detection unit as the sum of horizontal and \n\nvertical gradients \n\n \n"
      },
      {
        "type": "register",
        "name": "ISP_FILT_LUM_WEIGHT",
        "offset": "0x2538",
        "size": "32",
        "reset": "0x00022040",
        "bit_ranges": [
          {
            "name": "lum_weight_gain",
            "bit_range": "18:16",
            "attr": "rw",
            "reset": "CALC",
            "description": "Gain select of luminance weight function"
          },
          {
            "name": "lum_weight_kink",
            "bit_range": "15:8",
            "attr": "rw",
            "reset": "CALC",
            "description": "Kink position of luminance weight function"
          },
          {
            "name": "lum_weight_min",
            "bit_range": "7:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Minimum value of luminance weight function\n"
          }
        ],
        "description": "Parameters for luminance weight function"
      },
      {
        "type": "register",
        "name": "ISP_FILT_FAC_SH1",
        "offset": "0x253c",
        "size": "32",
        "reset": "0x00000010",
        "bit_ranges": [
          {
            "name": "filt_fac_sh1",
            "bit_range": "5:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Filter factor for sharp1 level\n"
          }
        ],
        "description": "filter factor sharp1"
      },
      {
        "type": "register",
        "name": "ISP_FILT_FAC_SH0",
        "offset": "0x2540",
        "size": "32",
        "reset": "0x0000000C",
        "bit_ranges": [
          {
            "name": "filt_fac_sh0",
            "bit_range": "5:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Filter factor for sharp0 level\n"
          }
        ],
        "description": "filter factor sharp0"
      },
      {
        "type": "register",
        "name": "ISP_FILT_FAC_MID",
        "offset": "0x2544",
        "size": "32",
        "reset": "0x0000000A",
        "bit_ranges": [
          {
            "name": "filt_fac_mid",
            "bit_range": "5:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Filter factor for mid level and for static filter mode\n"
          }
        ],
        "description": "filter factor middle"
      },
      {
        "type": "register",
        "name": "ISP_FILT_FAC_BL0",
        "offset": "0x2548",
        "size": "32",
        "reset": "0x00000006",
        "bit_ranges": [
          {
            "name": "filt_fac_bl0",
            "bit_range": "5:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Filter factor for blur 0 level\n"
          }
        ],
        "description": "Parameter for blur 0 filter"
      },
      {
        "type": "register",
        "name": "ISP_FILT_FAC_BL1",
        "offset": "0x254c",
        "size": "32",
        "reset": "0x00000002",
        "bit_ranges": [
          {
            "name": "filt_fac_bl1",
            "bit_range": "5:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Filter factor for blur 1 level (max blur)"
          }
        ],
        "description": "Parameter for blur 1 filter"
      },
      {
        "type": "register",
        "name": "ISP_CAC_CTRL",
        "offset": "0x2580",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "h_clip_mode",
            "bit_range": "3",
            "attr": "rw",
            "reset": "CALC",
            "description": "Defines the maximum red/blue pixel shift in horizontal\ndirection At pixel positions, that require a larger\ndisplacement, the maximum shift value is used instead\n(vector clipping)\n0: Set horizontal vector clipping to +/-4 pixel\ndisplacement (Default)\n1: Set horizontal vector clipping to +/-4 or +/-5 pixel\ndisplacement depending on pixel position inside the Bayer\nraster (dynamic switching between +/-4 and +/-5)"
          },
          {
            "name": "v_clip_mode",
            "bit_range": "2:1",
            "attr": "rw",
            "reset": "CALC",
            "description": "Defines the maximum red/blue pixel shift in vertical\ndirection 00: Set vertical vector clipping to +/-2 pixel ; fix filter_enable (Default)\n01: Set vertical vector clipping to +/-3 pixel; dynamic filter_enable for chroma low pass filter\n10: Set vertical vector clipping +/-3 or +/-4 pixel\ndisplacement depending on pixel position inside the Bayer\nraster (dynamic switching between +/-3 and +/-4)\n11: reserved"
          },
          {
            "name": "cac_en",
            "bit_range": "0",
            "attr": "rw",
            "reset": "CALC",
            "description": "0: chromatic aberration correction off\n1: chromatic aberration correction on"
          }
        ],
        "description": "Control register for chromatic aberration correction\nNote: Clipping behavior can be controlled by clip_mode bits. If no clipping occurs, because \ndisplacement is below the maximum correctable displacement, then it does not matter which \nmode is selected. \n\n \n"
      },
      {
        "type": "register",
        "name": "ISP_CAC_COUNT_START",
        "offset": "0x2584",
        "size": "32",
        "reset": "0x10001000",
        "bit_ranges": [
          {
            "name": "v_count_start",
            "bit_range": "28:16",
            "attr": "rw",
            "reset": "CALC",
            "description": "13 bit v_count preload value (range 8191 ... 1) of the\nvertical CAC line counter. Before frame start v_count has\nto be preloaded with (v_size/2 + v_center_offset), with v_size the image height and v_center_offset the vertical distance between image\ncenter and optical center.\n\nAfter frame start the v_count decrements with every\nline until a value of zero is reached for the line in the\noptical center. Than the v_sign bit toggles and the v_counter decrements with every line until end of frame."
          },
          {
            "name": "h_count_start",
            "bit_range": "12:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "13 bit h_count preload value (range 8191 .. 1) of the\nhorizontal CAC pixel counter. Before line start h_count has\nto be preloaded with (h_size/2 + h_center_offset), with h_size the image width and h_center_offset the horizontal distance between\nimage center and optical center.\n\nAfter line start the h_count decrements with every\npixel until a value of zero is reached for the column in the\noptical center. Than the h_sign bit toggles and the h_counter increments with every pixel until end of line."
          }
        ],
        "description": "Preload values for CAC pixel and line counter\nNote: Reset value is valid for 8192 x 8192 image resolution with centered chromatic \naberration (no offset from image center). \n\n \n"
      },
      {
        "type": "register",
        "name": "ISP_CAC_A",
        "offset": "0x2588",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "A_Blue",
            "bit_range": "24:16",
            "attr": "rw",
            "reset": "CALC",
            "description": "Parameter A_Blue for radial blue shift calculation,\naccording to (A_Blue * r + B_Blue * r^2 + C_Blue * r^3).\nIt is a 9 bit twos complement integer with 4 fractional\ndigits value and value range from -16 up to 15.9375."
          },
          {
            "name": "A_Red",
            "bit_range": "8:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Parameter A_Red for radial red shift calculation,\naccording to (A_Red * r + B_Red * r^2 + C_Red * r^3).\nIt is a 9 bit twos complement integer with 4 fractional\ndigits value and value range from -16 up to 15.9375.\n"
          }
        ],
        "description": "Linear Parameters for radial shift calculation"
      },
      {
        "type": "register",
        "name": "ISP_CAC_B",
        "offset": "0x258c",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "B_Blue",
            "bit_range": "24:16",
            "attr": "rw",
            "reset": "CALC",
            "description": "Parameter B_Blue for radial blue shift calculation,\naccording to (A_Blue * r + B_Blue * r^2 + C_Blue * r^3).\nIt is a 9 bit twos complement integer with 4 fractional\ndigits value and value range from -16 up to 15.9375."
          },
          {
            "name": "B_Red",
            "bit_range": "8:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Parameter B_Red for radial red shift calculation,\naccording to (A_Red * r + B_Red * r^2 + C_Red * r^3).\nIt is a 9 bit twos complement integer with 4 fractional\ndigits value and value range from -16 up to 15.9375.\n"
          }
        ],
        "description": "Square Parameters for radial shift calculation"
      },
      {
        "type": "register",
        "name": "ISP_CAC_C",
        "offset": "0x2590",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "C_Blue",
            "bit_range": "24:16",
            "attr": "rw",
            "reset": "CALC",
            "description": "Parameter C_Blue for radial blue shift calculation,\naccording to (A_Blue * r + B_Blue * r^2 + C_Blue * r^3).\nIt is a 9 bit twos complement integer with 4 fractional\ndigits value and value range from -16 up to 15.9375."
          },
          {
            "name": "C_Red",
            "bit_range": "8:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Parameter C_Red for radial red shift calculation,\naccording to (A_Red * r + B_Red * r^2 + C_Red * r^3).\nIt is a 9 bit twos complement integer with 4 fractional\ndigits value and value range from -16 up to 15.9375.\n"
          }
        ],
        "description": "Cubical Parameters for radial shift calculation"
      },
      {
        "type": "register",
        "name": "ISP_CAC_X_NORM",
        "offset": "0x2594",
        "size": "32",
        "reset": "0x00080010",
        "bit_ranges": [
          {
            "name": "x_ns",
            "bit_range": "19:16",
            "attr": "rw",
            "reset": "CALC",
            "description": "Horizontal normalization shift parameter x_ns (4 bit\nunsigned integer) in equation x_d[7:0] = (((h_count << 4) >> x_ns) * x_nf) >> 5"
          },
          {
            "name": "x_nf",
            "bit_range": "4:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Horizontal scaling or normalization factor x_nf (5 bit\nunsigned integer) range 0 .. 31 in equation x_d[7:0] = (((h_count << 4) >> x_ns) * x_nf) >> 5"
          }
        ],
        "description": "Normalization parameters for calculation of image \n\ncoordinate x_d relative to optical center\nNote: These values need to be programmed according to the image resolution and the \ncenter offset of the chromatic aberration. \n\nThe parameters are necessary to avoid high gate count of the CAC hardware block. The \nreset value is valid for an image resolution of 2600 x 1950 and center offset 0. \n\n \n"
      },
      {
        "type": "register",
        "name": "ISP_CAC_Y_NORM",
        "offset": "0x2598",
        "size": "32",
        "reset": "0x00080010",
        "bit_ranges": [
          {
            "name": "y_ns",
            "bit_range": "19:16",
            "attr": "rw",
            "reset": "CALC",
            "description": "Vertical normalization shift parameter y_ns (4 bit\nunsigned integer) in equation y_d[7:0] = (((v_count << 4) >> y_ns) * y_nf) >> 5\n\n"
          },
          {
            "name": "y_nf",
            "bit_range": "4:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Vertical scaling or normalization factor y_nf (5 bit\nunsigned integer) range 0 .. 31 in equation y_d[7:0] = (((v_count << 4) >> y_ns) * y_nf) >> 5"
          }
        ],
        "description": "Normalization parameters for calculation of image \n\ncoordinate y_d relative to optical center\nNote: These values need to be programmed according to the image resolution and the \ncenter offset of the chromatic aberration. \n\nThe parameters are necessary to avoid high gate count of the CAC hardware block. The \n\nreset value is valid for an image resolution of 2600 x 1950 and center offset 0. \n\n \n"
      },
      {
        "type": "register",
        "name": "ISP_EXP_CTRL",
        "offset": "0x2600",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "exp_meas_mode",
            "bit_range": "31",
            "attr": "rw",
            "reset": "CALC",
            "description": "'1' luminance calculation according to Y=(R+G+B) x\n0.332 (85/256)\n'0' luminance calculation according to\nY=16+0.25R+0.5G+0.1094B"
          },
          {
            "name": "autostop",
            "bit_range": "1",
            "attr": "rw",
            "reset": "CALC",
            "description": "'1' stop measuring after a complete frame '0'\ncontinous measurement"
          },
          {
            "name": "exp_start",
            "bit_range": "0",
            "attr": "rw",
            "reset": "CALC",
            "description": "'1' start measuring a frame. The exp block will reset\nthis bit and halt after completing one frame, if bit\n\"autostop\" is set to '1'.\n"
          }
        ],
        "description": "Exposure control"
      },
      {
        "type": "register",
        "name": "ISP_EXP_H_OFFSET",
        "offset": "0x2604",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "isp_exp_h_offset",
            "bit_range": "12:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Horizontal offset of first block in pixels. 0 <= value <=2424"
          }
        ],
        "description": "Horizontal offset for first block"
      },
      {
        "type": "register",
        "name": "ISP_EXP_V_OFFSET",
        "offset": "0x2608",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "isp_exp_v_offset",
            "bit_range": "12:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Vertical offset of first block\nin pixels. 0 <= value <= 1806\n"
          }
        ],
        "description": "Vertical offset for first block"
      },
      {
        "type": "register",
        "name": "ISP_EXP_H_SIZE",
        "offset": "0x260c",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "isp_exp_h_size",
            "bit_range": "10:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Horizontal size in pixels of one block. 35 <= value <=516"
          }
        ],
        "description": "Horizontal size of one block\nNote: exp_h_size x 5 must be less (not equal) than the horizontal size of the picture \n\n \n"
      },
      {
        "type": "register",
        "name": "ISP_EXP_V_SIZE",
        "offset": "0x2610",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "isp_exp_v_size",
            "bit_range": "10:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Vertical size in pixels of one block. 28 <= value <=390"
          }
        ],
        "description": "Vertical size of one block\nNote: The vertical size must be set in a way that after the last measurement window at \n\nleast two lines of the image will follow. In addition only even values for vertical size are \n\nallowed (vertical size must be a multiple of 2). \n\n"
      },
      {
        "type": "register",
        "name": "ISP_EXP_MEAN_00",
        "offset": "0x2614",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "isp_exp_mean_00",
            "bit_range": "7:0",
            "attr": "r",
            "reset": "CALC",
            "description": " (x,y)\n"
          }
        ],
        "description": "Mean luminance value of block 00"
      },
      {
        "type": "register",
        "name": "ISP_EXP_MEAN_10",
        "offset": "0x2618",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "isp_exp_mean_10",
            "bit_range": "7:0",
            "attr": "r",
            "reset": "CALC",
            "description": " (x,y)\n"
          }
        ],
        "description": "Mean luminance value of block 10"
      },
      {
        "type": "register",
        "name": "ISP_EXP_MEAN_20",
        "offset": "0x261c",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "isp_exp_mean_20",
            "bit_range": "7:0",
            "attr": "r",
            "reset": "CALC",
            "description": " (x,y)\n"
          }
        ],
        "description": "Mean luminance value of block 20"
      },
      {
        "type": "register",
        "name": "ISP_EXP_MEAN_30",
        "offset": "0x2620",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "isp_exp_mean_30",
            "bit_range": "7:0",
            "attr": "r",
            "reset": "CALC",
            "description": " (x,y)"
          }
        ],
        "description": "Mean luminance value of block 30"
      },
      {
        "type": "register",
        "name": "ISP_EXP_MEAN_40",
        "offset": "0x2624",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "isp_exp_mean_40",
            "bit_range": "7:0",
            "attr": "r",
            "reset": "CALC",
            "description": " (x,y)\n"
          }
        ],
        "description": "Mean luminance value of block 40"
      },
      {
        "type": "register",
        "name": "ISP_EXP_MEAN_01",
        "offset": "0x2628",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "isp_exp_mean_01",
            "bit_range": "7:0",
            "attr": "r",
            "reset": "CALC",
            "description": " (x,y)\n"
          }
        ],
        "description": "Mean luminance value of block 01"
      },
      {
        "type": "register",
        "name": "ISP_EXP_MEAN_11",
        "offset": "0x262c",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "isp_exp_mean_11",
            "bit_range": "7:0",
            "attr": "r",
            "reset": "CALC",
            "description": " (x,y)\n"
          }
        ],
        "description": "Mean luminance value of block 11"
      },
      {
        "type": "register",
        "name": "ISP_EXP_MEAN_21",
        "offset": "0x2630",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "isp_exp_mean_21",
            "bit_range": "7:0",
            "attr": "r",
            "reset": "CALC",
            "description": " (x,y)"
          }
        ],
        "description": "Mean luminance value of block 21"
      },
      {
        "type": "register",
        "name": "ISP_EXP_MEAN_31",
        "offset": "0x2634",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "isp_exp_mean_31",
            "bit_range": "7:0",
            "attr": "r",
            "reset": "CALC",
            "description": " (x,y)\n"
          }
        ],
        "description": "Mean luminance value of block 31"
      },
      {
        "type": "register",
        "name": "ISP_EXP_MEAN_41",
        "offset": "0x2638",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "isp_exp_mean_41",
            "bit_range": "7:0",
            "attr": "r",
            "reset": "CALC",
            "description": " (x,y)\n"
          }
        ],
        "description": "Mean luminance value of block 41"
      },
      {
        "type": "register",
        "name": "ISP_EXP_MEAN_02",
        "offset": "0x263c",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "isp_exp_mean_02",
            "bit_range": "7:0",
            "attr": "r",
            "reset": "CALC",
            "description": " (x,y)\n"
          }
        ],
        "description": "Mean luminance value of block 02"
      },
      {
        "type": "register",
        "name": "ISP_EXP_MEAN_12",
        "offset": "0x2640",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "isp_exp_mean_12",
            "bit_range": "7:0",
            "attr": "r",
            "reset": "CALC",
            "description": " (x,y)"
          }
        ],
        "description": "Mean luminance value of block 12"
      },
      {
        "type": "register",
        "name": "ISP_EXP_MEAN_22",
        "offset": "0x2644",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "isp_exp_mean_22",
            "bit_range": "7:0",
            "attr": "r",
            "reset": "CALC",
            "description": " (x,y)\n"
          }
        ],
        "description": "Mean luminance value of block 22"
      },
      {
        "type": "register",
        "name": "ISP_EXP_MEAN_32",
        "offset": "0x2648",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "isp_exp_mean_32",
            "bit_range": "7:0",
            "attr": "r",
            "reset": "CALC",
            "description": " (x,y)\n"
          }
        ],
        "description": "Mean luminance value of block 32"
      },
      {
        "type": "register",
        "name": "ISP_EXP_MEAN_42",
        "offset": "0x264c",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "isp_exp_mean_42",
            "bit_range": "7:0",
            "attr": "r",
            "reset": "CALC",
            "description": " (x,y)\n"
          }
        ],
        "description": "Mean luminance value of block 42"
      },
      {
        "type": "register",
        "name": "ISP_EXP_MEAN_03",
        "offset": "0x2650",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "isp_exp_mean_03",
            "bit_range": "7:0",
            "attr": "r",
            "reset": "CALC",
            "description": " (x,y)"
          }
        ],
        "description": "Mean luminance value of block 03"
      },
      {
        "type": "register",
        "name": "ISP_EXP_MEAN_13",
        "offset": "0x2654",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "isp_exp_mean_13",
            "bit_range": "7:0",
            "attr": "r",
            "reset": "CALC",
            "description": " (x,y)\n"
          }
        ],
        "description": "Mean luminance value of block 13"
      },
      {
        "type": "register",
        "name": "ISP_EXP_MEAN_23",
        "offset": "0x2658",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "isp_exp_mean_23",
            "bit_range": "7:0",
            "attr": "r",
            "reset": "CALC",
            "description": " (x,y)\n"
          }
        ],
        "description": "Mean luminance value of block 23"
      },
      {
        "type": "register",
        "name": "ISP_EXP_MEAN_33",
        "offset": "0x265c",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "isp_exp_mean_33",
            "bit_range": "7:0",
            "attr": "r",
            "reset": "CALC",
            "description": " (x,y)\n"
          }
        ],
        "description": "Mean luminance value of block 33"
      },
      {
        "type": "register",
        "name": "ISP_EXP_MEAN_43",
        "offset": "0x2660",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "isp_exp_mean_43",
            "bit_range": "7:0",
            "attr": "r",
            "reset": "CALC",
            "description": " (x,y)"
          }
        ],
        "description": "Mean luminance value of block 43"
      },
      {
        "type": "register",
        "name": "ISP_EXP_MEAN_04",
        "offset": "0x2664",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "isp_exp_mean_04",
            "bit_range": "7:0",
            "attr": "r",
            "reset": "CALC",
            "description": " (x,y)\n"
          }
        ],
        "description": "Mean luminance value of block 04"
      },
      {
        "type": "register",
        "name": "ISP_EXP_MEAN_14",
        "offset": "0x2668",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "isp_exp_mean_14",
            "bit_range": "7:0",
            "attr": "r",
            "reset": "CALC",
            "description": " (x,y)\n"
          }
        ],
        "description": "Mean luminance value of block 14"
      },
      {
        "type": "register",
        "name": "ISP_EXP_MEAN_24",
        "offset": "0x266c",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "isp_exp_mean_24",
            "bit_range": "7:0",
            "attr": "r",
            "reset": "CALC",
            "description": " (x,y)\n"
          }
        ],
        "description": "Mean luminance value of block 24"
      },
      {
        "type": "register",
        "name": "ISP_EXP_MEAN_34",
        "offset": "0x2670",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "isp_exp_mean_34",
            "bit_range": "7:0",
            "attr": "r",
            "reset": "CALC",
            "description": " (x,y)"
          }
        ],
        "description": "Mean luminance value of block 34"
      },
      {
        "type": "register",
        "name": "ISP_EXP_MEAN_44",
        "offset": "0x2674",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "isp_exp_mean_44",
            "bit_range": "7:0",
            "attr": "r",
            "reset": "CALC",
            "description": " (x,y)\n"
          }
        ],
        "description": "Mean luminance value of block 44"
      },
      {
        "type": "register",
        "name": "ISP_BLS_CTRL",
        "offset": "0x2700",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "WINDOW_ENABLE",
            "bit_range": "3:2",
            "attr": "rw",
            "reset": "CALC",
            "description": "0: no measuring is\nperformed 1: only window"
          },
          {
            "name": "is",
            "bit_range": "1",
            "attr": "rw",
            "reset": "CALC",
            "description": "measured\n2: only window 2 is\nmeasured 3: both windows 1 BLS_MODE 1: subtract measured\nvalues 0: subtract fixed\nvalues"
          },
          {
            "name": "BLS_ENABLE",
            "bit_range": "0",
            "attr": "rw",
            "reset": "CALC",
            "description": "1: black level subtraction is\nenabled 0: bypass the black\nlevel processing\n"
          }
        ],
        "description": "global control register"
      },
      {
        "type": "register",
        "name": "ISP_BLS_SAMPLES",
        "offset": "0x2704",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "BLS_SAMPLES",
            "bit_range": "4:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "This number to the power of two gives the number of\nmeasure samples for each Bayer position. Range 0x00:\n2^0=1 to 0x12: 2^18=262144. This number is also the\ndivider for the accumulator for each Bayer position.\nThe accumulation will be stopped, if the number of\nmeasured pixels for the current Bayer position is equal to\nthe number of samples.\nThe measure windows must be positioned that way\nthat the number of included pixels of each Bayer position\nincluded by both windows is equal or greater than the\nnumber of measure samples calculated by 2^BLS_SAMPLES !\nNOTE: The number of pixels of one Bayer position is\n1/4 of the number of all Pixels included by the measure\nwindows.\n"
          }
        ],
        "description": "samples register"
      },
      {
        "type": "register",
        "name": "ISP_BLS_H1_START",
        "offset": "0x2708",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "BLS_H1_START",
            "bit_range": "13:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Black pixel  position\n"
          }
        ],
        "description": "window 1 horizontal start"
      },
      {
        "type": "register",
        "name": "ISP_BLS_H1_STOP",
        "offset": "0x270c",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "BLS_H1_STOP",
            "bit_range": "13:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Black pixel  position"
          }
        ],
        "description": "window 1 horizontal stop"
      },
      {
        "type": "register",
        "name": "ISP_BLS_V1_START",
        "offset": "0x2710",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "BLS_V1_START",
            "bit_range": "13:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Black pixel  position\n"
          }
        ],
        "description": "window 1 vertical start"
      },
      {
        "type": "register",
        "name": "ISP_BLS_V1_STOP",
        "offset": "0x2714",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "BLS_V1_STOP",
            "bit_range": "13:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Black pixel  position\n"
          }
        ],
        "description": "window 1 vertical stop"
      },
      {
        "type": "register",
        "name": "ISP_BLS_H2_START",
        "offset": "0x2718",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "BLS_H2_START",
            "bit_range": "13:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Black pixel  position\n"
          }
        ],
        "description": "window 2 horizontal start"
      },
      {
        "type": "register",
        "name": "ISP_BLS_H2_STOP",
        "offset": "0x271c",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "BLS_H2_STOP",
            "bit_range": "13:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Black pixel  position"
          }
        ],
        "description": "window 2 horizontal stop"
      },
      {
        "type": "register",
        "name": "ISP_BLS_V2_START",
        "offset": "0x2720",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "BLS_V2_START",
            "bit_range": "13:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Black pixel  position\n"
          }
        ],
        "description": "window 2 vertical start"
      },
      {
        "type": "register",
        "name": "ISP_BLS_V2_STOP",
        "offset": "0x2724",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "BLS_V2_STOP",
            "bit_range": "13:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Black pixel  position\n"
          }
        ],
        "description": "window 2 vertical stop"
      },
      {
        "type": "register",
        "name": "ISP_BLS_A_FIXED",
        "offset": "0x2728",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "BLS_A_FIXED",
            "bit_range": "12:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Fixed black level for A pixels \u2013 signed\ntwo's complement, value range from -4096 to +4095,\na positive value will be subtracted from the pixel\nvalues\n"
          }
        ],
        "description": "fixed black level A"
      },
      {
        "type": "register",
        "name": "ISP_BLS_B_FIXED",
        "offset": "0x272c",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "BLS_B_FIXED",
            "bit_range": "12:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Fixed black level for B pixels \u2013 signed\ntwo's complement, value range from -4096 to +4095"
          }
        ],
        "description": "fixed black level B"
      },
      {
        "type": "register",
        "name": "ISP_BLS_C_FIXED",
        "offset": "0x2730",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "BLS_C_FIXED",
            "bit_range": "12:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Fixed black level for C pixels \u2013 signed\ntwo's complement, value range from -4096 to +4095\n"
          }
        ],
        "description": "fixed black level C"
      },
      {
        "type": "register",
        "name": "ISP_BLS_D_FIXED",
        "offset": "0x2734",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "BLS_D_FIXED",
            "bit_range": "12:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Fixed black level for D pixels - signed\ntwo's complement, value range from -4096 to +4095\n"
          }
        ],
        "description": "fixed black level D"
      },
      {
        "type": "register",
        "name": "ISP_BLS_A_MEASURED",
        "offset": "0x2738",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "BLS_A_MEASURED",
            "bit_range": "11:0",
            "attr": "r",
            "reset": "CALC",
            "description": "Measured black level for A pixels\n"
          }
        ],
        "description": "measured black level A"
      },
      {
        "type": "register",
        "name": "ISP_BLS_B_MEASURED",
        "offset": "0x273c",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "BLS_B_MEASURED",
            "bit_range": "11:0",
            "attr": "r",
            "reset": "CALC",
            "description": "Measured black level for B pixels"
          }
        ],
        "description": "measured black level B"
      },
      {
        "type": "register",
        "name": "ISP_BLS_C_MEASURED",
        "offset": "0x2740",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "BLS_C_MEASURED",
            "bit_range": "11:0",
            "attr": "r",
            "reset": "CALC",
            "description": "Measured black level for C pixels\n"
          }
        ],
        "description": "measured black level C"
      },
      {
        "type": "register",
        "name": "ISP_BLS_D_MEASURED",
        "offset": "0x2744",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "BLS_D_MEASURED",
            "bit_range": "11:0",
            "attr": "r",
            "reset": "CALC",
            "description": "Measured black level for D pixels\n"
          }
        ],
        "description": "measured black level D"
      },
      {
        "type": "register",
        "name": "ISP_DPF_MODE",
        "offset": "0x2800",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "USE_NF_GAIN",
            "bit_range": "9",
            "attr": "rw",
            "reset": "CALC",
            "description": "1: DPF_NF_GAINs will be used.\n0: DPF_NF_GAINs will not be used. *Default*"
          },
          {
            "name": "LSC_GAIN_COMP",
            "bit_range": "8",
            "attr": "rw",
            "reset": "CALC",
            "description": "1: LSC gain will be processed\n0: LSC gain will not be processed. Use LSC gain factor\nof 1.\n*Default*"
          },
          {
            "name": "AWB_GAIN_COMP",
            "bit_range": "7",
            "attr": "rw",
            "reset": "CALC",
            "description": "Only relevant when use_nf_gain == 0 && ISP_CTRL::ISP_AWB_ENABLE ==1\n1: ISP_AWB gains will be processed\n0: ISP_AWB gains will not be processed. Use AWB gain\nfactor of 1. *Default*"
          },
          {
            "name": "NLL_SEGMENTATION",
            "bit_range": "6",
            "attr": "rw",
            "reset": "CALC",
            "description": "1: optimized logarithmic like segmentation for Noise\nLevel Lookup (NLL)\n0: equidistant segmentation for NLL *Default*\n"
          },
          {
            "name": "RB_FILTER_SIZE",
            "bit_range": "5",
            "attr": "rw",
            "reset": "CALC",
            "description": "1: Red and Blue filter kernel size of 9x9 (5x5 active)\npixels 0: Wide Red and Blue filter kernel size of 13x9 (7x5\nactive) pixels *Default*"
          },
          {
            "name": "R_FILTER_OFF",
            "bit_range": "4",
            "attr": "rw",
            "reset": "CALC",
            "description": "1: disable filter processing for red pixels (R) 0: filter R\npixels *Default*"
          },
          {
            "name": "GR_FILTER_OFF",
            "bit_range": "3",
            "attr": "rw",
            "reset": "CALC",
            "description": "1: disable filter processing for green pixels in\ngreen/red lines (GR)\n0: filter GR pixels *Default*"
          },
          {
            "name": "GB_FILTER_OFF",
            "bit_range": "2",
            "attr": "rw",
            "reset": "CALC",
            "description": "1: disable filter processing for green pixels in\ngreen/blue lines (GB)\n0: filter GB pixels *Default*"
          },
          {
            "name": "B_FILTER_OFF",
            "bit_range": "1",
            "attr": "rw",
            "reset": "CALC",
            "description": "1: disable filter processing for blue pixels (B) 0: filter B\npixels *Default*"
          },
          {
            "name": "DPF_ENABLE",
            "bit_range": "0",
            "attr": "rw",
            "reset": "CALC",
            "description": "1: enable dpf\n0: bypass dpf *Default*\n"
          }
        ],
        "description": "Mode control for Denoising Pre-Filter block"
      },
      {
        "type": "register",
        "name": "ISP_DPF_STRENGTH_R",
        "offset": "0x2804",
        "size": "32",
        "reset": "0x00000040",
        "bit_ranges": [
          {
            "name": "INV_WEIGHT_R",
            "bit_range": "7:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Filter strength of the filter is determined by weight.\nDefault is a weight of 1. A higher weight increases the filter\nstrength. In this register the unsigned 8 bit value\n64/weight is stored.\n\nThe following values show examples: weight=0.251\n-> 255, weight=0.5 -> 128, weight=1 -> 64 *default*\nweight=1.25 -> 51, weight=1.5 -> 42,\nweight=1.75 -> 37, weight=2 -> 32"
          }
        ],
        "description": "filter strength of the RED filter"
      },
      {
        "type": "register",
        "name": "ISP_DPF_STRENGTH_G",
        "offset": "0x2808",
        "size": "32",
        "reset": "0x00000040",
        "bit_ranges": [
          {
            "name": "INV_WEIGHT_G",
            "bit_range": "7:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Filter strength of the filter is determined by weight.\nDefault is a weight of 1. A higher weight increases the filter\nstrength. In this register the unsigned 8 bit value\n64/weight is stored.\n\nThe following values show examples: weight=0.251\n-> 255, weight=0.5 -> 128, weight=1 -> 64 *default*\nweight=1.25 -> 51, weight=1.5 -> 42,\nweight=1.75 -> 37, weight=2 -> 32\n"
          }
        ],
        "description": "filter strength of the GREEN filter"
      },
      {
        "type": "register",
        "name": "ISP_DPF_STRENGTH_B",
        "offset": "0x280c",
        "size": "32",
        "reset": "0x00000040",
        "bit_ranges": [
          {
            "name": "INV_WEIGHT_B",
            "bit_range": "7:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Filter strength of the filter is determined by weight.\nDefault is a weight of 1. A higher weight increases the filter\nstrength. In this register the unsigned 8 bit value\n64/weight is stored.\n\nThe following values show examples: weight=0.251\n-> 255, weight=0.5 -> 128, weight=1 -> 64 *default*\nweight=1.25 -> 51, weight=1.5 -> 42,\nweight=1.75 -> 37, weight=2 -> 32\n"
          }
        ],
        "description": "filter strength of the BLUE filter"
      },
      {
        "type": "register",
        "name": "ISP_DPF_S_WEIGHT_G_1_4",
        "offset": "0x2810",
        "size": "32",
        "reset": "0x10101010",
        "bit_ranges": [
          {
            "name": "S_WEIGHT_G4",
            "bit_range": "28:24",
            "attr": "rw",
            "reset": "CALC",
            "description": "Filter Coefficient green channel S_WEIGHT_G4 5 bit\nunsigned, value range 1/16 to 16/16 Default value is\n16/16 (*Default*)"
          },
          {
            "name": "S_WEIGHT_G3",
            "bit_range": "20:16",
            "attr": "rw",
            "reset": "CALC",
            "description": "Filter Coefficient green channel S_WEIGHT_G3 5 bit\nunsigned, value range 1/16 to 16/16 Default value is\n16/16 (*Default*)"
          },
          {
            "name": "S_WEIGHT_G2",
            "bit_range": "12:8",
            "attr": "rw",
            "reset": "CALC",
            "description": "Filter Coefficient green channel S_WEIGHT_G2 5 bit\nunsigned, value range 1/16 to 16/16 Default value is\n16/16 (*Default*)"
          },
          {
            "name": "S_WEIGHT_G1",
            "bit_range": "4:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Filter Coefficient green channel S_WEIGHT_G1 5 bit\nunsigned, value range 1/16 to 16/16 Default value is\n16/16 (*Default*)"
          }
        ],
        "description": "Spatial Weights green channel 1 2 3 4\nNote: The value zero (0/16) disables the filter tap \n\n \n"
      },
      {
        "type": "register",
        "name": "ISP_DPF_S_WEIGHT_G_5_6",
        "offset": "0x2814",
        "size": "32",
        "reset": "0x00001010",
        "bit_ranges": [
          {
            "name": "S_WEIGHT_G6",
            "bit_range": "12:8",
            "attr": "rw",
            "reset": "CALC",
            "description": "Filter Coefficient green channel S_WEIGHT_G6 5 bit\nunsigned, value range 1/16 to 16/16 Default value is\n16/16 (*Default*)"
          },
          {
            "name": "S_WEIGHT_G5",
            "bit_range": "4:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Filter Coefficient green channel S_WEIGHT_G5 5 bit\nunsigned, value range 1/16 to 16/16 Default value is\n16/16 (*Default*)"
          }
        ],
        "description": "Spatial Weights green channel 5 6\nNote: The value zero (0/16) disables the filter tap. \n\n"
      },
      {
        "type": "register",
        "name": "ISP_DPF_S_WEIGHT_RB_1_4",
        "offset": "0x2818",
        "size": "32",
        "reset": "0x10101010",
        "bit_ranges": [
          {
            "name": "S_WEIGHT_RB4",
            "bit_range": "28:24",
            "attr": "rw",
            "reset": "CALC",
            "description": "Filter Coefficient red/blue channels S_WEIGHT_RB4 5\nbit unsigned, value range 1/16 to 16/16\nDefault value is 16/16 (*Default*)"
          },
          {
            "name": "S_WEIGHT_RB3",
            "bit_range": "20:16",
            "attr": "rw",
            "reset": "CALC",
            "description": "Filter Coefficient red/blue channels S_WEIGHT_RB3 5\nbit unsigned, value range 1/16 to 16/16\nDefault value is 16/16 (*Default*)"
          },
          {
            "name": "S_WEIGHT_RB2",
            "bit_range": "12:8",
            "attr": "rw",
            "reset": "CALC",
            "description": "Filter Coefficient red/blue channels S_WEIGHT_RB2 5\nbit unsigned, value range 1/16 to 16/16\nDefault value is 16/16 (*Default*)"
          },
          {
            "name": "S_WEIGHT_RB1",
            "bit_range": "4:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Filter Coefficient red/blue channels S_WEIGHT_RB1 5\nbit unsigned, value range 1/16 to 16/16\nDefault value is 16/16 (*Default*)"
          }
        ],
        "description": "Spatial Weights red/blue channels 1 2 3 4\nNote: The value zero (0/16) disables the filter tap. \n\n \n"
      },
      {
        "type": "register",
        "name": "ISP_DPF_S_WEIGHT_RB_5_6",
        "offset": "0x281c",
        "size": "32",
        "reset": "0x00001010",
        "bit_ranges": [
          {
            "name": "S_WEIGHT_RB6",
            "bit_range": "12:8",
            "attr": "rw",
            "reset": "CALC",
            "description": "Filter Coefficient red/blue channels S_WEIGHT_RB6 5\nbit unsigned, value range 1/16 to 16/16\nDefault value is 16/16 (*Default*)"
          },
          {
            "name": "S_WEIGHT_RB5",
            "bit_range": "4:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Filter Coefficient red/blue channels S_WEIGHT_RB5 5\nbit unsigned, value range 1/16 to 16/16\nDefault value is 16/16 (*Default*)"
          }
        ],
        "description": "Spatial Weights red/blue channels 5 6\nNote: The value zero (0/16) disables the filter tap. \n\n \n"
      },
      {
        "type": "register",
        "name": "ISP_DPF_NLL_COEFF",
        "offset": "0x2820",
        "size": "32",
        "reset": "0x000003FF",
        "bit_ranges": [
          {
            "name": "nll_coeff_n",
            "bit_range": "9:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Noise Level Lookup Table Coefficient nll_coeff_n\n10 bit unsigned, value range 1/1024 to 1023/1024\n(*Default*)\n"
          }
        ],
        "description": "Noise Level Lookup Coefficient n (n=0..16)"
      },
      {
        "type": "register",
        "name": "ISP_DPF_NF_GAIN_R",
        "offset": "0x2864",
        "size": "32",
        "reset": "0x00000100",
        "bit_ranges": [
          {
            "name": "DPF_NF_GAIN_R",
            "bit_range": "11:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Noise Function (NF) Gain that replaces the AWB gain\nfor red pixels.\n12 bit unsigned integer format: gain=1 -> 0x100\n"
          }
        ],
        "description": "noise function gain for red pixels"
      },
      {
        "type": "register",
        "name": "ISP_DPF_NF_GAIN_GR",
        "offset": "0x2868",
        "size": "32",
        "reset": "0x00000100",
        "bit_ranges": [
          {
            "name": "DPF_NF_GAIN_GR",
            "bit_range": "11:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Noise Function (NF) Gain that replaces the AWB gain\nfor green pixels in a red line.\n12 bit unsigned integer format: gain=1 -> 0x100\n"
          }
        ],
        "description": "noise function gain for green in red pixels"
      },
      {
        "type": "register",
        "name": "ISP_DPF_NF_GAIN_GB",
        "offset": "0x286c",
        "size": "32",
        "reset": "0x00000100",
        "bit_ranges": [
          {
            "name": "DPF_NF_GAIN_GB",
            "bit_range": "11:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Noise Function (NF) Gain that replaces the AWB gain\nfor green pixels in a blue line.\n12 bit unsigned integer format: gain=1 -> 0x100\n"
          }
        ],
        "description": "noise function gain for green in blue pixels"
      },
      {
        "type": "register",
        "name": "ISP_DPF_NF_GAIN_B",
        "offset": "0x2870",
        "size": "32",
        "reset": "0x00000100",
        "bit_ranges": [
          {
            "name": "DPF_NF_GAIN_B",
            "bit_range": "11:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Noise Function (NF) Gain that replaces the AWB\ngain for blue pixels.\n12 bit unsigned integer format: gain=1 -> 0x100\n"
          }
        ],
        "description": "noise function gain for blue pixels"
      },
      {
        "type": "register",
        "name": "ISP_DPCC_MODE",
        "offset": "0x2900",
        "size": "32",
        "reset": "0x00000004",
        "bit_ranges": [
          {
            "name": "STAGE1_ENABLE",
            "bit_range": "2",
            "attr": "rw",
            "reset": "CALC",
            "description": "1: enable stage1 *Default*\n0: bypass stage1"
          },
          {
            "name": "GRAYSCALE_MODE",
            "bit_range": "1",
            "attr": "rw",
            "reset": "CALC",
            "description": "1: enable gray scale data input from black and white\nsensors (without color filter array)\n0: BAYER DATA INPUT *Default*"
          },
          {
            "name": "ISP_DPCC_enable",
            "bit_range": "0",
            "attr": "rw",
            "reset": "CALC",
            "description": "1: enable DPCC\n0: bypass DPCC *Default*\n"
          }
        ],
        "description": "Mode control for DPCC detection unit"
      },
      {
        "type": "register",
        "name": "ISP_DPCC_OUTPUT_MODE",
        "offset": "0x2904",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "STAGE1_RB_3x3",
            "bit_range": "3",
            "attr": "rw",
            "reset": "CALC",
            "description": "1: stage1 red/blue 9 pixel (3x3) output median\n0: stage1 red/blue 4 or 5 pixel output median\n*Default*"
          },
          {
            "name": "STAGE1_G_3x3",
            "bit_range": "2",
            "attr": "rw",
            "reset": "CALC",
            "description": "1: stage1 green 9 pixel (3x3) output median\n0: stage1 green 4 or 5 pixel output median\n*Default*"
          },
          {
            "name": "STAGE1_INCL_RB_CENTER",
            "bit_range": "1",
            "attr": "rw",
            "reset": "CALC",
            "description": "1: stage1 include center pixel for red/blue output\nmedian 2x2+1\n*Default* 0: stage1 do not include center pixel\nfor red/blue output median 2x2"
          }
        ],
        "description": "Interpolation mode for correction unit"
      },
      {
        "type": "register",
        "name": "ISP_DPCC_SET_USE",
        "offset": "0x2908",
        "size": "32",
        "reset": "0x00000001",
        "bit_ranges": [
          {
            "name": "STAGE1_USE_SET_3",
            "bit_range": "2",
            "attr": "rw",
            "reset": "CALC",
            "description": "1: stage1 use methods set 3\n0: stage1 do not use methods set 3 *Default*"
          },
          {
            "name": "STAGE1_USE_SET_2",
            "bit_range": "1",
            "attr": "rw",
            "reset": "CALC",
            "description": "1: stage1 use methods set 2\n0: stage1 do not use methods set 2 *Default*"
          },
          {
            "name": "STAGE1_USE_SET_1",
            "bit_range": "0",
            "attr": "rw",
            "reset": "CALC",
            "description": "1: stage1 use methods set 1 *Default*\n0: stage1 do not use methods set 1"
          }
        ],
        "description": "DPCC methods set usage for detection\nNote: methods sets can be used in parallel for each stage and the result is the logical OR \n\nof all selected sets \n\n \n"
      },
      {
        "type": "register",
        "name": "ISP_DPCC_METHODS_SET_1",
        "offset": "0x290c",
        "size": "32",
        "reset": "0x00001D1D",
        "bit_ranges": [
          {
            "name": "RG_GREEN1_ENABLE",
            "bit_range": "4",
            "attr": "rw",
            "reset": "CALC",
            "description": "1: enable Rank Gradient check for green *Default*\n0: bypass Rank Gradient check for green"
          },
          {
            "name": "RND_GREEN1_ENABLE",
            "bit_range": "3",
            "attr": "rw",
            "reset": "CALC",
            "description": "1: enable Rank Neighbor Difference check for green\n*Default*\n0: bypass Rank Neighbor Difference check for green"
          },
          {
            "name": "RO_GREEN1_ENABLE",
            "bit_range": "2",
            "attr": "rw",
            "reset": "CALC",
            "description": "1: enable Rank Order check for green *Default*\n0: bypass Rank Order check for green"
          },
          {
            "name": "LC_GREEN1_ENABLE",
            "bit_range": "1",
            "attr": "rw",
            "reset": "CALC",
            "description": "1: enable Line check for green *Default*\n0: bypass Line check for green"
          },
          {
            "name": "PG_GREEN1_ENABLE",
            "bit_range": "0",
            "attr": "rw",
            "reset": "CALC",
            "description": "1: enable Peak Gradient check for green *Default*\n0: bypass Peak Gradient check for green"
          }
        ],
        "description": "Methods enable bits for SET_1\nNote: different methods can be used in parallel, the result is the logical AND of all selected \n\nmethods \n \n"
      },
      {
        "type": "register",
        "name": "ISP_DPCC_METHODS_SET_2",
        "offset": "0x2910",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "RG_GREEN2_ENABLE",
            "bit_range": "4",
            "attr": "rw",
            "reset": "CALC",
            "description": "1: enable Rank Gradient check for green *Default*\n0: bypass Rank Gradient check for green"
          },
          {
            "name": "RND_GREEN2_ENABLE",
            "bit_range": "3",
            "attr": "rw",
            "reset": "CALC",
            "description": "1: enable Rank Neighbor Difference check for green\n*Default* 0: bypass Rank Neighbor Difference check for\ngreen"
          },
          {
            "name": "RO_GREEN2_ENABLE",
            "bit_range": "2",
            "attr": "rw",
            "reset": "CALC",
            "description": "1: enable Rank Order check for green *Default*\n0: bypass Rank Order check for green"
          },
          {
            "name": "LC_GREEN2_ENABLE",
            "bit_range": "1",
            "attr": "rw",
            "reset": "CALC",
            "description": "1: enable Line check for green\n0: bypass Line check for green *Default*\n"
          },
          {
            "name": "PG_GREEN2_ENABLE",
            "bit_range": "0",
            "attr": "rw",
            "reset": "CALC",
            "description": "1: enable Peak Gradient check for green *Default*\n0: bypass Peak Gradient check for green"
          }
        ],
        "description": "Methods enable bits for SET_2\nNote: different methods can be used in parallel, the result is the logical AND of all selected \n\nmethods \n \n"
      },
      {
        "type": "register",
        "name": "ISP_DPCC_METHODS_SET_3",
        "offset": "0x2914",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "RG_GREEN3_ENABLE",
            "bit_range": "4",
            "attr": "rw",
            "reset": "CALC",
            "description": "1: enable Rank Gradient check for green\n0: bypass Rank Gradient check for green *Default*"
          },
          {
            "name": "RND_GREEN3_ENABLE",
            "bit_range": "3",
            "attr": "rw",
            "reset": "CALC",
            "description": "1: enable Rank Neighbor Difference check for green\n0: bypass Rank Neighbor Difference check for green\n*Default*"
          },
          {
            "name": "RO_GREEN3_ENABLE",
            "bit_range": "2",
            "attr": "rw",
            "reset": "CALC",
            "description": "1: enable Rank Order check for green *Default*\n0: bypass Rank Order check for green"
          },
          {
            "name": "LC_GREEN3_ENABLE",
            "bit_range": "1",
            "attr": "rw",
            "reset": "CALC",
            "description": "1: enable Line check for green *Default*\n0: bypass Line check for green\n"
          },
          {
            "name": "PG_GREEN3_ENABLE",
            "bit_range": "0",
            "attr": "rw",
            "reset": "CALC",
            "description": "1: enable Peak Gradient check for green *Default*\n0: bypass Peak Gradient check for green"
          }
        ],
        "description": "Methods enable bits for SET_3\nNote: different methods can be used in parallel, the result is the logical AND of all selected \n\nmethods \n \n"
      },
      {
        "type": "register",
        "name": "ISP_DPCC_LINE_THRESH_1",
        "offset": "0x2918",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "LINE_THR_1_RB",
            "bit_range": "15:8",
            "attr": "rw",
            "reset": "CALC",
            "description": "line threshold for set 1 red/blue"
          },
          {
            "name": "LINE_THR_1_G",
            "bit_range": "7:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "line threshold for set 1 green"
          }
        ],
        "description": "Line threshold SET_1\nNote: all values are unsigned integer \n\n \n"
      },
      {
        "type": "register",
        "name": "ISP_DPCC_LINE_MAD_FAC_1",
        "offset": "0x291c",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "LINE_MAD_FAC_1_RB",
            "bit_range": "13:8",
            "attr": "rw",
            "reset": "CALC",
            "description": "line MAD factor for set 1 red/blue"
          },
          {
            "name": "LINE_MAD_FAC_1_G",
            "bit_range": "5:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "line MAD factor for set 1 green"
          }
        ],
        "description": "Mean Absolute Difference (MAD) factor for Line check set 1\nNote: all values are unsigned integer \n\n"
      },
      {
        "type": "register",
        "name": "ISP_DPCC_PG_FAC_1",
        "offset": "0x2920",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "PG_FAC_1_RB",
            "bit_range": "13:8",
            "attr": "rw",
            "reset": "CALC",
            "description": " red/blue"
          },
          {
            "name": "PG_FAC_1_G",
            "bit_range": "5:0",
            "attr": "rw",
            "reset": "CALC",
            "description": " green"
          }
        ],
        "description": "Peak gradient factor for set 1\nNote: all values are unsigned integer \n\n \n"
      },
      {
        "type": "register",
        "name": "ISP_DPCC_RND_THRESH_1",
        "offset": "0x2924",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "RND_THR_1_RB",
            "bit_range": "15:8",
            "attr": "rw",
            "reset": "CALC",
            "description": " red/blue"
          },
          {
            "name": "RND_THR_1_G",
            "bit_range": "7:0",
            "attr": "rw",
            "reset": "CALC",
            "description": " green"
          }
        ],
        "description": "Rank Neighbor Difference threshold for set 1\nNote: all values are unsigned integer \n\n \n"
      },
      {
        "type": "register",
        "name": "ISP_DPCC_RG_FAC_1",
        "offset": "0x2928",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "RG_FAC_1_RB",
            "bit_range": "13:8",
            "attr": "rw",
            "reset": "CALC",
            "description": " red/blue"
          },
          {
            "name": "RG_FAC_1_G",
            "bit_range": "5:0",
            "attr": "rw",
            "reset": "CALC",
            "description": " green"
          }
        ],
        "description": "Rank gradient factor for set 1\nNote: all values are unsigned integer \n\n"
      },
      {
        "type": "register",
        "name": "ISP_DPCC_LINE_THRESH_2",
        "offset": "0x292c",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "LINE_THR_2_RB",
            "bit_range": "15:8",
            "attr": "rw",
            "reset": "CALC",
            "description": "line threshold for set 2 red/blue"
          },
          {
            "name": "LINE_THR_2_G",
            "bit_range": "7:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "line threshold for set 2 green"
          }
        ],
        "description": "Line threshold set 2\nNote: all values are unsigned integer \n\n \n"
      },
      {
        "type": "register",
        "name": "ISP_DPCC_LINE_MAD_FAC_2",
        "offset": "0x2930",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "LINE_MAD_FAC_2_RB",
            "bit_range": "13:8",
            "attr": "rw",
            "reset": "CALC",
            "description": "line MAD factor for set 2 red/blue"
          },
          {
            "name": "LINE_MAD_FAC_2_G",
            "bit_range": "5:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "line MAD factor for set 2 green"
          }
        ],
        "description": "Mean Absolute Difference (MAD) factor for Line check set 2\nNote: all values are unsigned integer \n\n \n"
      },
      {
        "type": "register",
        "name": "ISP_DPCC_PG_FAC_2",
        "offset": "0x2934",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "PG_FAC_2_RB",
            "bit_range": "13:8",
            "attr": "rw",
            "reset": "CALC",
            "description": " red/blue"
          },
          {
            "name": "PG_FAC_2_G",
            "bit_range": "5:0",
            "attr": "rw",
            "reset": "CALC",
            "description": " green"
          }
        ],
        "description": "Peak gradient factor for set 2\nNote: all values are unsigned integer \n\n"
      },
      {
        "type": "register",
        "name": "ISP_DPCC_RND_THRESH_2",
        "offset": "0x2938",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "RND_THR_2_RB",
            "bit_range": "15:8",
            "attr": "rw",
            "reset": "CALC",
            "description": " red/blue"
          },
          {
            "name": "RND_THR_2_G",
            "bit_range": "7:0",
            "attr": "rw",
            "reset": "CALC",
            "description": " green"
          }
        ],
        "description": "Rank Neighbor Difference threshold for set 2\nNote: all values are unsigned integer \n\n \n"
      },
      {
        "type": "register",
        "name": "ISP_DPCC_RG_FAC_2",
        "offset": "0x293c",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "RG_FAC_2_RB",
            "bit_range": "13:8",
            "attr": "rw",
            "reset": "CALC",
            "description": " red/blue"
          },
          {
            "name": "RG_FAC_2_G",
            "bit_range": "5:0",
            "attr": "rw",
            "reset": "CALC",
            "description": " green"
          }
        ],
        "description": "Rank gradient factor for set 2\nNote: all values are unsigned integer \n\n \n"
      },
      {
        "type": "register",
        "name": "ISP_DPCC_LINE_THRESH_3",
        "offset": "0x2940",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "LINE_THR_3_RB",
            "bit_range": "15:8",
            "attr": "rw",
            "reset": "CALC",
            "description": "line threshold for set 3 red/blue"
          },
          {
            "name": "LINE_THR_3_G",
            "bit_range": "7:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "line threshold for set 3 green"
          }
        ],
        "description": "Line threshold set 3\nNote: all values are unsigned integer \n\n"
      },
      {
        "type": "register",
        "name": "ISP_DPCC_LINE_MAD_FAC_3",
        "offset": "0x2944",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "LINE_MAD_FAC_3_RB",
            "bit_range": "13:8",
            "attr": "rw",
            "reset": "CALC",
            "description": "line MAD factor for set 3 red/blue"
          },
          {
            "name": "LINE_MAD_FAC_3_G",
            "bit_range": "5:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "line MAD factor for set 3 green"
          }
        ],
        "description": "Mean Absolute Difference (MAD) factor for Line check set 3\nNote: all values are unsigned integer \n\n \n"
      },
      {
        "type": "register",
        "name": "ISP_DPCC_PG_FAC_3",
        "offset": "0x2948",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "PG_FAC_3_RB",
            "bit_range": "13:8",
            "attr": "rw",
            "reset": "CALC",
            "description": " red/blue"
          },
          {
            "name": "PG_FAC_3_G",
            "bit_range": "5:0",
            "attr": "rw",
            "reset": "CALC",
            "description": " green"
          }
        ],
        "description": "Peak gradient factor for set 3\nNote: all values are unsigned integer \n\n \n"
      },
      {
        "type": "register",
        "name": "ISP_DPCC_RND_THRESH_3",
        "offset": "0x294c",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "RND_THR_3_RB",
            "bit_range": "15:8",
            "attr": "rw",
            "reset": "CALC",
            "description": " red/blue"
          },
          {
            "name": "RND_THR_3_G",
            "bit_range": "7:0",
            "attr": "rw",
            "reset": "CALC",
            "description": " green"
          }
        ],
        "description": "Rank Neighbor Difference threshold for set 3\nNote: all values are unsigned integer \n\n"
      },
      {
        "type": "register",
        "name": "ISP_DPCC_RG_FAC_3",
        "offset": "0x2950",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "RG_FAC_3_RB",
            "bit_range": "13:8",
            "attr": "rw",
            "reset": "CALC",
            "description": " red/blue"
          },
          {
            "name": "RG_FAC_3_G",
            "bit_range": "5:0",
            "attr": "rw",
            "reset": "CALC",
            "description": " green"
          }
        ],
        "description": "Rank gradient factor for set 3\nNote: all values are unsigned integer \n\n \n"
      },
      {
        "type": "register",
        "name": "ISP_DPCC_RO_LIMITS",
        "offset": "0x2954",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "RO_LIM_3_RB",
            "bit_range": "11:10",
            "attr": "rw",
            "reset": "CALC",
            "description": "Rank order limit for set 3 red/blue"
          },
          {
            "name": "RO_LIM_3_G",
            "bit_range": "9:8",
            "attr": "rw",
            "reset": "CALC",
            "description": "Rank order limit for set 3 green"
          },
          {
            "name": "RO_LIM_2_RB",
            "bit_range": "7:6",
            "attr": "rw",
            "reset": "CALC",
            "description": "Rank order limit for set 2 red/blue"
          },
          {
            "name": "RO_LIM_2_G",
            "bit_range": "5:4",
            "attr": "rw",
            "reset": "CALC",
            "description": "Rank order limit for set 2 green"
          },
          {
            "name": "RO_LIM_1_RB",
            "bit_range": "3:2",
            "attr": "rw",
            "reset": "CALC",
            "description": "Rank order limit for set 1 red/blue"
          },
          {
            "name": "RO_LIM_1_G",
            "bit_range": "1:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Rank order limit for set 1 green"
          }
        ],
        "description": "Rank Order Limits\nNote: all values are unsigned integer \n\n \n"
      },
      {
        "type": "register",
        "name": "ISP_DPCC_RND_OFFS",
        "offset": "0x2958",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "RND_OFFS_3_RB",
            "bit_range": "11:10",
            "attr": "rw",
            "reset": "CALC",
            "description": "Rank Offset to Neighbor for set 3 red/blue"
          },
          {
            "name": "RND_OFFS_3_G",
            "bit_range": "9:8",
            "attr": "rw",
            "reset": "CALC",
            "description": "Rank Offset to Neighbor for set 3 green\n"
          },
          {
            "name": "RND_OFFS_2_RB",
            "bit_range": "7:6",
            "attr": "rw",
            "reset": "CALC",
            "description": "Rank Offset to Neighbor for set 2 red/blue"
          },
          {
            "name": "RND_OFFS_2_G",
            "bit_range": "5:4",
            "attr": "rw",
            "reset": "CALC",
            "description": "Rank Offset to Neighbor for set 2 green"
          },
          {
            "name": "RND_OFFS_1_RB",
            "bit_range": "3:2",
            "attr": "rw",
            "reset": "CALC",
            "description": "Rank Offset to Neighbor for set 1 red/blue"
          },
          {
            "name": "RND_OFFS_1_G",
            "bit_range": "1:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Rank Offset to Neighbor for set 1 green"
          }
        ],
        "description": "Differential Rank Offsets for Rank Neighbor Difference\nNote: all values are unsigned integer \n\n \n"
      },
      {
        "type": "register",
        "name": "ISP_DPCC_BPT_CTRL",
        "offset": "0x295c",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "BPT_RB_3x3",
            "bit_range": "11",
            "attr": "rw",
            "reset": "CALC",
            "description": "1: if BPT active red/blue 9 pixel (3x3) output median\n0: if BPT active red/blue 4 or 5 pixel output median\n*Default*"
          },
          {
            "name": "BPT_G_3x3",
            "bit_range": "10",
            "attr": "rw",
            "reset": "CALC",
            "description": "1: if BPT active green 9 pixel (3x3) output median\n0: if BPT active green 4 or 5 pixel output median\n*Default*"
          },
          {
            "name": "BPT_INCL_RB_CENTER",
            "bit_range": "9",
            "attr": "rw",
            "reset": "CALC",
            "description": "1: if BPT active include center pixel for red/blue\noutput median 2x2+1\n0: if BPT active do not include center pixel for red/blue\noutput median 2x2 *Default*"
          },
          {
            "name": "BPT_USE_FIX_SET",
            "bit_range": "7",
            "attr": "rw",
            "reset": "CALC",
            "description": "1: for BPT write use hard coded methods set\n0: for BPT write do not use hard coded methods set\n*Default*"
          },
          {
            "name": "BPT_USE_SET_3",
            "bit_range": "6",
            "attr": "rw",
            "reset": "CALC",
            "description": "1: for BPT write use methods set 3\n0: for BPT write do not use methods set 3 *Default*"
          },
          {
            "name": "BPT_USE_SET_2",
            "bit_range": "5",
            "attr": "rw",
            "reset": "CALC",
            "description": "1: for BPT write use methods set 2\n0: for BPT write do not use methods set 2 *Default*"
          },
          {
            "name": "BPT_USE_SET_1",
            "bit_range": "4",
            "attr": "rw",
            "reset": "CALC",
            "description": "1: for BPT write use methods set 1\n0: for BPT write do not use methods set 1 *Default*"
          },
          {
            "name": "bpt_cor_en",
            "bit_range": "1",
            "attr": "rw",
            "reset": "CALC",
            "description": "table based correction enable\n1: table based correction is enabled\n0: table based correction is disabled"
          },
          {
            "name": "bpt_det_en",
            "bit_range": "0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Bad pixel detection write enable\n1: bad pixel detection write to memory is enabled\n0: bad pixel detection write to memory is disabled"
          }
        ],
        "description": "bad pixel table settings\nNote: This register controls the behaviour of the table based bad pixel correction module. \nIt can be switched on and off independently of the DPCC detection and correction block. \nDifferent correction algorithms for the table based correction are available and are defined by \nthis register. The default setting after reset enables a correction algorithm with most accurate \ncorrelation to surrounding pixels. Detection for the table based correction can be configured \nindependently from the on-the-fly DPCC detection scheme. \n\n \n"
      },
      {
        "type": "register",
        "name": "ISP_DPCC_BPT_NUMBER",
        "offset": "0x2960",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "bp_number",
            "bit_range": "11:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Number of current Bad Pixel entries in bad pixel table\n(BPT)"
          }
        ],
        "description": "Number of entries for bad pixel table (table based correction)\nNote: bit width of bp_number depends on size of BP RAM which is defined during chip \n\nsynthesis \n \n"
      },
      {
        "type": "register",
        "name": "ISP_DPCC_BPT_ADDR",
        "offset": "0x2964",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "bp_table_addr",
            "bit_range": "10:0",
            "attr": "rwh",
            "reset": "CALC",
            "description": "Table RAM start address for read or write operations.\nThe address counter is incremented at each read or write\naccess to the data register (auto-increment\nmechanism)."
          }
        ],
        "description": "TABLE Start Address for table-based correction algorithm\nNote: MKOE tbc: Orignial register mode was rwh which is no longer supported with new \n\nversion of SIG \n\n-> rwhh \n\n"
      },
      {
        "type": "register",
        "name": "ISP_DPCC_BPT_DATA",
        "offset": "0x2968",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "bpt_v_addr",
            "bit_range": "27:16",
            "attr": "rwh",
            "reset": "CALC",
            "description": "Bad Pixel vertical address (pixel position)"
          },
          {
            "name": "bpt_h_addr",
            "bit_range": "12:0",
            "attr": "rwh",
            "reset": "CALC",
            "description": "Bad Pixel horizontal address (pixel position)"
          }
        ],
        "description": "TABLE DATA register for read and write access of table RAM\nNote: MKOE tbc: Orignial register mode was rwh which is no longer supported with new \n\nversion of SIG \n\n-> rwhh \n\nThe programmed table value is immediately written into the RAM. The RAM address is \n\ngenerated per auto-increment. The parameter RAMs for Lens Shade Correction and Bad \n\nPixel Correction can only be programmed, if the RGB Bayer path is switched on via ISP_CTRL \n"
      },
      {
        "type": "register",
        "name": "ISP_WDR_CTRL",
        "offset": "0x2a00",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "WDR_RGB_FACTOR",
            "bit_range": "11:8",
            "attr": "rw",
            "reset": "CALC",
            "description": "rgb_factor defines how much influence the\nRGBmax approach has in comparison to Y. The\nillumination reference Iref is calculated according to the\nfollowing formula:\nIref = (WDR_RGB_FACTOR * RGBYmax_tr + (8 - WDR_RGB_FACTOR) * Y) / 8\nSo, rgb_factor = 0 means that the standard\napproach is used. Use of this factor requires that Iref\nhas been selected, see WDR_USE_IREF.\nValue range of rgb_factor: 0...8"
          },
          {
            "name": "WDR_USE_RGB7_8",
            "bit_range": "5",
            "attr": "rw",
            "reset": "CALC",
            "description": "1: decrease RGBmax by 7/8 (for noise reduction)\n0: do not modify RGBmax *Default*\nUse of this bit requires that Iref has been selected,\nsee WDR_USE_IREF.\n"
          },
          {
            "name": "WDR_USE_Y9_8",
            "bit_range": "4",
            "attr": "rw",
            "reset": "CALC",
            "description": "1: use R G B and Y*9/8 for maximum value\ncalculation (for noise reduction)\n0: only use R G B for maximum value calculation\n(RGBYmax approach) *Default*\nUse of this bit requires that Iref has been selected,\nsee WDR_USE_IREF."
          },
          {
            "name": "WDR_USE_IREF",
            "bit_range": "3",
            "attr": "rw",
            "reset": "CALC",
            "description": "1: use Iref (Illumination reference) instead of Y for\nToneMapping and Gain calculation\n0: use Y for ToneMapping and Gain calculation\n*Default* Iref is calculated according to the following\nformula:\nIref = (WDR_RGB_FACTOR * RGBmax_tr + (8 - WDR_RGB_FACTOR) * Y) / 8"
          },
          {
            "name": "WDR_ENABLE",
            "bit_range": "0",
            "attr": "rw",
            "reset": "CALC",
            "description": "1: enable WDR\n0: bypass WDR *Default*\n"
          }
        ],
        "description": "Control Bits for Wide Dynamic Range Unit"
      },
      {
        "type": "register",
        "name": "ISP_WDR_TONECURVE_1",
        "offset": "0x2a04",
        "size": "32",
        "reset": "0x44444444",
        "bit_ranges": [
          {
            "name": "WDR_dY8",
            "bit_range": "30:28",
            "attr": "rw",
            "reset": "CALC",
            "description": "Tone curve sample point definition dY8 on the\nhorizontal axis (input)"
          },
          {
            "name": "WDR_dY7",
            "bit_range": "26:24",
            "attr": "rw",
            "reset": "CALC",
            "description": "Tone curve sample point definition dY7 on the\nhorizontal axis (input)"
          },
          {
            "name": "WDR_dY6",
            "bit_range": "22:20",
            "attr": "rw",
            "reset": "CALC",
            "description": "Tone curve sample point definition dY6 on the\nhorizontal axis (input)\n"
          },
          {
            "name": "WDR_dY5",
            "bit_range": "18:16",
            "attr": "rw",
            "reset": "CALC",
            "description": "Tone curve sample point definition dY5 on the\nhorizontal axis (input)"
          },
          {
            "name": "WDR_dY4",
            "bit_range": "14:12",
            "attr": "rw",
            "reset": "CALC",
            "description": "Tone curve sample point definition dY4 on the\nhorizontal axis (input)"
          },
          {
            "name": "WDR_dY3",
            "bit_range": "10:8",
            "attr": "rw",
            "reset": "CALC",
            "description": "Tone curve sample point definition dY3 on the\nhorizontal axis (input)"
          },
          {
            "name": "WDR_dY2",
            "bit_range": "6:4",
            "attr": "rw",
            "reset": "CALC",
            "description": "Tone curve sample point definition dY2 on the\nhorizontal axis (input)"
          },
          {
            "name": "WDR_dY1",
            "bit_range": "2:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Tone curve sample point definition dY1 on the\nhorizontal axis (input)"
          }
        ],
        "description": "Tone Curve sample points dYn definition (part 1)\nNote: The interval widths dYn are to be defined in a 2^(value+3) notation, where \n\n\"value\" has to be written to the register. So the steps would be \n\ndYn=0 -> 8 (2^3), dYn=1 -> 16 (2^4), dYn=2 \n\n-> 32 (2^5),... dYn=6 -> 512 (2^9), dYn=7 -> \n\n1024 (2^10). \n"
      },
      {
        "type": "register",
        "name": "ISP_WDR_TONECURVE_2",
        "offset": "0x2a08",
        "size": "32",
        "reset": "0x44444444",
        "bit_ranges": [
          {
            "name": "WDR_dY16",
            "bit_range": "30:28",
            "attr": "rw",
            "reset": "CALC",
            "description": "Tone curve sample point definition dY16 on the\nhorizontal axis (input)"
          },
          {
            "name": "WDR_dY15",
            "bit_range": "26:24",
            "attr": "rw",
            "reset": "CALC",
            "description": "Tone curve sample point definition dY15 on the\nhorizontal axis (input)"
          },
          {
            "name": "WDR_dY14",
            "bit_range": "22:20",
            "attr": "rw",
            "reset": "CALC",
            "description": "Tone curve sample point definition dY14 on the\nhorizontal axis (input)"
          },
          {
            "name": "WDR_dY13",
            "bit_range": "18:16",
            "attr": "rw",
            "reset": "CALC",
            "description": "Tone curve sample point definition dY13 on the\nhorizontal axis (input)"
          },
          {
            "name": "WDR_dY12",
            "bit_range": "14:12",
            "attr": "rw",
            "reset": "CALC",
            "description": "Tone curve sample point definition dY12 on the\nhorizontal axis (input)"
          },
          {
            "name": "WDR_dY11",
            "bit_range": "10:8",
            "attr": "rw",
            "reset": "CALC",
            "description": "Tone curve sample point definition dY11 on the\nhorizontal axis (input)"
          },
          {
            "name": "WDR_dY10",
            "bit_range": "6:4",
            "attr": "rw",
            "reset": "CALC",
            "description": "Tone curve sample point definition dY10 on the\nhorizontal axis (input)"
          },
          {
            "name": "WDR_dY9",
            "bit_range": "2:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Tone curve sample point definition dY9 on the\nhorizontal axis (input)"
          }
        ],
        "description": "Tone Curve sample points dYn definition (part 2)\nNote: The interval widths dYn are to be defined in a 2^(value+3) notation, where \n\n\"value\" has to be written to the register. So the steps would be \n\ndYn=0 -> 8 (2^3), dYn=1 -> 16 (2^4), dYn=2 \n\n-> 32 (2^5),... dYn=6 -> 512 (2^9), dYn=7 -> \n\n1024 (2^10). \n"
      },
      {
        "type": "register",
        "name": "ISP_WDR_TONECURVE_3",
        "offset": "0x2a0c",
        "size": "32",
        "reset": "0x44444444",
        "bit_ranges": [
          {
            "name": "WDR_dY24",
            "bit_range": "30:28",
            "attr": "rw",
            "reset": "CALC",
            "description": "Tone curve sample point definition dY24 on the\nhorizontal axis (input)"
          },
          {
            "name": "WDR_dY23",
            "bit_range": "26:24",
            "attr": "rw",
            "reset": "CALC",
            "description": "Tone curve sample point definition dY23 on the\nhorizontal axis (input)\n"
          },
          {
            "name": "WDR_dY22",
            "bit_range": "22:20",
            "attr": "rw",
            "reset": "CALC",
            "description": "Tone curve sample point definition dY22 on the\nhorizontal axis (input)"
          },
          {
            "name": "WDR_dY21",
            "bit_range": "18:16",
            "attr": "rw",
            "reset": "CALC",
            "description": "Tone curve sample point definition dY21 on the\nhorizontal axis (input)"
          },
          {
            "name": "WDR_dY20",
            "bit_range": "14:12",
            "attr": "rw",
            "reset": "CALC",
            "description": "Tone curve sample point definition dY20 on the\nhorizontal axis (input)"
          },
          {
            "name": "WDR_dY19",
            "bit_range": "10:8",
            "attr": "rw",
            "reset": "CALC",
            "description": "Tone curve sample point definition dY19 on the\nhorizontal axis (input)"
          },
          {
            "name": "WDR_dY18",
            "bit_range": "6:4",
            "attr": "rw",
            "reset": "CALC",
            "description": "Tone curve sample point definition dY18 on the\nhorizontal axis (input)"
          },
          {
            "name": "WDR_dY17",
            "bit_range": "2:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Tone curve sample point definition dY17 on the\nhorizontal axis (input)"
          }
        ],
        "description": "Tone Curve sample points dYn definition (part 3)\nNote: The interval widths dYn are to be defined in a 2^(value+3) notation, where \n\n\"value\" has to be written to the register. So the steps would be \n\ndYn=0 -> 8 (2^3), dYn=1 -> 16 (2^4), dYn=2 \n\n-> 32 (2^5),... dYn=6 -> 512 (2^9), dYn=7 -> \n\n1024 (2^10). \n"
      },
      {
        "type": "register",
        "name": "ISP_WDR_TONECURVE_4",
        "offset": "0x2a10",
        "size": "32",
        "reset": "0x44444444",
        "bit_ranges": [
          {
            "name": "WDR_dY32",
            "bit_range": "30:28",
            "attr": "rw",
            "reset": "CALC",
            "description": "Tone curve sample point definition dY32 on the\nhorizontal axis (input)"
          },
          {
            "name": "WDR_dY31",
            "bit_range": "26:24",
            "attr": "rw",
            "reset": "CALC",
            "description": "Tone curve sample point definition dY31 on the\nhorizontal axis (input)"
          },
          {
            "name": "WDR_dY30",
            "bit_range": "22:20",
            "attr": "rw",
            "reset": "CALC",
            "description": "Tone curve sample point definition dY30 on the\nhorizontal axis (input)"
          },
          {
            "name": "WDR_dY29",
            "bit_range": "18:16",
            "attr": "rw",
            "reset": "CALC",
            "description": "Tone curve sample point definition dY29 on the\nhorizontal axis (input)"
          },
          {
            "name": "WDR_dY28",
            "bit_range": "14:12",
            "attr": "rw",
            "reset": "CALC",
            "description": "Tone curve sample point definition dY28 on the\nhorizontal axis (input)"
          },
          {
            "name": "WDR_dY27",
            "bit_range": "10:8",
            "attr": "rw",
            "reset": "CALC",
            "description": "Tone curve sample point definition dY27 on the\nhorizontal axis (input)"
          },
          {
            "name": "WDR_dY26",
            "bit_range": "6:4",
            "attr": "rw",
            "reset": "CALC",
            "description": "Tone curve sample point definition dY26 on the\nhorizontal axis (input)"
          },
          {
            "name": "WDR_dY25",
            "bit_range": "2:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Tone curve sample point definition dY25 on the\nhorizontal axis (input)"
          }
        ],
        "description": "Tone Curve sample points dYn definition (part 4)\nNote: The interval widths dYn are to be defined in a 2^(value+3) notation, where \"value\" \nhas to be written to the register. So the steps would be \n\ndYn=0 -> 8 (2^3), dYn=1 -> 16 (2^4), dYn=2 -> 32 (2^5),... dYn=6 -> 512 (2^9), \ndYn=7 -> 1024 (2^10). \n\n \n"
      },
      {
        "type": "register",
        "name": "ISP_WDR_TONECURVE_YM",
        "offset": "0x2a14",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "tonecurve_ym_n",
            "bit_range": "12:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Tone curve value definition y-axis (output) of WDR\nunit"
          }
        ],
        "description": "Tonemapping curve coefficient Ym_ n (n=0..32)\nNote: The reset values define a linear curve which has the same effect as bypass. Reset \nvalues are: Ym_00 = 0x0000, Ym_01 = 0x0080, Ym_02 = 0x0100, Ym_03 = 0x0180, Ym_04 \n= 0x0200, \n\nYm_05 = 0x0280, Ym_06 = 0x0300, Ym_07 = 0x0380, Ym_08 = 0x0400, Ym_09 = \n0x0480, Ym_10 = 0x0500, Ym_11 = 0x0580, Ym_12 = 0x0600, Ym_13 = 0x0680, Ym_14 = \n0x0700, Ym_15 = 0x0780, Ym_16 = 0x0800, Ym_17 = 0x0880, Ym_18 = 0x0900, Ym_19 = \n0x0980, Ym_20 = 0x0A00, Ym_21 = 0x0A80, Ym_22 = 0x0B00, Ym_23 = 0x0B80, Ym_24 = \n0x0C00, Ym_25 = 0x0C80, Ym_26 = 0x0D00, Ym_27 = 0x0D80, Ym_28 = 0x0E00, Ym_29 = \n0x0E80, Ym_30 = 0x0F00, Ym_31 = 0x0F80, Ym_32 = 0x1000 \n\n \n\nData format: 13 bit unsigned \n \nRESTRICTION: each Y must be in the +2047/-2048 range compared to its predecessor (so \n\nthat the difference between successive Y values is 12-bit signed !) \n\n \n"
      },
      {
        "type": "register",
        "name": "ISP_WDR_OFFSET",
        "offset": "0x2a98",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "LUM_OFFSET",
            "bit_range": "27:16",
            "attr": "rw",
            "reset": "CALC",
            "description": "Luminance Offset value (a) for RGB operation mode\nunsigned 12 bit value"
          },
          {
            "name": "RGB_OFFSET",
            "bit_range": "11:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "RGB Offset value (b) for RGB operation mode\nunsigned 12 bit value\n"
          }
        ],
        "description": "Offset values for RGB path"
      },
      {
        "type": "register",
        "name": "ISP_WDR_DELTAMIN",
        "offset": "0x2a9c",
        "size": "32",
        "reset": "0x00100000",
        "bit_ranges": [
          {
            "name": "DMIN_STRENGTH",
            "bit_range": "20:16",
            "attr": "rw",
            "reset": "CALC",
            "description": "strength factor for DMIN\nunsigned 5 bit value, range 0x00...0x10\n"
          },
          {
            "name": "DMIN_THRESH",
            "bit_range": "11:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Lower threshold for\ndeltaMin value unsigned 12 bit\nvalue\n"
          }
        ],
        "description": "DeltaMin Threshold and Strength factor"
      },
      {
        "type": "register",
        "name": "ISP_WDR_TONECURVE_1_SHD",
        "offset": "0x2aa0",
        "size": "32",
        "reset": "0x44444444",
        "bit_ranges": [
          {
            "name": "WDR_dY8",
            "bit_range": "30:28",
            "attr": "r",
            "reset": "CALC",
            "description": "Tone curve sample point definition dY8 on the\nhorizontal axis (input)"
          },
          {
            "name": "WDR_dY7",
            "bit_range": "26:24",
            "attr": "r",
            "reset": "CALC",
            "description": "Tone curve sample point definition dY7 on the\nhorizontal axis (input)"
          },
          {
            "name": "WDR_dY6",
            "bit_range": "22:20",
            "attr": "r",
            "reset": "CALC",
            "description": "Tone curve sample point definition dY6 on the\nhorizontal axis (input)"
          },
          {
            "name": "WDR_dY5",
            "bit_range": "18:16",
            "attr": "r",
            "reset": "CALC",
            "description": "Tone curve sample point definition dY5 on the\nhorizontal axis (input)"
          },
          {
            "name": "WDR_dY4",
            "bit_range": "14:12",
            "attr": "r",
            "reset": "CALC",
            "description": "Tone curve sample point definition dY4 on the\nhorizontal axis (input)"
          },
          {
            "name": "WDR_dY3",
            "bit_range": "10:8",
            "attr": "r",
            "reset": "CALC",
            "description": "Tone curve sample point definition dY3 on the\nhorizontal axis (input)"
          },
          {
            "name": "WDR_dY2",
            "bit_range": "6:4",
            "attr": "r",
            "reset": "CALC",
            "description": "Tone curve sample point definition dY2 on the\nhorizontal axis (input)"
          },
          {
            "name": "WDR_dY1",
            "bit_range": "2:0",
            "attr": "r",
            "reset": "CALC",
            "description": "Tone curve sample point definition dY1 on the\nhorizontal axis (input)"
          }
        ],
        "description": "Tone Curve sample points dYn definition shadow register (part 1)\nNote: see register ISP_WDR_TONECURVE_1. \n\n \n"
      },
      {
        "type": "register",
        "name": "ISP_WDR_TONECURVE_2_SHD",
        "offset": "0x2aa4",
        "size": "32",
        "reset": "0x44444444",
        "bit_ranges": [
          {
            "name": "WDR_dY16",
            "bit_range": "30:28",
            "attr": "r",
            "reset": "CALC",
            "description": "Tone curve sample point definition dY16 on the\nhorizontal axis (input)"
          },
          {
            "name": "WDR_dY15",
            "bit_range": "26:24",
            "attr": "r",
            "reset": "CALC",
            "description": "Tone curve sample point definition dY15 on the\nhorizontal axis (input)"
          },
          {
            "name": "WDR_dY14",
            "bit_range": "22:20",
            "attr": "r",
            "reset": "CALC",
            "description": "Tone curve sample point definition dY14 on the\nhorizontal axis (input)"
          },
          {
            "name": "WDR_dY13",
            "bit_range": "18:16",
            "attr": "r",
            "reset": "CALC",
            "description": "Tone curve sample point definition dY13 on the\nhorizontal axis (input)"
          },
          {
            "name": "WDR_dY12",
            "bit_range": "14:12",
            "attr": "r",
            "reset": "CALC",
            "description": "Tone curve sample point definition dY12 on the\nhorizontal axis (input)"
          },
          {
            "name": "WDR_dY11",
            "bit_range": "10:8",
            "attr": "r",
            "reset": "CALC",
            "description": "Tone curve sample point definition dY11 on the\nhorizontal axis (input)"
          },
          {
            "name": "WDR_dY10",
            "bit_range": "6:4",
            "attr": "r",
            "reset": "CALC",
            "description": "Tone curve sample point definition dY10 on the\nhorizontal axis (input)"
          },
          {
            "name": "WDR_dY9",
            "bit_range": "2:0",
            "attr": "r",
            "reset": "CALC",
            "description": "Tone curve sample point definition dY9 on the\nhorizontal axis (input)"
          }
        ],
        "description": "Tone Curve sample points dYn definition shadow register (part 2)\nNote: see register ISP_WDR_TONECURVE_2. \n\n \n"
      },
      {
        "type": "register",
        "name": "ISP_WDR_TONECURVE_3_SHD",
        "offset": "0x2aa8",
        "size": "32",
        "reset": "0x44444444",
        "bit_ranges": [
          {
            "name": "WDR_dY24",
            "bit_range": "30:28",
            "attr": "r",
            "reset": "CALC",
            "description": "Tone curve sample point definition dY24 on the\nhorizontal axis (input)"
          },
          {
            "name": "WDR_dY23",
            "bit_range": "26:24",
            "attr": "r",
            "reset": "CALC",
            "description": "Tone curve sample point definition dY23 on the\nhorizontal axis (input)"
          },
          {
            "name": "WDR_dY22",
            "bit_range": "22:20",
            "attr": "r",
            "reset": "CALC",
            "description": "Tone curve sample point definition dY22 on the\nhorizontal axis (input)"
          },
          {
            "name": "WDR_dY21",
            "bit_range": "18:16",
            "attr": "r",
            "reset": "CALC",
            "description": "Tone curve sample point definition dY21 on the\nhorizontal axis (input)"
          },
          {
            "name": "WDR_dY20",
            "bit_range": "14:12",
            "attr": "r",
            "reset": "CALC",
            "description": "Tone curve sample point definition dY20 on the\nhorizontal axis (input)"
          },
          {
            "name": "WDR_dY19",
            "bit_range": "10:8",
            "attr": "r",
            "reset": "CALC",
            "description": "Tone curve sample point definition dY19 on the\nhorizontal axis (input)"
          },
          {
            "name": "WDR_dY18",
            "bit_range": "6:4",
            "attr": "r",
            "reset": "CALC",
            "description": "Tone curve sample point definition dY18 on the\nhorizontal axis (input)"
          },
          {
            "name": "WDR_dY17",
            "bit_range": "2:0",
            "attr": "r",
            "reset": "CALC",
            "description": "Tone curve sample point definition dY17 on the\nhorizontal axis (input)"
          }
        ],
        "description": "Tone Curve sample points dYn definition shadow register (part 3)\nNote: see register ISP_WDR_TONECURVE_3. \n\n \n"
      },
      {
        "type": "register",
        "name": "ISP_WDR_TONECURVE_4_SHD",
        "offset": "0x2aac",
        "size": "32",
        "reset": "0x44444444",
        "bit_ranges": [
          {
            "name": "WDR_dY32",
            "bit_range": "30:28",
            "attr": "r",
            "reset": "CALC",
            "description": "Tone curve sample point definition dY32 on the\nhorizontal axis (input)"
          },
          {
            "name": "WDR_dY31",
            "bit_range": "26:24",
            "attr": "r",
            "reset": "CALC",
            "description": "Tone curve sample point definition dY31 on the\nhorizontal axis (input)"
          },
          {
            "name": "WDR_dY30",
            "bit_range": "22:20",
            "attr": "r",
            "reset": "CALC",
            "description": "Tone curve sample point definition dY30 on the\nhorizontal axis (input)"
          },
          {
            "name": "WDR_dY29",
            "bit_range": "18:16",
            "attr": "r",
            "reset": "CALC",
            "description": "Tone curve sample point definition dY29 on the\nhorizontal axis (input)"
          },
          {
            "name": "WDR_dY28",
            "bit_range": "14:12",
            "attr": "r",
            "reset": "CALC",
            "description": "Tone curve sample point definition dY28 on the\nhorizontal axis (input)"
          },
          {
            "name": "WDR_dY27",
            "bit_range": "10:8",
            "attr": "r",
            "reset": "CALC",
            "description": "Tone curve sample point definition dY27 on the\nhorizontal axis (input)"
          },
          {
            "name": "WDR_dY26",
            "bit_range": "6:4",
            "attr": "r",
            "reset": "CALC",
            "description": "Tone curve sample point definition dY26 on the\nhorizontal axis (input)"
          },
          {
            "name": "WDR_dY25",
            "bit_range": "2:0",
            "attr": "r",
            "reset": "CALC",
            "description": "Tone curve sample point definition dY25 on the\nhorizontal axis (input)"
          }
        ],
        "description": "Tone Curve sample points dYn definition shadow register(part 4)\nNote: see register ISP_WDR_TONECURVE_4. \n\n \n"
      },
      {
        "type": "register",
        "name": "ISP_WDR_TONECURVE_YM_SHD",
        "offset": "0x2ab0",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "tonecurve_ym_n_shd",
            "bit_range": "12:0",
            "attr": "r",
            "reset": "CALC",
            "description": "Tone curve value definition y-axis (output) of\nWDR unit shadow register."
          }
        ],
        "description": "Tonemapping curve coefficient shadow register n (n=0..32)\nNote: The reset values define a linear curve which has the same effect as bypass. Reset \nvalues are: Ym_00 = 0x0000, Ym_01 = 0x0080, Ym_02 = 0x0100, Ym_03 = 0x0180, Ym_04 \n= 0x0200, \n\nYm_05 = 0x0280, Ym_06 = 0x0300, Ym_07 = 0x0380, Ym_08 = 0x0400, Ym_09 = \n0x0480, Ym_10 = 0x0500, Ym_11 = 0x0580, Ym_12 = 0x0600, Ym_13 = 0x0680, Ym_14 = \n0x0700, Ym_15 = 0x0780, Ym_16 = 0x0800, Ym_17 = 0x0880, Ym_18 = 0x0900, Ym_19 = \n0x0980, Ym_20 = 0x0A00, Ym_21 = 0x0A80, Ym_22 = 0x0B00, Ym_23 = 0x0B80, Ym_24 = \n0x0C00, Ym_25 = 0x0C80, Ym_26 = 0x0D00, Ym_27 = 0x0D80, Ym_28 = 0x0E00, Ym_29 = \n0x0E80, Ym_30 = 0x0F00, Ym_31 = 0x0F80, Ym_32 = 0x1000 \n\n \nData format: 13 bit unsigned \n \n\nRESTRICTION: each Y must be in the +2047/-2048 range compared to its predecessor (so \nthat the difference between successive Y values is 12-bit signed !) \n\n \n"
      },
      {
        "type": "register",
        "name": "ISP_VSM_MODE",
        "offset": "0x2f00",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "vsm_meas_irq_enable",
            "bit_range": "1",
            "attr": "rw",
            "reset": "CALC",
            "description": "1: VS measure done IRQ enable."
          },
          {
            "name": "vsm_meas_en",
            "bit_range": "0",
            "attr": "rw",
            "reset": "CALC",
            "description": "1: enable measure."
          }
        ],
        "description": "VS Measure Mode"
      },
      {
        "type": "register",
        "name": "ISP_VSM_H_OFFS",
        "offset": "0x2f04",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "vsm_h_offset",
            "bit_range": "12:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Horizontal offset in pixels.\n"
          }
        ],
        "description": "VSM window horizontal offset"
      },
      {
        "type": "register",
        "name": "ISP_VSM_V_OFFS",
        "offset": "0x2f08",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "vsm_v_offset",
            "bit_range": "12:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "Vertical offset in pixels.\n"
          }
        ],
        "description": "VSM window vertical offset"
      },
      {
        "type": "register",
        "name": "ISP_VSM_H_SIZE",
        "offset": "0x2f0c",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "vsm_h_size",
            "bit_range": "10:1",
            "attr": "rw",
            "reset": "CALC",
            "description": "Horizontal size in pixels."
          }
        ],
        "description": "Horizontal measure window size\nNote: only even values are allowed: vsm_h_size[0] not writable and read returns 0. \n\n \n\n"
      },
      {
        "type": "register",
        "name": "ISP_VSM_V_SIZE",
        "offset": "0x2f10",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "vsm_v_size",
            "bit_range": "10:1",
            "attr": "rw",
            "reset": "CALC",
            "description": "Vertical size."
          }
        ],
        "description": "Vertical measure window size\nNote: only even values are allowed: vsm_v_size[0] not writable and read returns 0. \n\n \n\n"
      },
      {
        "type": "register",
        "name": "ISP_VSM_H_SEGMENTS",
        "offset": "0x2f14",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "vsm_h_segments",
            "bit_range": "7:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "number of 16 point wide segments enclosed by the\nfirst iteration sample points in horizontal direction."
          }
        ],
        "description": "Iteration 1 horizontal segments\nNote: number of 1st iteration sample points = vsm_h_segments + 1 \n\n \n\n"
      },
      {
        "type": "register",
        "name": "ISP_VSM_V_SEGMENTS",
        "offset": "0x2f18",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "vsm_v_segments",
            "bit_range": "7:0",
            "attr": "rw",
            "reset": "CALC",
            "description": "number of 16 point wide segments enclosed by the\nfirst iteration sample points in vertical direction."
          }
        ],
        "description": "Iteration 1 vertical segments\nNote: number of 1st iteration sample points = vsm_v_segments + 1 \n\n \n\n"
      },
      {
        "type": "register",
        "name": "ISP_VSM_DELTA_H",
        "offset": "0x2f1c",
        "size": "32",
        "reset": "0x00000000",
        "bit_ranges": [
          {
            "name": "delta_h",
            "bit_range": "11:0",
            "attr": "r",
            "reset": "CALC",
            "description": " 12Bit two's\ncomplement. positive values indicate a displacement of\nthe image from right to left (camera turns right)\n\n"
          }
        ],
        "description": "estimated horizontal displacement"
      }
    ],
    "name": "ISP",
    "summary": [
      {
        "name": "VI_CCL",
        "offset": "0x0",
        "size": "32",
        "reset": "0x00000000",
        "description": "Clock control register"
      },
      {
        "name": "VI_ICCL",
        "offset": "0x10",
        "size": "32",
        "reset": "0x00001F7B",
        "description": "Internal clock control register"
      },
      {
        "name": "VI_IRCL",
        "offset": "0x14",
        "size": "32",
        "reset": "0x00000000",
        "description": "Internal reset control register"
      },
      {
        "name": "VI_DPCL",
        "offset": "0x18",
        "size": "32",
        "reset": "0x00000000",
        "description": "Data path control register"
      },
      {
        "name": "IMG_EFF_CTRL",
        "offset": "0x200",
        "size": "32",
        "reset": "0x00000000",
        "description": "Global control register\nNote: full_range for image effects is supported in ISP M5_v6, M5_v7 only \n\n"
      },
      {
        "name": "IMG_EFF_COLOR_SEL",
        "offset": "0x204",
        "size": "32",
        "reset": "0x00000000",
        "description": "Color selection register (for color selection effect)"
      },
      {
        "name": "IMG_EFF_MAT_1",
        "offset": "0x208",
        "size": "32",
        "reset": "0x00008089",
        "description": "3x3 matrix coefficients for emboss effect (1)\nNote: possible values for coefficients: 000 (1), 001 (2), 010 (4), 011 (8),100 (-1), 101 \n(-2), 110 (-4), 111 (-8) \n\n"
      },
      {
        "name": "IMG_EFF_MAT_2",
        "offset": "0x20c",
        "size": "32",
        "reset": "0x0000C0C0",
        "description": "3x3 matrix coefficients for emboss effect (2)"
      },
      {
        "name": "IMG_EFF_MAT_3",
        "offset": "0x210",
        "size": "32",
        "reset": "0x0000CCCD",
        "description": "3x3 matrix coefficients for emboss(3) effect / \n\nsketch/sharpen(1) effect\nNote: possible values for \n\ncoefficients: 000 (1), 001 (2), 010 \n\n(4), 011 (8), \n100 (-1), 101 (-2), 110 (-4), 111 (-8) \n\n \n"
      },
      {
        "name": "IMG_EFF_MAT_4",
        "offset": "0x214",
        "size": "32",
        "reset": "0x0000CCBC",
        "description": "3x3 matrix coefficients for sketch/sharpen effect (2)\nNote: possible values for coefficients: 000 (1), 001 (2), 010 (4), 011 (8), \n100 (-1), 101 (-2), 110 (-4), 111 (-8) \n\n \n"
      },
      {
        "name": "IMG_EFF_MAT_5",
        "offset": "0x218",
        "size": "32",
        "reset": "0x000000CC",
        "description": "3x3 matrix coefficients for sketch/sharpen effect (3)\nNote: possible values for coefficients: 000 (1), 001 (2), 010 (4), 011 (8), \n100 (-1), 101 (-2), 110 (-4), 111 (-8) \n\n"
      },
      {
        "name": "IMG_EFF_TINT",
        "offset": "0x21c",
        "size": "32",
        "reset": "0x0000880C",
        "description": "Chrominance increment values of a tint (used for sepia effect)\nNote: Calculation process of incr_cr and incr_cb: \ntint values given in RGB format: R G B \nconverted to Cb and Cr: Cb = -0.148*R - 0.291*G + 0.439*B + 128 Cr = 0.439*R - \n\n0.368*G - 0.071*B + 128 \ncalculating of the increments inc_Cb = (128 \u2013 Cb)/110 inc_Cr = (128 \u2013 Cr)/110 \nregister entry of the increments with an accuracy of 1/64 incr_cb = inc_Cb * 64 \nincr_cr = inc_Cr * 64 \n\n \n"
      },
      {
        "name": "IMG_EFF_CTRL_SHD",
        "offset": "0x220",
        "size": "32",
        "reset": "0x00000000",
        "description": "Shadow register for control register"
      },
      {
        "name": "IMG_EFF_SHARPEN",
        "offset": "0x224",
        "size": "32",
        "reset": "0x00000000",
        "description": "Factor and threshold for sharpen effect\nNote: For the sharpening effect the convolution mask must be set to the values [-1 -1 -1; \n-1 8 -1; -1 -1 -1]. \n\nThe convolution mask for sharpening is defined by the values sket_coef_xx in registers \nIMG_EFF_MAT_3 through IMG_EFF_MAT_5. Sketch effect and sharpening effect share the \nsame mask registers. \n\n \n"
      },
      {
        "name": "SUPER_IMP_CTRL",
        "offset": "0x300",
        "size": "32",
        "reset": "0x00000000",
        "description": "Global control register\nNote: in the bypass mode the data stream from Image \n\nEffect is transmitted to MUX module without overlaying \n\n \n"
      },
      {
        "name": "SUPER_IMP_OFFSET_X",
        "offset": "0x304",
        "size": "32",
        "reset": "0x00000000",
        "description": "Offset x register"
      },
      {
        "name": "SUPER_IMP_OFFSET_Y",
        "offset": "0x308",
        "size": "32",
        "reset": "0x00000000",
        "description": "Offset y register\nNote: the offset_y is positive and refers to the \n\nreference image \n\n"
      },
      {
        "name": "SUPER_IMP_COLOR_Y",
        "offset": "0x30c",
        "size": "32",
        "reset": "0x00000000",
        "description": "Y component of transparent key color"
      },
      {
        "name": "SUPER_IMP_COLOR_CB",
        "offset": "0x310",
        "size": "32",
        "reset": "0x00000000",
        "description": "Cb component of transparent key color"
      },
      {
        "name": "SUPER_IMP_COLOR_CR",
        "offset": "0x314",
        "size": "32",
        "reset": "0x00000000",
        "description": "Cr component of transparent key color"
      },
      {
        "name": "ISP_CTRL",
        "offset": "0x400",
        "size": "32",
        "reset": "0x00000000",
        "description": "global control register\nNote: partly write-only \n\n \n"
      },
      {
        "name": "ISP_ACQ_PROP",
        "offset": "0x404",
        "size": "32",
        "reset": "0x00000000",
        "description": "ISP acquisition properties"
      },
      {
        "name": "ISP_ACQ_H_OFFS",
        "offset": "0x408",
        "size": "32",
        "reset": "0x00000000",
        "description": "horizontal input offset"
      },
      {
        "name": "ISP_ACQ_V_OFFS",
        "offset": "0x40c",
        "size": "32",
        "reset": "0x00000000",
        "description": "vertical input offset"
      },
      {
        "name": "ISP_ACQ_H_SIZE",
        "offset": "0x410",
        "size": "32",
        "reset": "0x00001000",
        "description": "horizontal input size"
      },
      {
        "name": "ISP_ACQ_V_SIZE",
        "offset": "0x414",
        "size": "32",
        "reset": "0x00000C00",
        "description": "vertical input size"
      },
      {
        "name": "ISP_ACQ_NR_FRAMES",
        "offset": "0x418",
        "size": "32",
        "reset": "0x00000000",
        "description": "Number of frames to be captured"
      },
      {
        "name": "ISP_GAMMA_DX_LO",
        "offset": "0x41c",
        "size": "32",
        "reset": "0x44444444",
        "description": "De-Gamma Curve definition lower x increments (sampling points)"
      },
      {
        "name": "ISP_GAMMA_DX_HI",
        "offset": "0x420",
        "size": "32",
        "reset": "0x44444444",
        "description": "De-Gamma Curve definition higher x increments (sampling points)"
      },
      {
        "name": "ISP_GAMMA_R_Y",
        "offset": "0x424",
        "size": "32",
        "reset": "0x0",
        "description": "De-Gamma Curve definition y red n (n=0..16)\nNote: The reset values define a linear curve which has the same effect as bypass. \n\nReset values are: Y_00 = 0x0000, Y_01 = 0x0100, Y_02 = 0x0200, Y_03 = 0x0300, Y_04 \n\n= 0x0400,Y_05 = 0x0500, Y_06 = 0x0600, Y_07 = 0x0700, Y_08 = 0x0800, Y_09 = \n\n0x0900, Y_10 = 0x0A00, Y_11 = 0x0B00, Y_12 = 0x0C00, Y_13 = 0x0D00, Y_14 = \n\n0x0E00, Y_15 = 0x0F00, Y_16 = 0x0FFF \n\n \n"
      },
      {
        "name": "ISP_GAMMA_G_Y",
        "offset": "0x468",
        "size": "32",
        "reset": "0x0",
        "description": "De-Gamma Curve definition y green n (n=0..16)\nNote: The reset values define a linear curve which has the same effect as bypass. \n\nReset values are: Y_00 = 0x0000, Y_01 = 0x0100, Y_02 = 0x0200, Y_03 = 0x0300, Y_04 \n\n= 0x0400,Y_05 = 0x0500, Y_06 = 0x0600, Y_07 = 0x0700, Y_08 = 0x0800, Y_09 = \n\n0x0900, Y_10 = 0x0A00, Y_11 = 0x0B00, Y_12 = 0x0C00, Y_13 = 0x0D00, Y_14 = \n\n0x0E00, Y_15 = 0x0F00, Y_16 = 0x0FFF \n\n \n"
      },
      {
        "name": "ISP_GAMMA_B_Y",
        "offset": "0x4ac",
        "size": "32",
        "reset": "0x0",
        "description": "De-Gamma Curve definition y blue n (n=0..16)\nNote: The reset values define a linear curve which has the same effect as bypass. \n\nReset values are: Y_00 = 0x0000, Y_01 = 0x0100, Y_02 = 0x0200, Y_03 = 0x0300, Y_04 \n\n= 0x0400, \n\nY_05 = 0x0500, Y_06 = 0x0600, Y_07 = 0x0700, Y_08 = 0x0800, \n\nY_09 = 0x0900, Y_10 = 0x0A00, Y_11 = 0x0B00, Y_12 = 0x0C00, Y_13 = \n\n0x0D00, Y_14 = 0x0E00, Y_15 = 0x0F00, Y_16 = 0x0FFF \n"
      },
      {
        "name": "ISP_AWB_PROP",
        "offset": "0x510",
        "size": "32",
        "reset": "0x00000000",
        "description": "Auto white balance properties\nNote: The following conversion matrix is used for calculating the YCbCr values: \n\nY = 16 + 0.2500 R + 0.5000 G + 0.1094 B \nCb = 128 - 0.1406 R - 0.2969 G + 0.4375 B \nCr = 128 + 0.4375 R - 0.3750 G - 0.0625 B \n\n"
      },
      {
        "name": "ISP_AWB_H_OFFS",
        "offset": "0x514",
        "size": "32",
        "reset": "0x00000000",
        "description": "Auto white balance horizontal offset of measure window"
      },
      {
        "name": "ISP_AWB_V_OFFS",
        "offset": "0x518",
        "size": "32",
        "reset": "0x00000000",
        "description": "Auto white balance vertical offset of measure window"
      },
      {
        "name": "ISP_AWB_H_SIZE",
        "offset": "0x51c",
        "size": "32",
        "reset": "0x00000000",
        "description": "Auto white balance horizontal window size"
      },
      {
        "name": "ISP_AWB_V_SIZE",
        "offset": "0x520",
        "size": "32",
        "reset": "0x00000000",
        "description": "Auto white balance vertical window size"
      },
      {
        "name": "ISP_AWB_FRAMES",
        "offset": "0x524",
        "size": "32",
        "reset": "0x00000000",
        "description": "Auto white balance mean value over multiple frames"
      },
      {
        "name": "ISP_AWB_REF",
        "offset": "0x528",
        "size": "32",
        "reset": "0x00008080",
        "description": "Auto white balance reference Cb/Cr values"
      },
      {
        "name": "ISP_AWB_THRESH",
        "offset": "0x52c",
        "size": "32",
        "reset": "0xE9C01010",
        "description": "Auto white balance threshold values"
      },
      {
        "name": "ISP_AWB_GAIN_G",
        "offset": "0x538",
        "size": "32",
        "reset": "0x01000100",
        "description": "Auto white balance gain green"
      },
      {
        "name": "ISP_AWB_GAIN_RB",
        "offset": "0x53c",
        "size": "32",
        "reset": "0x01000100",
        "description": "Auto white balance gain red and blue"
      },
      {
        "name": "ISP_AWB_WHITE_CNT",
        "offset": "0x540",
        "size": "32",
        "reset": "0x00000000",
        "description": "Auto white balance white pixel count"
      },
      {
        "name": "ISP_AWB_MEAN",
        "offset": "0x544",
        "size": "32",
        "reset": "0x00000000",
        "description": "Auto white balance measured mean value"
      },
      {
        "name": "ISP_CC_COEFF_0",
        "offset": "0x570",
        "size": "32",
        "reset": "0x0021",
        "description": "Color conversion coefficient 0\nNote: all color conversion coefficients are signed integer values with 7 bit fractional \n\npart, range -2 to 1.992 \n\n \n"
      },
      {
        "name": "ISP_CC_COEFF_1",
        "offset": "0x574",
        "size": "32",
        "reset": "0x0040",
        "description": "Color conversion coefficient 1"
      },
      {
        "name": "ISP_CC_COEFF_2",
        "offset": "0x578",
        "size": "32",
        "reset": "0x000D",
        "description": "Color conversion coefficient 2"
      },
      {
        "name": "ISP_CC_COEFF_3",
        "offset": "0x57c",
        "size": "32",
        "reset": "0x01ED",
        "description": "Color conversion coefficient 3"
      },
      {
        "name": "ISP_CC_COEFF_4",
        "offset": "0x580",
        "size": "32",
        "reset": "0x01DB",
        "description": "Color conversion coefficient 4"
      },
      {
        "name": "ISP_CC_COEFF_5",
        "offset": "0x584",
        "size": "32",
        "reset": "0x0038",
        "description": "Color conversion coefficient 5"
      },
      {
        "name": "ISP_CC_COEFF_6",
        "offset": "0x588",
        "size": "32",
        "reset": "0x0038",
        "description": "Color conversion coefficient 6"
      },
      {
        "name": "ISP_CC_COEFF_7",
        "offset": "0x58c",
        "size": "32",
        "reset": "0x001D1",
        "description": "Color conversion coefficient 7"
      },
      {
        "name": "ISP_CC_COEFF_8",
        "offset": "0x590",
        "size": "32",
        "reset": "0x01F7",
        "description": "Color conversion coefficient 8"
      },
      {
        "name": "ISP_OUT_H_OFFS",
        "offset": "0x594",
        "size": "32",
        "reset": "0x00000000",
        "description": "Horizontal offset of output window"
      },
      {
        "name": "ISP_OUT_V_OFFS",
        "offset": "0x598",
        "size": "32",
        "reset": "0x00000000",
        "description": "Vertical offset of output window"
      },
      {
        "name": "ISP_OUT_H_SIZE",
        "offset": "0x59c",
        "size": "32",
        "reset": "0x00001000",
        "description": "Output horizontal picture size"
      },
      {
        "name": "ISP_OUT_V_SIZE",
        "offset": "0x5a0",
        "size": "32",
        "reset": "0x00000C00",
        "description": "Output vertical picture size"
      },
      {
        "name": "ISP_DEMOSAIC",
        "offset": "0x5a4",
        "size": "32",
        "reset": "0x00000004",
        "description": "Demosaic parameters"
      },
      {
        "name": "ISP_FLAGS_SHD",
        "offset": "0x5a8",
        "size": "32",
        "reset": "0x00000000",
        "description": "Flags (current status) of certain signals and Shadow regs \n\nfor enable signals"
      },
      {
        "name": "ISP_OUT_H_OFFS_SHD",
        "offset": "0x5ac",
        "size": "32",
        "reset": "0x00000000",
        "description": "current horizontal offset of output window (shadow register)"
      },
      {
        "name": "ISP_OUT_V_OFFS_SHD",
        "offset": "0x5b0",
        "size": "32",
        "reset": "0x00000000",
        "description": "current vertical offset of output window (shadow register)"
      },
      {
        "name": "ISP_OUT_H_SIZE_SHD",
        "offset": "0x5b4",
        "size": "32",
        "reset": "0x00000000",
        "description": "current output horizontal picture size (shadow register)"
      },
      {
        "name": "ISP_OUT_V_SIZE_SHD",
        "offset": "0x5b8",
        "size": "32",
        "reset": "0x00000000",
        "description": "current output vertical picture size (shadow register)"
      },
      {
        "name": "ISP_IMSC",
        "offset": "0x5bc",
        "size": "32",
        "reset": "0x00000000",
        "description": "Interrupt mask"
      },
      {
        "name": "ISP_RIS",
        "offset": "0x5c0",
        "size": "32",
        "reset": "0x00000000",
        "description": "Raw interrupt status"
      },
      {
        "name": "ISP_MIS",
        "offset": "0x5c4",
        "size": "32",
        "reset": "0x00000000",
        "description": "Masked interrupt status"
      },
      {
        "name": "ISP_ICR",
        "offset": "0x5c8",
        "size": "32",
        "reset": "0x00000000",
        "description": "Interrupt clear register"
      },
      {
        "name": "ISP_ISR",
        "offset": "0x5cc",
        "size": "32",
        "reset": "0x00000000",
        "description": "Interrupt set register"
      },
      {
        "name": "ISP_CT_COEFF",
        "offset": "0x5d0",
        "size": "32",
        "reset": "0x0",
        "description": "cross-talk configuration register (color correction matrix) n (n=0..8)\nNote: Reset values generate a matrix which does not modify the pixel values. Reset \nvalues are: coeff_0 = 0x80, coeff_1 = 0x00, coeff_2 = 0x00, coeff_3 = 0x00, coeff_4 = 0x80, \n\ncoeff_5 = 0x00, coeff_6 = 0x00, coeff_7 = 0x00, coeff_8 = 0x80 \n\n \n"
      },
      {
        "name": "ISP_GAMMA_OUT_MODE",
        "offset": "0x5f4",
        "size": "32",
        "reset": "0x00000000",
        "description": "gamma segmentation mode register for output gamma"
      },
      {
        "name": "ISP_GAMMA_OUT_Y",
        "offset": "0x5f8",
        "size": "32",
        "reset": "0x0",
        "description": "Gamma Out Curve definition y_ n (n=0..16)\nNote: Reset values generate a standard gamma of 2.2. Reset values are: \ny_00 = 0x000, y_01 = 0x049, y_02 = 0x089, y_03 = 0x0B7, y_04 = 0x0DF, y_05 = \n\n0x11F, y_06 = 0x154, y_07 = 0x183, y_08 = 0x1AD, y_09 = 0x1F6, y_10 = 0x235, y_11 = \n0x26F, y_12 = 0x2D3, y_13 = 0x32A, y_14 = 0x378, y_15 = 0x3BF, y_16 = 0x3FF \n\n \n"
      },
      {
        "name": "ISP_ERR",
        "offset": "0x63c",
        "size": "32",
        "reset": "0x00000000",
        "description": "ISP error register\nNote: For debug purposes the ISP_ERR und ISP_ERR_CLR are implemented. For the case \nwhen a PIC_SIZE_ERR interrupt is signaled the SW is able to see in which submodule this error \nis generated. Writing to the ISP_ERR_CLR register clears this bit. \n\n \n"
      },
      {
        "name": "ISP_ERR_CLR",
        "offset": "0x640",
        "size": "32",
        "reset": "0x00000000",
        "description": "ISP error clear register"
      },
      {
        "name": "ISP_FRAME_COUNT",
        "offset": "0x644",
        "size": "32",
        "reset": "0x00000000",
        "description": "Frame counter\nNote: In the ISP_FRAME_COUNT register the number of processed frames are displayed. \nFor example: If a 8 is programmed into the ISP_ACQ_NR_FRAMES register, a read access to \nthe ISP_FRAME_COUNT register during processing of the first picture shows a 7. \n\nAfter the entire frames are processed the ISP_OFF interrupt is generated and the \nISP_FRAME_COUNT has the count zero. In case a \"0\" is programmed into the \nISP_ACQ_NR_FRAMES register (continues mode) the ISP_FRAME_COUNT register keeps the \nvalue \"0\". \n\n \n"
      },
      {
        "name": "ISP_CT_OFFSET_R",
        "offset": "0x648",
        "size": "32",
        "reset": "0x00000000",
        "description": "cross-talk offset red"
      },
      {
        "name": "ISP_CT_OFFSET_G",
        "offset": "0x64c",
        "size": "32",
        "reset": "0x00000000",
        "description": "cross-talk offset green"
      },
      {
        "name": "ISP_CT_OFFSET_B",
        "offset": "0x650",
        "size": "32",
        "reset": "0x00000000",
        "description": "cross-talk offset blue"
      },
      {
        "name": "ISP_FLASH_CMD",
        "offset": "0x660",
        "size": "32",
        "reset": "0x00000000",
        "description": "Flash command\nNote: This is the command register for flash light and prelight activation. If the \"rw\" bits \n(e.g. \"fl_cap_del\") are re-programmed during operation, the following scheme shall be \napplied: \n\nprelight is active (prelight_on = 1 has been set before): Every write access to this register \nshall use prelight_on = 1 (to prevent undesired switch off of the prelight). \n\nprelight is off: Every write access to this register shall use prelight_on = 0 (to prevent \nundesired switch on of the prelight). \n\n"
      },
      {
        "name": "ISP_FLASH_CONFIG",
        "offset": "0x664",
        "size": "32",
        "reset": "0x00000000",
        "description": "Flash config"
      },
      {
        "name": "ISP_FLASH_PREDIV",
        "offset": "0x668",
        "size": "32",
        "reset": "0x00000000",
        "description": "Flash Counter Pre-Divider"
      },
      {
        "name": "ISP_FLASH_DELAY",
        "offset": "0x66c",
        "size": "32",
        "reset": "0x00000000",
        "description": "Flash Delay\nNote: Example: \nfl_delay = (10s * 100MHz) / (1023 + 1) \u2013 1 = 976561 \n\n \n"
      },
      {
        "name": "ISP_FLASH_TIME",
        "offset": "0x670",
        "size": "32",
        "reset": "0x00000000",
        "description": "Flash time\nNote: Example: \nfl_time = (500ms * 100MHz) / (700 + 1) \u2013 1 = 71530 \n\n \n"
      },
      {
        "name": "ISP_FLASH_MAXP",
        "offset": "0x674",
        "size": "32",
        "reset": "0x00000000",
        "description": "Maximum value for flash or preflash\nNote: Example: \n\nfl_maxp = (10s * 100MHz) / (16384) \u2013 1 = 61034 \n\n"
      },
      {
        "name": "ISP_SH_CTRL",
        "offset": "0x680",
        "size": "32",
        "reset": "0x00000000",
        "description": "mechanical shutter control"
      },
      {
        "name": "ISP_SH_PREDIV",
        "offset": "0x684",
        "size": "32",
        "reset": "0x00000000",
        "description": "Mech. Shutter Counter Pre-Divider"
      },
      {
        "name": "ISP_SH_DELAY",
        "offset": "0x688",
        "size": "32",
        "reset": "0x00000000",
        "description": "Delay register\nNote: Example: \nsh_delay = (250us * 100MHz) / (50 + 1) \u2013 1 = 489 \n\n \n"
      },
      {
        "name": "ISP_SH_TIME",
        "offset": "0x68c",
        "size": "32",
        "reset": "0x00000000",
        "description": "Time register\nNote: Example: \n\nsh_time = (10s * 100MHz) / (1023 + 1) \u2013 1 = 976561 \n\n \n"
      },
      {
        "name": "CPROC_CTRL",
        "offset": "0x800",
        "size": "32",
        "reset": "0x00000000",
        "description": "Global control register"
      },
      {
        "name": "CPROC_CONTRAST",
        "offset": "0x804",
        "size": "32",
        "reset": "0x00000080",
        "description": "Color Processing contrast register"
      },
      {
        "name": "CPROC_BRIGHTNESS",
        "offset": "0x808",
        "size": "32",
        "reset": "0x00000000",
        "description": "Color Processing brightness register"
      },
      {
        "name": "CPROC_SATURATION",
        "offset": "0x80c",
        "size": "32",
        "reset": "0x00000080",
        "description": "Color Processing saturation register"
      },
      {
        "name": "CPROC_HUE",
        "offset": "0x810",
        "size": "32",
        "reset": "0x00000000",
        "description": "Color Processing hue register"
      },
      {
        "name": "MRSZ_CTRL",
        "offset": "0xc00",
        "size": "32",
        "reset": "0x00000000",
        "description": "global control register"
      },
      {
        "name": "MRSZ_SCALE_HY",
        "offset": "0xc04",
        "size": "32",
        "reset": "0x00000000",
        "description": "horizontal luminance scale factor register\nNote: The size of the output picture is calculated as follows: \n\n \nupscaling: (size_in - 1) / (size_out - 1)) = scale downscaling: (size_out - 1) / (size_in - 1)) \n\n= scale, \n \nwhere size_in/out is the width or height of the in/output picture. The value of the \n\nrespective MRSZ_SCALE register then has to be \nint(scale x 2^14) for upscaling and \nint(scale x 2^14)+1 for downscaling. \nFor downscaling this formula has no restriction. In upscaling processes the limit is factor 5. \n\nThe output is at max. 5 MegaPixel. \nIf a format conversion is performed, the scale factors have to be different for the \n\nluminance and the chrominance component, respectively. For example, for a format \nconversion from 4:2:2 to 4:2:0 the scale register value for the vertical \n\nchrominance component should be half of the vertical luminance scale register value. \n\n \n"
      },
      {
        "name": "MRSZ_SCALE_HCB",
        "offset": "0xc08",
        "size": "32",
        "reset": "0x00000000",
        "description": "horizontal Cb scale factor register"
      },
      {
        "name": "MRSZ_SCALE_HCR",
        "offset": "0xc0c",
        "size": "32",
        "reset": "0x00000000",
        "description": "horizontal Cr scale factor register"
      },
      {
        "name": "MRSZ_SCALE_VY",
        "offset": "0xc10",
        "size": "32",
        "reset": "0x00000000",
        "description": "vertical luminance scale factor register"
      },
      {
        "name": "MRSZ_SCALE_VC",
        "offset": "0xc14",
        "size": "32",
        "reset": "0x00000000",
        "description": "vertical chrominance scale factor register\nNote: The size of the output picture is calculated as follows: (size_out - 1) / (size_in - 1)) \n\n= scale, \nwhere size_in/out is the width or heigth of the in/output picture. The values of the \n\nMRSZ_SCALE registers then have to be int(scale x 2^14)+1 \n\n \n"
      },
      {
        "name": "MRSZ_PHASE_HY",
        "offset": "0xc18",
        "size": "32",
        "reset": "0x00000000",
        "description": "horizontal luminance phase register"
      },
      {
        "name": "MRSZ_PHASE_HC",
        "offset": "0xc1c",
        "size": "32",
        "reset": "0x00000000",
        "description": "horizontal chrominance phase register"
      },
      {
        "name": "MRSZ_PHASE_VY",
        "offset": "0xc20",
        "size": "32",
        "reset": "0x00000000",
        "description": "vertical luminance phase register"
      },
      {
        "name": "MRSZ_PHASE_VC",
        "offset": "0xc24",
        "size": "32",
        "reset": "0x00000000",
        "description": "vertical chrominance phase register"
      },
      {
        "name": "MRSZ_SCALE_LUT_ADDR",
        "offset": "0xc28",
        "size": "32",
        "reset": "0x00000000",
        "description": "Address pointer of up-scaling look up table"
      },
      {
        "name": "MRSZ_SCALE_LUT",
        "offset": "0xc2c",
        "size": "32",
        "reset": "0x00000000",
        "description": "Entry of up-scaling look up table"
      },
      {
        "name": "MRSZ_CTRL_SHD",
        "offset": "0xc30",
        "size": "32",
        "reset": "0x00000000",
        "description": "global control shadow register"
      },
      {
        "name": "MRSZ_SCALE_HY_SHD",
        "offset": "0xc34",
        "size": "32",
        "reset": "0x00000000",
        "description": "horizontal luminance scale factor shadow register"
      },
      {
        "name": "MRSZ_SCALE_HCB_SHD",
        "offset": "0xc38",
        "size": "32",
        "reset": "0x00000000",
        "description": "horizontal Cb scale factor shadow register"
      },
      {
        "name": "MRSZ_SCALE_HCR_SHD",
        "offset": "0xc3c",
        "size": "32",
        "reset": "0x00000000",
        "description": "horizontal Cr scale factor shadow register"
      },
      {
        "name": "MRSZ_SCALE_VY_SHD",
        "offset": "0xc40",
        "size": "32",
        "reset": "0x00000000",
        "description": "vertical luminance scale factor shadow register"
      },
      {
        "name": "MRSZ_SCALE_VC_SHD",
        "offset": "0xc44",
        "size": "32",
        "reset": "0x00000000",
        "description": "vertical chrominance scale factor shadow register"
      },
      {
        "name": "MRSZ_PHASE_HY_SHD",
        "offset": "0xc48",
        "size": "32",
        "reset": "0x00000000",
        "description": "horizontal luminance phase shadow register"
      },
      {
        "name": "MRSZ_PHASE_HC_SHD",
        "offset": "0xc4c",
        "size": "32",
        "reset": "0x00000000",
        "description": "horizontal chrominance phase shadow register"
      },
      {
        "name": "MRSZ_PHASE_VY_SHD",
        "offset": "0xc50",
        "size": "32",
        "reset": "0x00000000",
        "description": "vertical luminance phase shadow register"
      },
      {
        "name": "MRSZ_PHASE_VC_SHD",
        "offset": "0xc54",
        "size": "32",
        "reset": "0x00000000",
        "description": "vertical chrominance phase shadow register"
      },
      {
        "name": "SRSZ_CTRL",
        "offset": "0x1000",
        "size": "32",
        "reset": "0x00000000",
        "description": "global control register"
      },
      {
        "name": "SRSZ_SCALE_HY",
        "offset": "0x1004",
        "size": "32",
        "reset": "0x00000000",
        "description": "horizontal luminance scale factor register\nNote: The size of the output picture is calculated as follows: \nupscaling: (size_in - 1) / (size_out - 1)) = scale downscaling: (size_out - 1) / (size_in - 1)) \n\n= scale, \nwhere size_in/out is the width or height of the in/output picture. The value of the \n\nrespective SRSZ_SCALE register then has to be \nint(scale x 2^14) for upscaling and \nint(scale x 2^14)+1 for downscaling. \nFor downscaling this formula has no restriction. In upscaling processes the limit is factor 5. \n\nIf a format conversion is performed, the scale factors have to be different for the luminance \nand the chrominance component, respectively. For example, for a \n\nformat conversion from 4:2:2 to 4:2:0 the scale register value for the vertical \nchrominance component should be half of the vertical luminance scale register value. \n\n"
      },
      {
        "name": "SRSZ_SCALE_HCB",
        "offset": "0x1008",
        "size": "32",
        "reset": "0x00000000",
        "description": "horizontal chrominance scale factor register"
      },
      {
        "name": "SRSZ_SCALE_HCR",
        "offset": "0x100c",
        "size": "32",
        "reset": "0x00000000",
        "description": "horizontal chrominance scale factor register"
      },
      {
        "name": "SRSZ_SCALE_VY",
        "offset": "0x1010",
        "size": "32",
        "reset": "0x00000000",
        "description": "vertical luminance scale factor register"
      },
      {
        "name": "SRSZ_SCALE_VC",
        "offset": "0x1014",
        "size": "32",
        "reset": "0x00000000",
        "description": "vertical chrominance scale factor register"
      },
      {
        "name": "SRSZ_PHASE_HY",
        "offset": "0x1018",
        "size": "32",
        "reset": "0x00000000",
        "description": "horizontal luminance phase register"
      },
      {
        "name": "SRSZ_PHASE_HC",
        "offset": "0x101c",
        "size": "32",
        "reset": "0x00000000",
        "description": "horizontal chrominance phase register"
      },
      {
        "name": "SRSZ_PHASE_VY",
        "offset": "0x1020",
        "size": "32",
        "reset": "0x00000000",
        "description": "vertical luminance phase register"
      },
      {
        "name": "SRSZ_PHASE_VC",
        "offset": "0x1024",
        "size": "32",
        "reset": "0x00000000",
        "description": "vertical chrominance phase register"
      },
      {
        "name": "SRSZ_SCALE_LUT_ADDR",
        "offset": "0x1028",
        "size": "32",
        "reset": "0x00000000",
        "description": "Address pointer of up-scaling look up table"
      },
      {
        "name": "SRSZ_SCALE_LUT",
        "offset": "0x102c",
        "size": "32",
        "reset": "0x00000000",
        "description": "Entry of up-scaling look up table"
      },
      {
        "name": "SRSZ_CTRL_SHD",
        "offset": "0x1030",
        "size": "32",
        "reset": "0x00000000",
        "description": "global control shadow register"
      },
      {
        "name": "SRSZ_SCALE_HY_SHD",
        "offset": "0x1034",
        "size": "32",
        "reset": "0x00000000",
        "description": "horizontal luminance scale factor shadow register"
      },
      {
        "name": "SRSZ_SCALE_HCB_SHD",
        "offset": "0x1038",
        "size": "32",
        "reset": "0x00000000",
        "description": "horizontal Cb scale factor shadow register"
      },
      {
        "name": "SRSZ_SCALE_HCR_SHD",
        "offset": "0x103c",
        "size": "32",
        "reset": "0x00000000",
        "description": "horizontal Cr scale factor shadow register"
      },
      {
        "name": "SRSZ_SCALE_VY_SHD",
        "offset": "0x1040",
        "size": "32",
        "reset": "0x00000000",
        "description": "vertical luminance scale factor shadow register"
      },
      {
        "name": "SRSZ_SCALE_VC_SHD",
        "offset": "0x1044",
        "size": "32",
        "reset": "0x00000000",
        "description": "vertical chrominance scale factor shadow register"
      },
      {
        "name": "SRSZ_PHASE_HY_SHD",
        "offset": "0x1048",
        "size": "32",
        "reset": "0x00000000",
        "description": "horizontal luminance phase shadow register"
      },
      {
        "name": "SRSZ_PHASE_HC_SHD",
        "offset": "0x104c",
        "size": "32",
        "reset": "0x00000000",
        "description": "horizontal chrominance phase shadow register"
      },
      {
        "name": "SRSZ_PHASE_VY_SHD",
        "offset": "0x1050",
        "size": "32",
        "reset": "0x00000000",
        "description": "vertical luminance phase shadow register"
      },
      {
        "name": "SRSZ_PHASE_VC_SHD",
        "offset": "0x1054",
        "size": "32",
        "reset": "0x00000000",
        "description": "vertical chrominance phase shadow register"
      },
      {
        "name": "MI_CTRL",
        "offset": "0x1400",
        "size": "32",
        "reset": "0x00000000",
        "description": "Global control register"
      },
      {
        "name": "MI_INIT",
        "offset": "0x1404",
        "size": "32",
        "reset": "0x00000000",
        "description": "Control register for address init and skip function"
      },
      {
        "name": "MI_MP_Y_BASE_AD_INIT",
        "offset": "0x1408",
        "size": "32",
        "reset": "0x00000000",
        "description": "Base address for main picture Y component, JPEG or raw data\nNote: This register protects from non-aligned access. The bits 0 to 2 are hard wired to \n\"000\". As a consequence any byte address that is written to the register will automatically be \nre-mapped to the next lower 64 bit aligned address: write(MI_MP_Y_BASE_AD_INIT, \naddress_value) is equivalent to write(MI_Y_BASE_AD_INIT, address_value & 0xFFFFFFF8). \nAnyhow, in order to avoid confusion it is NOT recommended to use non-aligned address values \nfor access. It is also NOT recommended to actively consider the register slice for register \naccess in order to avoid unneccessary mask and shift operations. \n\nIn addition, if ISP provides AXI interfaces the programmed base address shall be \n\nburst aligned with respect to the burst length configured in MI_CTRL . \n\nSet control bit init_base_en before updating so that a forced or automatic update can take \n\neffect. \n"
      },
      {
        "name": "MI_MP_Y_SIZE_INIT",
        "offset": "0x140c",
        "size": "32",
        "reset": "0x00000000",
        "description": "Size of main picture Y component, JPEG or raw data\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \nregister description for details. \n\nSet control bit init_base_en before updating so that a forced or automatic update can take \neffect. \n\n \n\n"
      },
      {
        "name": "MI_MP_Y_OFFS_CNT_INIT",
        "offset": "0x1410",
        "size": "32",
        "reset": "0x00000000",
        "description": "Offset counter init value for main picture Y, JPEG or raw data\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \nregister description for details. \n\nSet control bit init_base_en before updating so that a forced or automatic update can \n\ntake effect. Check exceptional handling in skip modes. \n\n"
      },
      {
        "name": "MI_MP_Y_OFFS_CNT_START",
        "offset": "0x1414",
        "size": "32",
        "reset": "0x00000000",
        "description": "Offset counter start value for main picture Y, JPEG or raw data\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \nregister description for details. \n\n \n"
      },
      {
        "name": "MI_MP_Y_IRQ_OFFS_INIT",
        "offset": "0x1418",
        "size": "32",
        "reset": "0x00000000",
        "description": "Fill level interrupt offset value for main picture Y, JPEG or raw data\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \nregister description for details. \n\n \n"
      },
      {
        "name": "MI_MP_CB_BASE_AD_INIT",
        "offset": "0x141c",
        "size": "32",
        "reset": "0x00000000",
        "description": "Base address for main picture Cb component ring buffer\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \nregister description for details. \n\nRefer also to MI_MP_Y_BASE_AD_INIT with respect to the burst alignment restriction for \nAXI. \n\n \n"
      },
      {
        "name": "MI_MP_CB_SIZE_INIT",
        "offset": "0x1420",
        "size": "32",
        "reset": "0x00000000",
        "description": "Size of main picture Cb component ring buffer\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \nregister description for details. \n\n \n"
      },
      {
        "name": "MI_MP_CB_OFFS_CNT_INIT",
        "offset": "0x1424",
        "size": "32",
        "reset": "0x00000000",
        "description": "Offset counter init value for main picture Cb component ring buffer\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \nregister description for details. \n\n \n"
      },
      {
        "name": "MI_MP_CB_OFFS_CNT_START",
        "offset": "0x1428",
        "size": "32",
        "reset": "0x00000000",
        "description": "Offset counter start value for main picture Cb component ring buffer\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \nregister description for details. \n\n \n"
      },
      {
        "name": "MI_MP_CR_BASE_AD_INIT",
        "offset": "0x142c",
        "size": "32",
        "reset": "0x00000000",
        "description": "Base address for main picture Cr component ring buffer\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \nregister description for details. \n\nRefer also to MI_MP_Y_BASE_AD_INIT with respect to the burst alignment restriction for \nAXI. \n\n \n"
      },
      {
        "name": "MI_MP_CR_SIZE_INIT",
        "offset": "0x1430",
        "size": "32",
        "reset": "0x00000000",
        "description": "Size of main picture Cr component ring buffer\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \nregister description for details. \n\n \n"
      },
      {
        "name": "MI_MP_CR_OFFS_CNT_INIT",
        "offset": "0x1434",
        "size": "32",
        "reset": "0x00000000",
        "description": "Offset counter init value for main picture Cr component ring buffer\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \nregister description for details. \n\n \n"
      },
      {
        "name": "MI_MP_CR_OFFS_CNT_START",
        "offset": "0x1438",
        "size": "32",
        "reset": "0x00000000",
        "description": "Offset counter start value for main picture Cr component ring buffer\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \nregister description for details. \n\n \n"
      },
      {
        "name": "MI_SP_Y_BASE_AD_INIT",
        "offset": "0x143c",
        "size": "32",
        "reset": "0x00000000",
        "description": "Base address for self picture Y component ring buffer\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \nregister description for details. \n\nRefer also to MI_MP_Y_BASE_AD_INIT with respect to the burst alignment restriction for \nAXI. \n\n \n"
      },
      {
        "name": "MI_SP_Y_SIZE_INIT",
        "offset": "0x1440",
        "size": "32",
        "reset": "0x00000000",
        "description": "Size of self picture Y component ring buffer\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \nregister description for details. \n\n \n"
      },
      {
        "name": "MI_SP_Y_OFFS_CNT_INIT",
        "offset": "0x1444",
        "size": "32",
        "reset": "0x00000000",
        "description": "Offset counter init value for self picture Y component ring buffer\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \nregister description for details. \n\n \n"
      },
      {
        "name": "MI_SP_Y_OFFS_CNT_START",
        "offset": "0x1448",
        "size": "32",
        "reset": "0x00000000",
        "description": "Offset counter start value for self picture Y component ring buffer\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \nregister description for details. \n\n \n"
      },
      {
        "name": "MI_SP_Y_LLENGTH",
        "offset": "0x144c",
        "size": "32",
        "reset": "0x00000000",
        "description": "Line length of self picture Y component\nNote: Programmed value becomes effective \nimmediately. So write to the register only if no picture data \nis sent to the self path. \n\n \n\n"
      },
      {
        "name": "MI_SP_CB_BASE_AD_INIT",
        "offset": "0x1450",
        "size": "32",
        "reset": "0x00000000",
        "description": "Base address for self picture Cb component ring buffer\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \nregister description for details. \n\nRefer also to MI_MP_Y_BASE_AD_INIT with respect to the burst alignment restriction for \nAXI. \n\n \n"
      },
      {
        "name": "MI_SP_CB_SIZE_INIT",
        "offset": "0x1454",
        "size": "32",
        "reset": "0x00000000",
        "description": "Size of self picture Cb component ring buffer\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \nregister description for details. \n\n \n"
      },
      {
        "name": "MI_SP_CB_OFFS_CNT_INIT",
        "offset": "0x1458",
        "size": "32",
        "reset": "0x00000000",
        "description": "Offset counter init value for self picture Cb component ring buffer\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \nregister description for details. \n\n \n \n"
      },
      {
        "name": "MI_SP_CB_OFFS_CNT_START",
        "offset": "0x145c",
        "size": "32",
        "reset": "0x00000000",
        "description": "Offset counter start value for self picture Cb component ring buffer\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \nregister description for details. \n\n \n\n"
      },
      {
        "name": "MI_SP_CR_BASE_AD_INIT",
        "offset": "0x1460",
        "size": "32",
        "reset": "0x00000000",
        "description": "Base address for self picture Cr component ring buffer\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \nregister description for details. \n\nRefer also to MI_MP_Y_BASE_AD_INIT with respect to the burst alignment restriction for \nAXI. \n\n \n"
      },
      {
        "name": "MI_SP_CR_SIZE_INIT",
        "offset": "0x1464",
        "size": "32",
        "reset": "0x00000000",
        "description": "Size of self picture Cr component ring buffer\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \nregister description for details. \n\n \n"
      },
      {
        "name": "MI_SP_CR_OFFS_CNT_INIT",
        "offset": "0x1468",
        "size": "32",
        "reset": "0x00000000",
        "description": "Offset counter init value for self picture Cr component ring buffer\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \n\nregister description for details. \n\n \n"
      },
      {
        "name": "MI_SP_CR_OFFS_CNT_START",
        "offset": "0x146c",
        "size": "32",
        "reset": "0x00000000",
        "description": "Offset counter start value for self picture Cr component ring buffer\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \n\nregister description for details. \n\n \n \n\n \n"
      },
      {
        "name": "MI_BYTE_CNT",
        "offset": "0x1470",
        "size": "32",
        "reset": "0x00000000",
        "description": "Counter value of JPEG or RAW data bytes"
      },
      {
        "name": "MI_CTRL_SHD",
        "offset": "0x1474",
        "size": "32",
        "reset": "0x00000000",
        "description": "global control internal shadow register"
      },
      {
        "name": "MI_MP_Y_BASE_AD_SHD",
        "offset": "0x1478",
        "size": "32",
        "reset": "0x00000000",
        "description": "Base address shadow register for main picture Y \n\ncomponent, JPEG or raw data ring buffer\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \n\nregister description for details. \n\n"
      },
      {
        "name": "MI_MP_Y_SIZE_SHD",
        "offset": "0x147c",
        "size": "32",
        "reset": "0x00000000",
        "description": "Size shadow register of main picture Y component, JPEG \n\nor raw data\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \n\nregister description for details. \n\n \n"
      },
      {
        "name": "MI_MP_Y_OFFS_CNT_SHD",
        "offset": "0x1480",
        "size": "32",
        "reset": "0x00000000",
        "description": "Current offset counter of main picture Y component, JPEG \n\nor raw data ring buffer\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \n\nregister description for details. \n\n \n"
      },
      {
        "name": "MI_MP_Y_IRQ_OFFS_SHD",
        "offset": "0x1484",
        "size": "32",
        "reset": "0x00000000",
        "description": "Shadow register of fill level interrupt offset value for main \n\npicture Y component, JPEG or raw data\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \n\nregister description for details. \n\n"
      },
      {
        "name": "MI_MP_CB_BASE_AD_SHD",
        "offset": "0x1488",
        "size": "32",
        "reset": "0x00000000",
        "description": "Base address shadow register for main picture Cb \n\ncomponent ring buffer\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \n\nregister description for details. \n\n \n"
      },
      {
        "name": "MI_MP_CB_SIZE_SHD",
        "offset": "0x148c",
        "size": "32",
        "reset": "0x00000000",
        "description": "Size shadow register of main picture Cb component ring buffer\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \n\nregister description for details. \n\n \n"
      },
      {
        "name": "MI_MP_CB_OFFS_CNT_SHD",
        "offset": "0x1490",
        "size": "32",
        "reset": "0x00000000",
        "description": "Current offset counter of main picture Cb component ring buffer\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \n\nregister description for details. \n\n"
      },
      {
        "name": "MI_MP_CR_BASE_AD_SHD",
        "offset": "0x1494",
        "size": "32",
        "reset": "0x00000000",
        "description": "Base address shadow register for main picture Cr \n\ncomponent ring buffer\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \n\nregister description for details. \n\n \n"
      },
      {
        "name": "MI_MP_CR_SIZE_SHD",
        "offset": "0x1498",
        "size": "32",
        "reset": "0x00000000",
        "description": "Size shadow register of main picture Cr component ring buffer\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \n\nregister description for details. \n\n \n"
      },
      {
        "name": "MI_MP_CR_OFFS_CNT_SHD",
        "offset": "0x149c",
        "size": "32",
        "reset": "0x00000000",
        "description": "Current offset counter of main picture Cr component ring buffer\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \n\nregister description for details. \n\n"
      },
      {
        "name": "MI_SP_Y_BASE_AD_SHD",
        "offset": "0x14a0",
        "size": "32",
        "reset": "0x00000000",
        "description": "Base address shadow register for self picture Y \n\ncomponent ring buffer\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \n\nregister description for details. \n\n \n"
      },
      {
        "name": "MI_SP_Y_SIZE_SHD",
        "offset": "0x14a4",
        "size": "32",
        "reset": "0x00000000",
        "description": "Size shadow register of self picture Y component ring buffer\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \n\nregister description for details. \n\n \n"
      },
      {
        "name": "MI_SP_Y_OFFS_CNT_SHD",
        "offset": "0x14a8",
        "size": "32",
        "reset": "0x00000000",
        "description": "Current offset counter of self picture Y component ring buffer\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \n\nregister description for details. \n\n"
      },
      {
        "name": "MI_SP_CB_BASE_AD_SHD",
        "offset": "0x14b0",
        "size": "32",
        "reset": "0x00000000",
        "description": "Base address shadow register for self picture Cb \n\ncomponent ring buffer\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \n\nregister description for details. \n\n \n"
      },
      {
        "name": "MI_SP_CB_SIZE_SHD",
        "offset": "0x14b4",
        "size": "32",
        "reset": "0x00000000",
        "description": "Size shadow register of self picture Cb component ring buffer\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \n\nregister description for details. \n\n \n"
      },
      {
        "name": "MI_SP_CB_OFFS_CNT_SHD",
        "offset": "0x14b8",
        "size": "32",
        "reset": "0x00000000",
        "description": "Current offset counter of self picture Cb component ring buffer\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \n\nregister description for details. \n\n"
      },
      {
        "name": "MI_SP_CR_BASE_AD_SHD",
        "offset": "0x14bc",
        "size": "32",
        "reset": "0x00000000",
        "description": "Base address shadow register for self picture Cr \n\ncomponent ring buffer\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \n\nregister description for details. \n\n \n"
      },
      {
        "name": "MI_SP_CR_SIZE_SHD",
        "offset": "0x14c0",
        "size": "32",
        "reset": "0x00000000",
        "description": "Size shadow register of self picture Cr component ring buffer\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \n\nregister description for details. \n\n \n"
      },
      {
        "name": "MI_SP_CR_OFFS_CNT_SHD",
        "offset": "0x14c4",
        "size": "32",
        "reset": "0x00000000",
        "description": "Current offset counter of self picture Cr component ring buffer\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \n\nregister description for details. \n\n"
      },
      {
        "name": "MI_DMA_Y_PIC_START_AD",
        "offset": "0x14c8",
        "size": "32",
        "reset": "0x00000000",
        "description": "Y component image start address\nNote: Must be multiple of 4 in interleaved mode. \n\n \n"
      },
      {
        "name": "MI_DMA_Y_PIC_WIDTH",
        "offset": "0x14cc",
        "size": "32",
        "reset": "0x00000000",
        "description": "Y component image width"
      },
      {
        "name": "MI_DMA_Y_LLENGTH",
        "offset": "0x14d0",
        "size": "32",
        "reset": "0x00000000",
        "description": "Y component original line length"
      },
      {
        "name": "MI_DMA_Y_PIC_SIZE",
        "offset": "0x14d4",
        "size": "32",
        "reset": "0x00000000",
        "description": "Y component image size"
      },
      {
        "name": "MI_DMA_CB_PIC_START_AD",
        "offset": "0x14d8",
        "size": "32",
        "reset": "0x00000000",
        "description": "Cb component image start address\nNote: Must be multiple of 2 in semi-planar mode. \n\n \n"
      },
      {
        "name": "MI_DMA_CR_PIC_START_AD",
        "offset": "0x14e8",
        "size": "32",
        "reset": "0x00000000",
        "description": "Cr component image start address"
      },
      {
        "name": "MI_IMSC",
        "offset": "0x14f8",
        "size": "32",
        "reset": "0x00000000",
        "description": "Interrupt Mask (\u201e1\u201f: interrupt active, \u201e0\u201f: interrupt masked)"
      },
      {
        "name": "MI_RIS",
        "offset": "0x14fc",
        "size": "32",
        "reset": "0x00000000",
        "description": "Raw Interrupt Status"
      },
      {
        "name": "MI_MIS",
        "offset": "0x1500",
        "size": "32",
        "reset": "0x00000000",
        "description": "Masked Interrupt Status"
      },
      {
        "name": "MI_ICR",
        "offset": "0x1504",
        "size": "32",
        "reset": "0x00000000",
        "description": "Interrupt Clear Register"
      },
      {
        "name": "MI_ISR",
        "offset": "0x1508",
        "size": "32",
        "reset": "0x00000000",
        "description": "Interrupt Set Register"
      },
      {
        "name": "MI_STATUS",
        "offset": "0x150c",
        "size": "32",
        "reset": "0x00000000",
        "description": "MI Status Register"
      },
      {
        "name": "MI_STATUS_CLR",
        "offset": "0x1510",
        "size": "32",
        "reset": "0x00000000",
        "description": "MI Status Clear Register"
      },
      {
        "name": "MI_SP_Y_PIC_WIDTH",
        "offset": "0x1514",
        "size": "32",
        "reset": "0x00000000",
        "description": "Y component image width\nNote: Programmed value becomes effective \nimmediately. So write to the register only if no picture \ndata is sent to the self path. \n\n \n"
      },
      {
        "name": "MI_SP_Y_PIC_HEIGHT",
        "offset": "0x1518",
        "size": "32",
        "reset": "0x00000000",
        "description": "Y component image height\nNote: Programmed value becomes effective \n"
      },
      {
        "name": "MI_SP_Y_PIC_SIZE",
        "offset": "0x151c",
        "size": "32",
        "reset": "0x00000000",
        "description": "Y component image size\nNote: Programmed value becomes effective \n\nimmediately. So write to the register only if no picture \n\ndata is sent to the self path. \n"
      },
      {
        "name": "MI_DMA_CTRL",
        "offset": "0x1520",
        "size": "32",
        "reset": "0x00000000",
        "description": "DMA control register\nNote: The dma_ready \ninterrupt is raised as usual, but the dma_frame_end \ninterrupt will not be generated until v_end has been \nenabled again. \n\n9 dma_continuous_en Enables continuous mode. If set the same frame is \nread back over and over. A start pulse on dma_start is \nneeded only for the first time. To stop continuous mode \nreset this bit (takes effect after the next frame end) or \nexecute a soft reset. This bit is intended to be used in \nconjunction with the Superimpose feature. \n\n8 dma_byte_swap Enables change of DMA byte order of the 32 bit \n\ninput word at read port \n1: byte order is mirrored but the bit order within one \n\nbyte doesn\u201ft change \n\n0: no byte mirroring \n\n7:6 dma_inout_format Selects input/output format of \n\nDMA picture. 11: YCbCr 4:4:4 \n\n10: YCbCr 4:2:2 \n\n01: YCbCr 4:2:0 \n\n00: YCbCr 4:0:0 \n\n5:4 dma_read_format Defines how YCbCr picture data is read from \n\nmemory. 00: planar \n01: semi planar, for YCbCr 4:2:x \n10: interleaved (combined), for YCbCr 4:2:2 and RGB \n\nonly 11: reserved \n\n3:2 dma_burst_len_chrom Burst length for Cb or Cr data affecting DMA \n\nread port. 00: 4-beat bursts \n\n01: 8-beat bursts \n\n10: 16-beat bursts \n11: reserved \nIgnored if 8- or 16-beat bursts are not supported. \n\nDMA control register Reset value: 0000'0000H \n \n\nAddress: ISP_MI_BASE + 0120H Mode : rw \n\nBit\n\ns \n\nName Description \n\n1:0 dma_burst_len_lum Burst length for Y data affecting DMA read port. \n\n00: 4-beat bursts \n\n01: 8-beat bursts \n10: 16-beat bursts \n\n11: reserved \n\nIgnored if 8- or 16-beat bursts are not supported. \n\n \n"
      },
      {
        "name": "MI_DMA_START",
        "offset": "0x1524",
        "size": "32",
        "reset": "0x00000000",
        "description": "DMA start register"
      },
      {
        "name": "MI_DMA_STATUS",
        "offset": "0x1528",
        "size": "32",
        "reset": "0x00000000",
        "description": "DMA status register"
      },
      {
        "name": "MI_PIXEL_CNT",
        "offset": "0x152c",
        "size": "32",
        "reset": "0x00000000",
        "description": "Counter value for defect pixel list"
      },
      {
        "name": "MI_MP_Y_BASE_AD_INIT2",
        "offset": "0x1530",
        "size": "32",
        "reset": "0x00000000",
        "description": "Base address 2 (ping pong) for main picture Y component, \n\nJPEG or raw data\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \nregister description for details. \n\nRefer also to MI_MP_Y_BASE_AD_INIT with respect to the burst alignment restriction for \nAXI. \n\n \n"
      },
      {
        "name": "MI_MP_CB_BASE_AD_INIT2",
        "offset": "0x1534",
        "size": "32",
        "reset": "0x00000000",
        "description": "Base address 2 (pingpong) for main picture Cb component\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \nregister description for details. \n\nRefer also to MI_MP_Y_BASE_AD_INIT with respect to the burst alignment restriction for \nAXI. \n\n \n"
      },
      {
        "name": "MI_MP_CR_BASE_AD_INIT2",
        "offset": "0x1538",
        "size": "32",
        "reset": "0x00000000",
        "description": "Base address 2 (pingpong) for main picture Cr component ring buffer\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \nregister description for details. \n\nRefer also to MI_MP_Y_BASE_AD_INIT with respect to the burst alignment restriction for \nAXI. \n\n \n"
      },
      {
        "name": "MI_SP_Y_BASE_AD_INIT2",
        "offset": "0x153c",
        "size": "32",
        "reset": "0x00000000",
        "description": "Base address 2 (ping pong) for self picture Y component\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \nregister description for details. \n\nRefer also to MI_MP_Y_BASE_AD_INIT with respect to the burst alignment restriction for \nAXI. \n\n \n"
      },
      {
        "name": "MI_SP_CB_BASE_AD_INIT2",
        "offset": "0x1540",
        "size": "32",
        "reset": "0x00000000",
        "description": "Base address 2 (pingpong) for self picture Cb component\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \nregister description for details. \n\nRefer also to MI_MP_Y_BASE_AD_INIT with respect to the burst alignment restriction for \nAXI. \n\n \n"
      },
      {
        "name": "MI_SP_CR_BASE_AD_INIT2",
        "offset": "0x1544",
        "size": "32",
        "reset": "0x00000000",
        "description": "Base address 2 (pingpong) for self picture Cr component ring buffer\nNote: This register protects from non-aligned access. Refer to MI_MP_Y_BASE_AD_INIT \nregister description for details. \n\nRefer also to MI_MP_Y_BASE_AD_INIT with respect to the burst alignment restriction for \nAXI. \n\n"
      },
      {
        "name": "MI_XTD_FORMAT_CTRL",
        "offset": "0x1548",
        "size": "32",
        "reset": "0x00000000",
        "description": "Extended Storage Format Control for main, self and dma read path"
      },
      {
        "name": "MIPI_CTRL",
        "offset": "0x1c00",
        "size": "32",
        "reset": "0x00060000",
        "description": "global control register"
      },
      {
        "name": "MIPI_STATUS",
        "offset": "0x1c04",
        "size": "32",
        "reset": "0x00000000",
        "description": "global status register"
      },
      {
        "name": "MIPI_IMSC",
        "offset": "0x1c08",
        "size": "32",
        "reset": "0x00000000",
        "description": "Interrupt mask"
      },
      {
        "name": "MIPI_RIS",
        "offset": "0x1c0c",
        "size": "32",
        "reset": "0x00000000",
        "description": "Raw interrupt status"
      },
      {
        "name": "MIPI_MIS",
        "offset": "0x1c10",
        "size": "32",
        "reset": "0x00000000",
        "description": "Masked interrupt status"
      },
      {
        "name": "MIPI_ICR",
        "offset": "0x1c14",
        "size": "32",
        "reset": "0x00000000",
        "description": "Interrupt clear register\nNote: clears corresponding bits in MIPI_RIS register \n\n \n"
      },
      {
        "name": "MIPI_ISR",
        "offset": "0x1c18",
        "size": "32",
        "reset": "0x00000000",
        "description": "Interrupt set register\nNote: sets corresponding bits in MIPI_RIS register \n\n \n\n"
      },
      {
        "name": "MIPI_CUR_DATA_ID",
        "offset": "0x1c1c",
        "size": "32",
        "reset": "0x00000000",
        "description": "Current Data Identifier"
      },
      {
        "name": "MIPI_IMG_DATA_SEL",
        "offset": "0x1c20",
        "size": "32",
        "reset": "0x00000000",
        "description": "Image Data Selector"
      },
      {
        "name": "MIPI_ADD_DATA_SEL_1",
        "offset": "0x1c24",
        "size": "32",
        "reset": "0x000000FF",
        "description": "Additional Data Selector 1"
      },
      {
        "name": "MIPI_ADD_DATA_SEL_2",
        "offset": "0x1c28",
        "size": "32",
        "reset": "0x000000FF",
        "description": "Additional Data Selector 2"
      },
      {
        "name": "MIPI_ADD_DATA_SEL_3",
        "offset": "0x1c2c",
        "size": "32",
        "reset": "0x000000FF",
        "description": "Additional Data Selector 3"
      },
      {
        "name": "MIPI_ADD_DATA_SEL_4",
        "offset": "0x1c30",
        "size": "32",
        "reset": "0x000000FF",
        "description": "Additional Data Selector 4"
      },
      {
        "name": "MIPI_ADD_DATA_FIFO",
        "offset": "0x1c34",
        "size": "32",
        "reset": "0x00000000",
        "description": "Additional Data Fifo"
      },
      {
        "name": "MIPI_ADD_DATA_FILL_LEVEL",
        "offset": "0x1c38",
        "size": "32",
        "reset": "0x00000000",
        "description": "Additional Data FIFO Fill Level"
      },
      {
        "name": "MIPI_COMPRESSED_MODE",
        "offset": "0x1c3c",
        "size": "32",
        "reset": "0x00000000",
        "description": "controls processing of compressed raw data types\nNote: This register is only available in MIPI interface version 2 of ISP \n\n \n\n \n"
      },
      {
        "name": "MIPI_FRAME",
        "offset": "0x1c40",
        "size": "32",
        "reset": "0x00000000",
        "description": "frame number from frame start and frame end short packets\nNote: This register is only available in MIPI interface version 2 of ISP \n\n"
      },
      {
        "name": "MIPI_GEN_SHORT_DT",
        "offset": "0x1c44",
        "size": "32",
        "reset": "0x00000000",
        "description": "data type flags for received generic short packets\nNote: This register is only available in MIPI interface version 2 of ISP \n\n \n"
      },
      {
        "name": "MIPI_GEN_SHORT_8_9",
        "offset": "0x1c48",
        "size": "32",
        "reset": "0x00000000",
        "description": "data field for generic short packets of data type 0x8 and 0x9\nNote: This register is only available in MIPI interface version 2 of ISP \n\n"
      },
      {
        "name": "MIPI_GEN_SHORT_A_B",
        "offset": "0x1c4c",
        "size": "32",
        "reset": "0x00000000",
        "description": "data field for generic short packets of data type 0xA and 0xB\nNote: This register is only available in MIPI interface version 2 of ISP \n\n \n"
      },
      {
        "name": "MIPI_GEN_SHORT_C_D",
        "offset": "0x1c50",
        "size": "32",
        "reset": "0x00000000",
        "description": "data field for generic short packets of data type 0xC and 0xD\nNote: This register is only available in MIPI interface version 2 of ISP \n\n \n\n"
      },
      {
        "name": "MIPI_GEN_SHORT_E_F",
        "offset": "0x1c54",
        "size": "32",
        "reset": "0x00000000",
        "description": "data field for generic short packets of data type 0xE and 0xF\nNote: This register is only available in MIPI interface version 2 of ISP \n\n \n\n \n\n \n\n \n\n \n\n \n \n\nThis is the control register for AF measurement unit Reset value: 0000'0000H \n \n\nAddress: ISP_AFM_BASE + 0000H Mode : rw \n\nBit\n\ns \n\nName Description \n\n31:\n\n1 \n\n--- unused \n\n0 afm_en AF measurement enable \n\n0: AF measurement is \n\ndisabled 1: AF \n\nmeasurement is enabled \n\nWriting a 1 to this register starts a new measurement \n\nand resets the afm_fin (measurement finished) interrupt \n\nto 0. \n\nAs long as the afm_en is 1, the AFM unit \n"
      },
      {
        "name": "ISP_AFM_LT_A",
        "offset": "0x2004",
        "size": "32",
        "reset": "0x00000000",
        "description": "Top Left corner of measure window A"
      },
      {
        "name": "ISP_AFM_RB_A",
        "offset": "0x2008",
        "size": "32",
        "reset": "0x00000000",
        "description": "Bottom right corner of measure window A"
      },
      {
        "name": "ISP_AFM_LT_B",
        "offset": "0x200c",
        "size": "32",
        "reset": "0x00000000",
        "description": "Top left corner of measure window B"
      },
      {
        "name": "ISP_AFM_RB_B",
        "offset": "0x2010",
        "size": "32",
        "reset": "0x00000000",
        "description": "Bottom right corner of measure window B"
      },
      {
        "name": "ISP_AFM_LT_C",
        "offset": "0x2014",
        "size": "32",
        "reset": "0x00000000",
        "description": "Top left corner of measure window C"
      },
      {
        "name": "ISP_AFM_RB_C",
        "offset": "0x2018",
        "size": "32",
        "reset": "0x00000000",
        "description": "Bottom right corner of measure window C"
      },
      {
        "name": "ISP_AFM_THRES",
        "offset": "0x201c",
        "size": "32",
        "reset": "0x00000000",
        "description": "Threshold register"
      },
      {
        "name": "ISP_AFM_VAR_SHIFT",
        "offset": "0x2020",
        "size": "32",
        "reset": "0x00000000",
        "description": "Variable shift register"
      },
      {
        "name": "ISP_AFM_SUM_A",
        "offset": "0x2024",
        "size": "32",
        "reset": "0x00000000",
        "description": "Sharpness Value Status Register of Window A"
      },
      {
        "name": "ISP_AFM_SUM_B",
        "offset": "0x2028",
        "size": "32",
        "reset": "0x00000000",
        "description": "Sharpness Value Status Register of Window B"
      },
      {
        "name": "ISP_AFM_SUM_C",
        "offset": "0x202c",
        "size": "32",
        "reset": "0x00000000",
        "description": "Sharpness Value Status Register of Window C"
      },
      {
        "name": "ISP_AFM_LUM_A",
        "offset": "0x2030",
        "size": "32",
        "reset": "0x00000000",
        "description": "Luminance Value Status Register of Window A"
      },
      {
        "name": "ISP_AFM_LUM_B",
        "offset": "0x2034",
        "size": "32",
        "reset": "0x00000000",
        "description": "Luminance Value Status Register of Window B"
      },
      {
        "name": "ISP_AFM_LUM_C",
        "offset": "0x2038",
        "size": "32",
        "reset": "0x00000000",
        "description": "Luminance Value Status Register of Window C"
      },
      {
        "name": "ISP_LSC_CTRL",
        "offset": "0x2200",
        "size": "32",
        "reset": "0x00000000",
        "description": "Lens shade control"
      },
      {
        "name": "ISP_LSC_R_TABLE_ADDR",
        "offset": "0x2204",
        "size": "32",
        "reset": "0x00000000",
        "description": "Table RAM Address for red component\nNote: The table values are written into an internal RAM. The RAM Address is generated per \nauto- increment. The tables values will be read back by a continuous read access to the \ncorresponding register. The read address is auto-incremented for each read access to that \nregister and is reset to a specific value by a write access to the ISP_LSC_TABLE_ADDR \nregister. \n\nTable set 0 access by SW at table address 0...152. Table set 1 access at table address \n153...305. \n\n \n"
      },
      {
        "name": "ISP_LSC_GR_TABLE_ADDR",
        "offset": "0x2208",
        "size": "32",
        "reset": "0x00000000",
        "description": "Table RAM Address for green (red) component\nNote: MKOE tbc: Orignial register mode was rwh which is no longer supported with new \nversion of SIG-> rwhh Table set 0 access by SW at table address 0...153. Table set 1 access at \ntable address 154...307. \n\n \n"
      },
      {
        "name": "ISP_LSC_B_TABLE_ADDR",
        "offset": "0x220c",
        "size": "32",
        "reset": "0x00000000",
        "description": "Table RAM Address for blue component\nNote: MKOE tbc: Orignial register mode was rwh which is no longer supported with new \nversion of SIG-> rwhh Table set 0 access by SW at table address 0...153. Table set 1 access at \ntable address 154...307. \n\n \n"
      },
      {
        "name": "ISP_LSC_GB_TABLE_ADDR",
        "offset": "0x2210",
        "size": "32",
        "reset": "0x00000000",
        "description": "Table RAM Address for green (blue) component\nNote: MKOE tbc: Orignial register mode was rwh which is no longer supported with new \nversion of SIG-> rwhh Table set 0 access by SW at table address 0...153. Table set 1 access at \ntable address 154...307. \n\n \n"
      },
      {
        "name": "ISP_LSC_R_TABLE_DATA",
        "offset": "0x2214",
        "size": "32",
        "reset": "0x00000000",
        "description": "Sample table red\nNote: The programmed sample value is immediately written into the RAM. The RAM \naddress is generated per auto-increment. The parameter RAMs for Lens Shade Correction and \nBad Pixel Correction can only be programmed, if the RGB Bayer path is switched on via \nISP_CTRL register (ISP_MODE bits). \n\nTable set 0 access by SW at table address 0...153. Table set 1 access at table address \n\n154...307. "
      },
      {
        "name": "ISP_LSC_GR_TABLE_DATA",
        "offset": "0x2218",
        "size": "32",
        "reset": "0x00000000",
        "description": "Sample table green (red)\nNote: The programmed sample value is immediately written into the RAM. The RAM \naddress is generated per auto-increment. The parameter RAMs for Lens Shade Correction and \nBad Pixel Correction can only be programmed, if the RGB Bayer path is switched on via \nISP_CTRL register (ISP_MODE bits). \n\nTable set 0 access by SW at table address 0...153. Table set 1 access at table address \n\n154...307. \n\n"
      },
      {
        "name": "ISP_LSC_B_TABLE_DATA",
        "offset": "0x221c",
        "size": "32",
        "reset": "0x00000000",
        "description": "Sample table blue\nNote: The programmed sample value is immediately written into the RAM. The \n\nRAM address is generated per auto-increment. The parameter RAMs for Lens Shade \n\nCorrection and Bad Pixel Correction can only be programmed, if the RGB Bayer path is \n\nswitched on via ISP_CTRL register (ISP_MODE bits). \n\nTable set 0 access by SW at table address 0...153. Table set 1 access at table address \n\n154...307. \n\n"
      },
      {
        "name": "ISP_LSC_GB_TABLE_DATA",
        "offset": "0x2220",
        "size": "32",
        "reset": "0x00000000",
        "description": "Sample table green (blue)\nNote: The programmed sample value is immediately written into the RAM. The RAM \naddress is generated per auto-increment. The parameter RAMs for Lens Shade Correction and \nBad Pixel Correction can only be programmed, if the RGB Bayer path is switched on via \nISP_CTRL register (ISP_MODE bits).Table set 0 access by SW at table address 0...153. Table \nset 1 access at table address 154...307. \n\n \n\n \n\n"
      },
      {
        "name": "ISP_LSC_XGRAD_01",
        "offset": "0x2224",
        "size": "32",
        "reset": "0x00000000",
        "description": "Gradient table x"
      },
      {
        "name": "ISP_LSC_XGRAD_23",
        "offset": "0x2228",
        "size": "32",
        "reset": "0x00000000",
        "description": "Gradient table x"
      },
      {
        "name": "ISP_LSC_XGRAD_45",
        "offset": "0x222c",
        "size": "32",
        "reset": "0x00000000",
        "description": "Gradient table x"
      },
      {
        "name": "ISP_LSC_XGRAD_67",
        "offset": "0x2230",
        "size": "32",
        "reset": "0x00000000",
        "description": "Gradient table x"
      },
      {
        "name": "ISP_LSC_YGRAD_01",
        "offset": "0x2234",
        "size": "32",
        "reset": "0x00000000",
        "description": "Gradient table y"
      },
      {
        "name": "ISP_LSC_YGRAD_23",
        "offset": "0x2238",
        "size": "32",
        "reset": "0x00000000",
        "description": "Gradient table y"
      },
      {
        "name": "ISP_LSC_YGRAD_45",
        "offset": "0x223c",
        "size": "32",
        "reset": "0x00000000",
        "description": "Gradient table y"
      },
      {
        "name": "ISP_LSC_YGRAD_67",
        "offset": "0x2240",
        "size": "32",
        "reset": "0x00000000",
        "description": "Gradient table y"
      },
      {
        "name": "ISP_LSC_XSIZE_01",
        "offset": "0x2244",
        "size": "32",
        "reset": "0x00000000",
        "description": "Size table\nNote: The sector size in x-direction must be greater than 12 pixels. The sum of the sector \nsizes in x- direction must be \"picture width / 2\". The sum of the sector sizes in y-direction must \nbe \"picture height / 2\". No interrupt is generated if above requirements are not fulfilled and the \nbehaviour of the hardware cannot be predicted. \n\nThe sector size in x-direction was defined to be 9 bits for preliminary ISP versions. \n\n"
      },
      {
        "name": "ISP_LSC_XSIZE_23",
        "offset": "0x2248",
        "size": "32",
        "reset": "0x00000000",
        "description": "Size table\nNote: minimum sector size is 10 in x direction \n\n \n"
      },
      {
        "name": "ISP_LSC_XSIZE_45",
        "offset": "0x224c",
        "size": "32",
        "reset": "0x00000000",
        "description": "Size table\nNote: minimum sector size is 10 in x direction \n\n \n"
      },
      {
        "name": "ISP_LSC_XSIZE_67",
        "offset": "0x2250",
        "size": "32",
        "reset": "0x00000000",
        "description": "Size table\nNote: minimum sector size is 10 in x direction \n\n"
      },
      {
        "name": "ISP_LSC_YSIZE_01",
        "offset": "0x2254",
        "size": "32",
        "reset": "0x00000000",
        "description": "Size table\nNote: minimum sector size is 8 in y direction. \n\nThe sector size in y-direction was defined to be 9 bits for preliminary ISP versions. \n\n \n"
      },
      {
        "name": "ISP_LSC_YSIZE_23",
        "offset": "0x2258",
        "size": "32",
        "reset": "0x00000000",
        "description": "Size table\nNote: minimum sector size is 8 in y direction \n\n \n"
      },
      {
        "name": "ISP_LSC_YSIZE_45",
        "offset": "0x225c",
        "size": "32",
        "reset": "0x00000000",
        "description": "Size table\nNote: minimum sector size is 8 in y direction \n\n"
      },
      {
        "name": "ISP_LSC_YSIZE_67",
        "offset": "0x2260",
        "size": "32",
        "reset": "0x00000000",
        "description": "Size table\nNote: minimum sector size is 8 in y direction \n\n \n"
      },
      {
        "name": "ISP_LSC_TABLE_SEL",
        "offset": "0x2264",
        "size": "32",
        "reset": "0x00000000",
        "description": "Lens shade table set selection\nNote: Table set 0 access by SW at table address 0...153. Table set 1 access at table \naddress 154...307. For LSC4_MSZ the table set 1 is physically not available: \nISP_LSC_TABLE_SEL shall always be 0 for this HW configuration. \n\n \n"
      },
      {
        "name": "ISP_LSC_STATUS",
        "offset": "0x2268",
        "size": "32",
        "reset": "0x00000000",
        "description": "Lens shade status"
      },
      {
        "name": "ISP_IS_CTRL",
        "offset": "0x2300",
        "size": "32",
        "reset": "0x00000000",
        "description": "Image Stabilization Control Register"
      },
      {
        "name": "ISP_IS_RECENTER",
        "offset": "0x2304",
        "size": "32",
        "reset": "0x00000000",
        "description": "Recenter register"
      },
      {
        "name": "ISP_IS_H_OFFS",
        "offset": "0x2308",
        "size": "32",
        "reset": "0x00000000",
        "description": "Horizontal offset of output window"
      },
      {
        "name": "ISP_IS_V_OFFS",
        "offset": "0x230c",
        "size": "32",
        "reset": "0x00000000",
        "description": "Vertical offset of output window"
      },
      {
        "name": "ISP_IS_H_SIZE",
        "offset": "0x2310",
        "size": "32",
        "reset": "0x00001000",
        "description": "Output horizontal picture size"
      },
      {
        "name": "ISP_IS_V_SIZE",
        "offset": "0x2314",
        "size": "32",
        "reset": "0x00000C00",
        "description": "Output vertical picture size"
      },
      {
        "name": "ISP_IS_MAX_DX",
        "offset": "0x2318",
        "size": "32",
        "reset": "0x00000000",
        "description": "Maximum Horizontal Displacement"
      },
      {
        "name": "ISP_IS_MAX_DY",
        "offset": "0x231c",
        "size": "32",
        "reset": "0x00000000",
        "description": "Maximum Vertical Displacement"
      },
      {
        "name": "ISP_IS_DISPLACE",
        "offset": "0x2320",
        "size": "32",
        "reset": "0x00000000",
        "description": "Camera displacement"
      },
      {
        "name": "ISP_IS_H_OFFS_SHD",
        "offset": "0x2324",
        "size": "32",
        "reset": "0x00000000",
        "description": "current horizontal offset of output window (shadow register)"
      },
      {
        "name": "ISP_IS_V_OFFS_SHD",
        "offset": "0x2328",
        "size": "32",
        "reset": "0x00000000",
        "description": "current vertical offset of output window (shadow register)"
      },
      {
        "name": "ISP_IS_H_SIZE_SHD",
        "offset": "0x232c",
        "size": "32",
        "reset": "0x00000000",
        "description": "current output horizontal picture size (shadow register)"
      },
      {
        "name": "ISP_IS_V_SIZE_SHD",
        "offset": "0x2330",
        "size": "32",
        "reset": "0x00000000",
        "description": "current output vertical picture size (shadow register)"
      },
      {
        "name": "ISP_HIST_PROP",
        "offset": "0x2400",
        "size": "32",
        "reset": "0x00000000",
        "description": "Histogram properties\nNote: If RGB combined mode is used, then the 3 color components are sampled one \n\nafter the other. The software has to assure that all 3 color components are inside the \n\nselected window. \n\n \n"
      },
      {
        "name": "ISP_HIST_H_OFFS",
        "offset": "0x2404",
        "size": "32",
        "reset": "0x00000000",
        "description": "Histogram window horizontal offset for first window of \n\n25 sub- windows\nNote: histogram measurement is done in 25 sub-windows like the exposure \n\nmeasurement, if histogram version 3 is implemented. All earlier versions use just one \n\nwindow. \n \n"
      },
      {
        "name": "ISP_HIST_V_OFFS",
        "offset": "0x2408",
        "size": "32",
        "reset": "0x00000000",
        "description": "Histogram window vertical offset for first window of 25 sub-windows\nNote: histogram measurement is done in 25 sub-windows like the exposure \nmeasurement, if histogram version 3 is implemented. All earlier versions use just one window. \n\n \n\n"
      },
      {
        "name": "ISP_HIST_H_SIZE",
        "offset": "0x240c",
        "size": "32",
        "reset": "0x00000000",
        "description": "Horizontal (sub-)window size\nNote: hist_h_offset + hist_h_size x 5 should be less than or equal to the horizontal size \n\nof the picture, if histogram version 3 is implemented. Otherwise hist_h_size is the horizontal \n\nsize of the measurement window in pixels. \n\n \n"
      },
      {
        "name": "ISP_HIST_V_SIZE",
        "offset": "0x2410",
        "size": "32",
        "reset": "0x00000000",
        "description": "Vertical (sub-)window size\nNote: hist_v_offset + hist_v_size x 5 should be less than or equal to the vertical size \n\nof the picture, if histogram version 3 is implemented. Otherwise hist_v_size is the vertical \n\nsize of the measurement window in lines. \n\n \n"
      },
      {
        "name": "ISP_HIST_BIN",
        "offset": "0x2414",
        "size": "32",
        "reset": "0x00000000",
        "description": "histogram measurement result bin n (n=0..15)\nNote: MKOE tbc: Orignial register mode was rh which is no longer supported with new \nversion of SIG -> r \n\n \n\n"
      },
      {
        "name": "ISP_HIST_WEIGHT_00TO30",
        "offset": "0x2454",
        "size": "32",
        "reset": "0x10101010",
        "description": "Weighting factor for sub-windows\nNote: Allowed value range for weight factor is 0 to 16. The resulting weight is \nregister_value / 16. The host software has to limit the register value for each factor to 16. \nWeight registers are available, if histogram version 3 is implemented. \n\n \n"
      },
      {
        "name": "ISP_HIST_WEIGHT_40TO21",
        "offset": "0x2458",
        "size": "32",
        "reset": "0x10101010",
        "description": "Weighting factor for sub-windows\nNote: Allowed value range for weight factor is 0 to 16. The resulting weight is \n\nregister_value / 16. The host software has to limit the register value for each factor to 16. \n\nWeight registers are available, if histogram version 3 is implemented. \n\n \n\n"
      },
      {
        "name": "ISP_HIST_WEIGHT_31TO12",
        "offset": "0x245c",
        "size": "32",
        "reset": "0x10101010",
        "description": "Weighting factor for sub-windows\nNote: Allowed value range for weight factor is 0 to 16. The resulting weight is \nregister_value / 16. The host software has to limit the register value for each factor to 16. \nWeight registers are available, if histogram version 3 is implemented. \n\n \n"
      },
      {
        "name": "ISP_HIST_WEIGHT_22TO03",
        "offset": "0x2460",
        "size": "32",
        "reset": "0x10101010",
        "description": "Weighting factor for sub-windows\nNote: Allowed value range for weight factor is 0 to 16. The resulting weight is \nregister_value / 16. The host software has to limit the register value for each factor to 16. \nWeight registers are available, if histogram version 3 is implemented. \n\n \n\n"
      },
      {
        "name": "ISP_HIST_WEIGHT_13TO43",
        "offset": "0x2464",
        "size": "32",
        "reset": "0x10101010",
        "description": "Weighting factor for sub-windows\nNote: Allowed value range for weight factor is 0 to 16. The resulting weight is \nregister_value / 16. The host software has to limit the register value for each factor to 16. \nWeight registers are available, if histogram version 3 is implemented. \n\n \n"
      },
      {
        "name": "ISP_HIST_WEIGHT_04TO34",
        "offset": "0x2468",
        "size": "32",
        "reset": "0x10101010",
        "description": "Weighting factor for sub-windows\nNote: Allowed value range for weight factor is 0 to 16. The resulting weight is \nregister_value / 16. The host software has to limit the register value for each factor to 16. \nWeight registers are available, if histogram version 3 is implemented. \n\n"
      },
      {
        "name": "ISP_HIST_WEIGHT_44",
        "offset": "0x246c",
        "size": "32",
        "reset": "0x00000010",
        "description": "Weighting factor for sub-windows\nNote: Allowed value range for weight factor is 0 to 16. The resulting weight is \nregister_value / 16. The host software has to limit the register value for each factor to 16. \nWeight registers are available, if histogram version 3 is implemented. \n\n"
      },
      {
        "name": "ISP_FILT_MODE",
        "offset": "0x2500",
        "size": "32",
        "reset": "0x000004F2",
        "description": "mode control register for the filter block"
      },
      {
        "name": "ISP_FILT_THRESH_BL0",
        "offset": "0x2528",
        "size": "32",
        "reset": "0x0000000D",
        "description": "Blurring threshold 0\nNote: sum_grad is calculated by the texture detection unit as the sum of \n\nhorizontal and vertical gradients \n\n"
      },
      {
        "name": "ISP_FILT_THRESH_BL1",
        "offset": "0x252c",
        "size": "32",
        "reset": "0x00000005",
        "description": "Blurring threshold 1\nNote: sum_grad is calculated by the texture detection unit as the sum of horizontal and \nvertical gradients \n\n"
      },
      {
        "name": "ISP_FILT_THRESH_SH0",
        "offset": "0x2530",
        "size": "32",
        "reset": "0x0000001A",
        "description": "Sharpening threshold 0\nNote: sum_grad is calculated by the texture detection unit as the sum of horizontal and \nvertical gradients \n\n \n\n"
      },
      {
        "name": "ISP_FILT_THRESH_SH1",
        "offset": "0x2534",
        "size": "32",
        "reset": "0x0000002C",
        "description": "Sharpening threshold 1\nNote: sum_grad is calculated by the texture detection unit as the sum of horizontal and \n\nvertical gradients \n\n \n"
      },
      {
        "name": "ISP_FILT_LUM_WEIGHT",
        "offset": "0x2538",
        "size": "32",
        "reset": "0x00022040",
        "description": "Parameters for luminance weight function"
      },
      {
        "name": "ISP_FILT_FAC_SH1",
        "offset": "0x253c",
        "size": "32",
        "reset": "0x00000010",
        "description": "filter factor sharp1"
      },
      {
        "name": "ISP_FILT_FAC_SH0",
        "offset": "0x2540",
        "size": "32",
        "reset": "0x0000000C",
        "description": "filter factor sharp0"
      },
      {
        "name": "ISP_FILT_FAC_MID",
        "offset": "0x2544",
        "size": "32",
        "reset": "0x0000000A",
        "description": "filter factor middle"
      },
      {
        "name": "ISP_FILT_FAC_BL0",
        "offset": "0x2548",
        "size": "32",
        "reset": "0x00000006",
        "description": "Parameter for blur 0 filter"
      },
      {
        "name": "ISP_FILT_FAC_BL1",
        "offset": "0x254c",
        "size": "32",
        "reset": "0x00000002",
        "description": "Parameter for blur 1 filter"
      },
      {
        "name": "ISP_CAC_CTRL",
        "offset": "0x2580",
        "size": "32",
        "reset": "0x00000000",
        "description": "Control register for chromatic aberration correction\nNote: Clipping behavior can be controlled by clip_mode bits. If no clipping occurs, because \ndisplacement is below the maximum correctable displacement, then it does not matter which \nmode is selected. \n\n \n"
      },
      {
        "name": "ISP_CAC_COUNT_START",
        "offset": "0x2584",
        "size": "32",
        "reset": "0x10001000",
        "description": "Preload values for CAC pixel and line counter\nNote: Reset value is valid for 8192 x 8192 image resolution with centered chromatic \naberration (no offset from image center). \n\n \n"
      },
      {
        "name": "ISP_CAC_A",
        "offset": "0x2588",
        "size": "32",
        "reset": "0x00000000",
        "description": "Linear Parameters for radial shift calculation"
      },
      {
        "name": "ISP_CAC_B",
        "offset": "0x258c",
        "size": "32",
        "reset": "0x00000000",
        "description": "Square Parameters for radial shift calculation"
      },
      {
        "name": "ISP_CAC_C",
        "offset": "0x2590",
        "size": "32",
        "reset": "0x00000000",
        "description": "Cubical Parameters for radial shift calculation"
      },
      {
        "name": "ISP_CAC_X_NORM",
        "offset": "0x2594",
        "size": "32",
        "reset": "0x00080010",
        "description": "Normalization parameters for calculation of image \n\ncoordinate x_d relative to optical center\nNote: These values need to be programmed according to the image resolution and the \ncenter offset of the chromatic aberration. \n\nThe parameters are necessary to avoid high gate count of the CAC hardware block. The \nreset value is valid for an image resolution of 2600 x 1950 and center offset 0. \n\n \n"
      },
      {
        "name": "ISP_CAC_Y_NORM",
        "offset": "0x2598",
        "size": "32",
        "reset": "0x00080010",
        "description": "Normalization parameters for calculation of image \n\ncoordinate y_d relative to optical center\nNote: These values need to be programmed according to the image resolution and the \ncenter offset of the chromatic aberration. \n\nThe parameters are necessary to avoid high gate count of the CAC hardware block. The \n\nreset value is valid for an image resolution of 2600 x 1950 and center offset 0. \n\n \n"
      },
      {
        "name": "ISP_EXP_CTRL",
        "offset": "0x2600",
        "size": "32",
        "reset": "0x00000000",
        "description": "Exposure control"
      },
      {
        "name": "ISP_EXP_H_OFFSET",
        "offset": "0x2604",
        "size": "32",
        "reset": "0x00000000",
        "description": "Horizontal offset for first block"
      },
      {
        "name": "ISP_EXP_V_OFFSET",
        "offset": "0x2608",
        "size": "32",
        "reset": "0x00000000",
        "description": "Vertical offset for first block"
      },
      {
        "name": "ISP_EXP_H_SIZE",
        "offset": "0x260c",
        "size": "32",
        "reset": "0x00000000",
        "description": "Horizontal size of one block\nNote: exp_h_size x 5 must be less (not equal) than the horizontal size of the picture \n\n \n"
      },
      {
        "name": "ISP_EXP_V_SIZE",
        "offset": "0x2610",
        "size": "32",
        "reset": "0x00000000",
        "description": "Vertical size of one block\nNote: The vertical size must be set in a way that after the last measurement window at \n\nleast two lines of the image will follow. In addition only even values for vertical size are \n\nallowed (vertical size must be a multiple of 2). \n\n"
      },
      {
        "name": "ISP_EXP_MEAN_00",
        "offset": "0x2614",
        "size": "32",
        "reset": "0x00000000",
        "description": "Mean luminance value of block 00"
      },
      {
        "name": "ISP_EXP_MEAN_10",
        "offset": "0x2618",
        "size": "32",
        "reset": "0x00000000",
        "description": "Mean luminance value of block 10"
      },
      {
        "name": "ISP_EXP_MEAN_20",
        "offset": "0x261c",
        "size": "32",
        "reset": "0x00000000",
        "description": "Mean luminance value of block 20"
      },
      {
        "name": "ISP_EXP_MEAN_30",
        "offset": "0x2620",
        "size": "32",
        "reset": "0x00000000",
        "description": "Mean luminance value of block 30"
      },
      {
        "name": "ISP_EXP_MEAN_40",
        "offset": "0x2624",
        "size": "32",
        "reset": "0x00000000",
        "description": "Mean luminance value of block 40"
      },
      {
        "name": "ISP_EXP_MEAN_01",
        "offset": "0x2628",
        "size": "32",
        "reset": "0x00000000",
        "description": "Mean luminance value of block 01"
      },
      {
        "name": "ISP_EXP_MEAN_11",
        "offset": "0x262c",
        "size": "32",
        "reset": "0x00000000",
        "description": "Mean luminance value of block 11"
      },
      {
        "name": "ISP_EXP_MEAN_21",
        "offset": "0x2630",
        "size": "32",
        "reset": "0x00000000",
        "description": "Mean luminance value of block 21"
      },
      {
        "name": "ISP_EXP_MEAN_31",
        "offset": "0x2634",
        "size": "32",
        "reset": "0x00000000",
        "description": "Mean luminance value of block 31"
      },
      {
        "name": "ISP_EXP_MEAN_41",
        "offset": "0x2638",
        "size": "32",
        "reset": "0x00000000",
        "description": "Mean luminance value of block 41"
      },
      {
        "name": "ISP_EXP_MEAN_02",
        "offset": "0x263c",
        "size": "32",
        "reset": "0x00000000",
        "description": "Mean luminance value of block 02"
      },
      {
        "name": "ISP_EXP_MEAN_12",
        "offset": "0x2640",
        "size": "32",
        "reset": "0x00000000",
        "description": "Mean luminance value of block 12"
      },
      {
        "name": "ISP_EXP_MEAN_22",
        "offset": "0x2644",
        "size": "32",
        "reset": "0x00000000",
        "description": "Mean luminance value of block 22"
      },
      {
        "name": "ISP_EXP_MEAN_32",
        "offset": "0x2648",
        "size": "32",
        "reset": "0x00000000",
        "description": "Mean luminance value of block 32"
      },
      {
        "name": "ISP_EXP_MEAN_42",
        "offset": "0x264c",
        "size": "32",
        "reset": "0x00000000",
        "description": "Mean luminance value of block 42"
      },
      {
        "name": "ISP_EXP_MEAN_03",
        "offset": "0x2650",
        "size": "32",
        "reset": "0x00000000",
        "description": "Mean luminance value of block 03"
      },
      {
        "name": "ISP_EXP_MEAN_13",
        "offset": "0x2654",
        "size": "32",
        "reset": "0x00000000",
        "description": "Mean luminance value of block 13"
      },
      {
        "name": "ISP_EXP_MEAN_23",
        "offset": "0x2658",
        "size": "32",
        "reset": "0x00000000",
        "description": "Mean luminance value of block 23"
      },
      {
        "name": "ISP_EXP_MEAN_33",
        "offset": "0x265c",
        "size": "32",
        "reset": "0x00000000",
        "description": "Mean luminance value of block 33"
      },
      {
        "name": "ISP_EXP_MEAN_43",
        "offset": "0x2660",
        "size": "32",
        "reset": "0x00000000",
        "description": "Mean luminance value of block 43"
      },
      {
        "name": "ISP_EXP_MEAN_04",
        "offset": "0x2664",
        "size": "32",
        "reset": "0x00000000",
        "description": "Mean luminance value of block 04"
      },
      {
        "name": "ISP_EXP_MEAN_14",
        "offset": "0x2668",
        "size": "32",
        "reset": "0x00000000",
        "description": "Mean luminance value of block 14"
      },
      {
        "name": "ISP_EXP_MEAN_24",
        "offset": "0x266c",
        "size": "32",
        "reset": "0x00000000",
        "description": "Mean luminance value of block 24"
      },
      {
        "name": "ISP_EXP_MEAN_34",
        "offset": "0x2670",
        "size": "32",
        "reset": "0x00000000",
        "description": "Mean luminance value of block 34"
      },
      {
        "name": "ISP_EXP_MEAN_44",
        "offset": "0x2674",
        "size": "32",
        "reset": "0x00000000",
        "description": "Mean luminance value of block 44"
      },
      {
        "name": "ISP_BLS_CTRL",
        "offset": "0x2700",
        "size": "32",
        "reset": "0x00000000",
        "description": "global control register"
      },
      {
        "name": "ISP_BLS_SAMPLES",
        "offset": "0x2704",
        "size": "32",
        "reset": "0x00000000",
        "description": "samples register"
      },
      {
        "name": "ISP_BLS_H1_START",
        "offset": "0x2708",
        "size": "32",
        "reset": "0x00000000",
        "description": "window 1 horizontal start"
      },
      {
        "name": "ISP_BLS_H1_STOP",
        "offset": "0x270c",
        "size": "32",
        "reset": "0x00000000",
        "description": "window 1 horizontal stop"
      },
      {
        "name": "ISP_BLS_V1_START",
        "offset": "0x2710",
        "size": "32",
        "reset": "0x00000000",
        "description": "window 1 vertical start"
      },
      {
        "name": "ISP_BLS_V1_STOP",
        "offset": "0x2714",
        "size": "32",
        "reset": "0x00000000",
        "description": "window 1 vertical stop"
      },
      {
        "name": "ISP_BLS_H2_START",
        "offset": "0x2718",
        "size": "32",
        "reset": "0x00000000",
        "description": "window 2 horizontal start"
      },
      {
        "name": "ISP_BLS_H2_STOP",
        "offset": "0x271c",
        "size": "32",
        "reset": "0x00000000",
        "description": "window 2 horizontal stop"
      },
      {
        "name": "ISP_BLS_V2_START",
        "offset": "0x2720",
        "size": "32",
        "reset": "0x00000000",
        "description": "window 2 vertical start"
      },
      {
        "name": "ISP_BLS_V2_STOP",
        "offset": "0x2724",
        "size": "32",
        "reset": "0x00000000",
        "description": "window 2 vertical stop"
      },
      {
        "name": "ISP_BLS_A_FIXED",
        "offset": "0x2728",
        "size": "32",
        "reset": "0x00000000",
        "description": "fixed black level A"
      },
      {
        "name": "ISP_BLS_B_FIXED",
        "offset": "0x272c",
        "size": "32",
        "reset": "0x00000000",
        "description": "fixed black level B"
      },
      {
        "name": "ISP_BLS_C_FIXED",
        "offset": "0x2730",
        "size": "32",
        "reset": "0x00000000",
        "description": "fixed black level C"
      },
      {
        "name": "ISP_BLS_D_FIXED",
        "offset": "0x2734",
        "size": "32",
        "reset": "0x00000000",
        "description": "fixed black level D"
      },
      {
        "name": "ISP_BLS_A_MEASURED",
        "offset": "0x2738",
        "size": "32",
        "reset": "0x00000000",
        "description": "measured black level A"
      },
      {
        "name": "ISP_BLS_B_MEASURED",
        "offset": "0x273c",
        "size": "32",
        "reset": "0x00000000",
        "description": "measured black level B"
      },
      {
        "name": "ISP_BLS_C_MEASURED",
        "offset": "0x2740",
        "size": "32",
        "reset": "0x00000000",
        "description": "measured black level C"
      },
      {
        "name": "ISP_BLS_D_MEASURED",
        "offset": "0x2744",
        "size": "32",
        "reset": "0x00000000",
        "description": "measured black level D"
      },
      {
        "name": "ISP_DPF_MODE",
        "offset": "0x2800",
        "size": "32",
        "reset": "0x00000000",
        "description": "Mode control for Denoising Pre-Filter block"
      },
      {
        "name": "ISP_DPF_STRENGTH_R",
        "offset": "0x2804",
        "size": "32",
        "reset": "0x00000040",
        "description": "filter strength of the RED filter"
      },
      {
        "name": "ISP_DPF_STRENGTH_G",
        "offset": "0x2808",
        "size": "32",
        "reset": "0x00000040",
        "description": "filter strength of the GREEN filter"
      },
      {
        "name": "ISP_DPF_STRENGTH_B",
        "offset": "0x280c",
        "size": "32",
        "reset": "0x00000040",
        "description": "filter strength of the BLUE filter"
      },
      {
        "name": "ISP_DPF_S_WEIGHT_G_1_4",
        "offset": "0x2810",
        "size": "32",
        "reset": "0x10101010",
        "description": "Spatial Weights green channel 1 2 3 4\nNote: The value zero (0/16) disables the filter tap \n\n \n"
      },
      {
        "name": "ISP_DPF_S_WEIGHT_G_5_6",
        "offset": "0x2814",
        "size": "32",
        "reset": "0x00001010",
        "description": "Spatial Weights green channel 5 6\nNote: The value zero (0/16) disables the filter tap. \n\n"
      },
      {
        "name": "ISP_DPF_S_WEIGHT_RB_1_4",
        "offset": "0x2818",
        "size": "32",
        "reset": "0x10101010",
        "description": "Spatial Weights red/blue channels 1 2 3 4\nNote: The value zero (0/16) disables the filter tap. \n\n \n"
      },
      {
        "name": "ISP_DPF_S_WEIGHT_RB_5_6",
        "offset": "0x281c",
        "size": "32",
        "reset": "0x00001010",
        "description": "Spatial Weights red/blue channels 5 6\nNote: The value zero (0/16) disables the filter tap. \n\n \n"
      },
      {
        "name": "ISP_DPF_NLL_COEFF",
        "offset": "0x2820",
        "size": "32",
        "reset": "0x000003FF",
        "description": "Noise Level Lookup Coefficient n (n=0..16)"
      },
      {
        "name": "ISP_DPF_NF_GAIN_R",
        "offset": "0x2864",
        "size": "32",
        "reset": "0x00000100",
        "description": "noise function gain for red pixels"
      },
      {
        "name": "ISP_DPF_NF_GAIN_GR",
        "offset": "0x2868",
        "size": "32",
        "reset": "0x00000100",
        "description": "noise function gain for green in red pixels"
      },
      {
        "name": "ISP_DPF_NF_GAIN_GB",
        "offset": "0x286c",
        "size": "32",
        "reset": "0x00000100",
        "description": "noise function gain for green in blue pixels"
      },
      {
        "name": "ISP_DPF_NF_GAIN_B",
        "offset": "0x2870",
        "size": "32",
        "reset": "0x00000100",
        "description": "noise function gain for blue pixels"
      },
      {
        "name": "ISP_DPCC_MODE",
        "offset": "0x2900",
        "size": "32",
        "reset": "0x00000004",
        "description": "Mode control for DPCC detection unit"
      },
      {
        "name": "ISP_DPCC_OUTPUT_MODE",
        "offset": "0x2904",
        "size": "32",
        "reset": "0x00000000",
        "description": "Interpolation mode for correction unit"
      },
      {
        "name": "ISP_DPCC_SET_USE",
        "offset": "0x2908",
        "size": "32",
        "reset": "0x00000001",
        "description": "DPCC methods set usage for detection\nNote: methods sets can be used in parallel for each stage and the result is the logical OR \n\nof all selected sets \n\n \n"
      },
      {
        "name": "ISP_DPCC_METHODS_SET_1",
        "offset": "0x290c",
        "size": "32",
        "reset": "0x00001D1D",
        "description": "Methods enable bits for SET_1\nNote: different methods can be used in parallel, the result is the logical AND of all selected \n\nmethods \n \n"
      },
      {
        "name": "ISP_DPCC_METHODS_SET_2",
        "offset": "0x2910",
        "size": "32",
        "reset": "0x00000000",
        "description": "Methods enable bits for SET_2\nNote: different methods can be used in parallel, the result is the logical AND of all selected \n\nmethods \n \n"
      },
      {
        "name": "ISP_DPCC_METHODS_SET_3",
        "offset": "0x2914",
        "size": "32",
        "reset": "0x00000000",
        "description": "Methods enable bits for SET_3\nNote: different methods can be used in parallel, the result is the logical AND of all selected \n\nmethods \n \n"
      },
      {
        "name": "ISP_DPCC_LINE_THRESH_1",
        "offset": "0x2918",
        "size": "32",
        "reset": "0x00000000",
        "description": "Line threshold SET_1\nNote: all values are unsigned integer \n\n \n"
      },
      {
        "name": "ISP_DPCC_LINE_MAD_FAC_1",
        "offset": "0x291c",
        "size": "32",
        "reset": "0x00000000",
        "description": "Mean Absolute Difference (MAD) factor for Line check set 1\nNote: all values are unsigned integer \n\n"
      },
      {
        "name": "ISP_DPCC_PG_FAC_1",
        "offset": "0x2920",
        "size": "32",
        "reset": "0x00000000",
        "description": "Peak gradient factor for set 1\nNote: all values are unsigned integer \n\n \n"
      },
      {
        "name": "ISP_DPCC_RND_THRESH_1",
        "offset": "0x2924",
        "size": "32",
        "reset": "0x00000000",
        "description": "Rank Neighbor Difference threshold for set 1\nNote: all values are unsigned integer \n\n \n"
      },
      {
        "name": "ISP_DPCC_RG_FAC_1",
        "offset": "0x2928",
        "size": "32",
        "reset": "0x00000000",
        "description": "Rank gradient factor for set 1\nNote: all values are unsigned integer \n\n"
      },
      {
        "name": "ISP_DPCC_LINE_THRESH_2",
        "offset": "0x292c",
        "size": "32",
        "reset": "0x00000000",
        "description": "Line threshold set 2\nNote: all values are unsigned integer \n\n \n"
      },
      {
        "name": "ISP_DPCC_LINE_MAD_FAC_2",
        "offset": "0x2930",
        "size": "32",
        "reset": "0x00000000",
        "description": "Mean Absolute Difference (MAD) factor for Line check set 2\nNote: all values are unsigned integer \n\n \n"
      },
      {
        "name": "ISP_DPCC_PG_FAC_2",
        "offset": "0x2934",
        "size": "32",
        "reset": "0x00000000",
        "description": "Peak gradient factor for set 2\nNote: all values are unsigned integer \n\n"
      },
      {
        "name": "ISP_DPCC_RND_THRESH_2",
        "offset": "0x2938",
        "size": "32",
        "reset": "0x00000000",
        "description": "Rank Neighbor Difference threshold for set 2\nNote: all values are unsigned integer \n\n \n"
      },
      {
        "name": "ISP_DPCC_RG_FAC_2",
        "offset": "0x293c",
        "size": "32",
        "reset": "0x00000000",
        "description": "Rank gradient factor for set 2\nNote: all values are unsigned integer \n\n \n"
      },
      {
        "name": "ISP_DPCC_LINE_THRESH_3",
        "offset": "0x2940",
        "size": "32",
        "reset": "0x00000000",
        "description": "Line threshold set 3\nNote: all values are unsigned integer \n\n"
      },
      {
        "name": "ISP_DPCC_LINE_MAD_FAC_3",
        "offset": "0x2944",
        "size": "32",
        "reset": "0x00000000",
        "description": "Mean Absolute Difference (MAD) factor for Line check set 3\nNote: all values are unsigned integer \n\n \n"
      },
      {
        "name": "ISP_DPCC_PG_FAC_3",
        "offset": "0x2948",
        "size": "32",
        "reset": "0x00000000",
        "description": "Peak gradient factor for set 3\nNote: all values are unsigned integer \n\n \n"
      },
      {
        "name": "ISP_DPCC_RND_THRESH_3",
        "offset": "0x294c",
        "size": "32",
        "reset": "0x00000000",
        "description": "Rank Neighbor Difference threshold for set 3\nNote: all values are unsigned integer \n\n"
      },
      {
        "name": "ISP_DPCC_RG_FAC_3",
        "offset": "0x2950",
        "size": "32",
        "reset": "0x00000000",
        "description": "Rank gradient factor for set 3\nNote: all values are unsigned integer \n\n \n"
      },
      {
        "name": "ISP_DPCC_RO_LIMITS",
        "offset": "0x2954",
        "size": "32",
        "reset": "0x00000000",
        "description": "Rank Order Limits\nNote: all values are unsigned integer \n\n \n"
      },
      {
        "name": "ISP_DPCC_RND_OFFS",
        "offset": "0x2958",
        "size": "32",
        "reset": "0x00000000",
        "description": "Differential Rank Offsets for Rank Neighbor Difference\nNote: all values are unsigned integer \n\n \n"
      },
      {
        "name": "ISP_DPCC_BPT_CTRL",
        "offset": "0x295c",
        "size": "32",
        "reset": "0x00000000",
        "description": "bad pixel table settings\nNote: This register controls the behaviour of the table based bad pixel correction module. \nIt can be switched on and off independently of the DPCC detection and correction block. \nDifferent correction algorithms for the table based correction are available and are defined by \nthis register. The default setting after reset enables a correction algorithm with most accurate \ncorrelation to surrounding pixels. Detection for the table based correction can be configured \nindependently from the on-the-fly DPCC detection scheme. \n\n \n"
      },
      {
        "name": "ISP_DPCC_BPT_NUMBER",
        "offset": "0x2960",
        "size": "32",
        "reset": "0x00000000",
        "description": "Number of entries for bad pixel table (table based correction)\nNote: bit width of bp_number depends on size of BP RAM which is defined during chip \n\nsynthesis \n \n"
      },
      {
        "name": "ISP_DPCC_BPT_ADDR",
        "offset": "0x2964",
        "size": "32",
        "reset": "0x00000000",
        "description": "TABLE Start Address for table-based correction algorithm\nNote: MKOE tbc: Orignial register mode was rwh which is no longer supported with new \n\nversion of SIG \n\n-> rwhh \n\n"
      },
      {
        "name": "ISP_DPCC_BPT_DATA",
        "offset": "0x2968",
        "size": "32",
        "reset": "0x00000000",
        "description": "TABLE DATA register for read and write access of table RAM\nNote: MKOE tbc: Orignial register mode was rwh which is no longer supported with new \n\nversion of SIG \n\n-> rwhh \n\nThe programmed table value is immediately written into the RAM. The RAM address is \n\ngenerated per auto-increment. The parameter RAMs for Lens Shade Correction and Bad \n\nPixel Correction can only be programmed, if the RGB Bayer path is switched on via ISP_CTRL \n"
      },
      {
        "name": "ISP_WDR_CTRL",
        "offset": "0x2a00",
        "size": "32",
        "reset": "0x00000000",
        "description": "Control Bits for Wide Dynamic Range Unit"
      },
      {
        "name": "ISP_WDR_TONECURVE_1",
        "offset": "0x2a04",
        "size": "32",
        "reset": "0x44444444",
        "description": "Tone Curve sample points dYn definition (part 1)\nNote: The interval widths dYn are to be defined in a 2^(value+3) notation, where \n\n\"value\" has to be written to the register. So the steps would be \n\ndYn=0 -> 8 (2^3), dYn=1 -> 16 (2^4), dYn=2 \n\n-> 32 (2^5),... dYn=6 -> 512 (2^9), dYn=7 -> \n\n1024 (2^10). \n"
      },
      {
        "name": "ISP_WDR_TONECURVE_2",
        "offset": "0x2a08",
        "size": "32",
        "reset": "0x44444444",
        "description": "Tone Curve sample points dYn definition (part 2)\nNote: The interval widths dYn are to be defined in a 2^(value+3) notation, where \n\n\"value\" has to be written to the register. So the steps would be \n\ndYn=0 -> 8 (2^3), dYn=1 -> 16 (2^4), dYn=2 \n\n-> 32 (2^5),... dYn=6 -> 512 (2^9), dYn=7 -> \n\n1024 (2^10). \n"
      },
      {
        "name": "ISP_WDR_TONECURVE_3",
        "offset": "0x2a0c",
        "size": "32",
        "reset": "0x44444444",
        "description": "Tone Curve sample points dYn definition (part 3)\nNote: The interval widths dYn are to be defined in a 2^(value+3) notation, where \n\n\"value\" has to be written to the register. So the steps would be \n\ndYn=0 -> 8 (2^3), dYn=1 -> 16 (2^4), dYn=2 \n\n-> 32 (2^5),... dYn=6 -> 512 (2^9), dYn=7 -> \n\n1024 (2^10). \n"
      },
      {
        "name": "ISP_WDR_TONECURVE_4",
        "offset": "0x2a10",
        "size": "32",
        "reset": "0x44444444",
        "description": "Tone Curve sample points dYn definition (part 4)\nNote: The interval widths dYn are to be defined in a 2^(value+3) notation, where \"value\" \nhas to be written to the register. So the steps would be \n\ndYn=0 -> 8 (2^3), dYn=1 -> 16 (2^4), dYn=2 -> 32 (2^5),... dYn=6 -> 512 (2^9), \ndYn=7 -> 1024 (2^10). \n\n \n"
      },
      {
        "name": "ISP_WDR_TONECURVE_YM",
        "offset": "0x2a14",
        "size": "32",
        "reset": "0x00000000",
        "description": "Tonemapping curve coefficient Ym_ n (n=0..32)\nNote: The reset values define a linear curve which has the same effect as bypass. Reset \nvalues are: Ym_00 = 0x0000, Ym_01 = 0x0080, Ym_02 = 0x0100, Ym_03 = 0x0180, Ym_04 \n= 0x0200, \n\nYm_05 = 0x0280, Ym_06 = 0x0300, Ym_07 = 0x0380, Ym_08 = 0x0400, Ym_09 = \n0x0480, Ym_10 = 0x0500, Ym_11 = 0x0580, Ym_12 = 0x0600, Ym_13 = 0x0680, Ym_14 = \n0x0700, Ym_15 = 0x0780, Ym_16 = 0x0800, Ym_17 = 0x0880, Ym_18 = 0x0900, Ym_19 = \n0x0980, Ym_20 = 0x0A00, Ym_21 = 0x0A80, Ym_22 = 0x0B00, Ym_23 = 0x0B80, Ym_24 = \n0x0C00, Ym_25 = 0x0C80, Ym_26 = 0x0D00, Ym_27 = 0x0D80, Ym_28 = 0x0E00, Ym_29 = \n0x0E80, Ym_30 = 0x0F00, Ym_31 = 0x0F80, Ym_32 = 0x1000 \n\n \n\nData format: 13 bit unsigned \n \nRESTRICTION: each Y must be in the +2047/-2048 range compared to its predecessor (so \n\nthat the difference between successive Y values is 12-bit signed !) \n\n \n"
      },
      {
        "name": "ISP_WDR_OFFSET",
        "offset": "0x2a98",
        "size": "32",
        "reset": "0x00000000",
        "description": "Offset values for RGB path"
      },
      {
        "name": "ISP_WDR_DELTAMIN",
        "offset": "0x2a9c",
        "size": "32",
        "reset": "0x00100000",
        "description": "DeltaMin Threshold and Strength factor"
      },
      {
        "name": "ISP_WDR_TONECURVE_1_SHD",
        "offset": "0x2aa0",
        "size": "32",
        "reset": "0x44444444",
        "description": "Tone Curve sample points dYn definition shadow register (part 1)\nNote: see register ISP_WDR_TONECURVE_1. \n\n \n"
      },
      {
        "name": "ISP_WDR_TONECURVE_2_SHD",
        "offset": "0x2aa4",
        "size": "32",
        "reset": "0x44444444",
        "description": "Tone Curve sample points dYn definition shadow register (part 2)\nNote: see register ISP_WDR_TONECURVE_2. \n\n \n"
      },
      {
        "name": "ISP_WDR_TONECURVE_3_SHD",
        "offset": "0x2aa8",
        "size": "32",
        "reset": "0x44444444",
        "description": "Tone Curve sample points dYn definition shadow register (part 3)\nNote: see register ISP_WDR_TONECURVE_3. \n\n \n"
      },
      {
        "name": "ISP_WDR_TONECURVE_4_SHD",
        "offset": "0x2aac",
        "size": "32",
        "reset": "0x44444444",
        "description": "Tone Curve sample points dYn definition shadow register(part 4)\nNote: see register ISP_WDR_TONECURVE_4. \n\n \n"
      },
      {
        "name": "ISP_WDR_TONECURVE_YM_SHD",
        "offset": "0x2ab0",
        "size": "32",
        "reset": "0x00000000",
        "description": "Tonemapping curve coefficient shadow register n (n=0..32)\nNote: The reset values define a linear curve which has the same effect as bypass. Reset \nvalues are: Ym_00 = 0x0000, Ym_01 = 0x0080, Ym_02 = 0x0100, Ym_03 = 0x0180, Ym_04 \n= 0x0200, \n\nYm_05 = 0x0280, Ym_06 = 0x0300, Ym_07 = 0x0380, Ym_08 = 0x0400, Ym_09 = \n0x0480, Ym_10 = 0x0500, Ym_11 = 0x0580, Ym_12 = 0x0600, Ym_13 = 0x0680, Ym_14 = \n0x0700, Ym_15 = 0x0780, Ym_16 = 0x0800, Ym_17 = 0x0880, Ym_18 = 0x0900, Ym_19 = \n0x0980, Ym_20 = 0x0A00, Ym_21 = 0x0A80, Ym_22 = 0x0B00, Ym_23 = 0x0B80, Ym_24 = \n0x0C00, Ym_25 = 0x0C80, Ym_26 = 0x0D00, Ym_27 = 0x0D80, Ym_28 = 0x0E00, Ym_29 = \n0x0E80, Ym_30 = 0x0F00, Ym_31 = 0x0F80, Ym_32 = 0x1000 \n\n \nData format: 13 bit unsigned \n \n\nRESTRICTION: each Y must be in the +2047/-2048 range compared to its predecessor (so \nthat the difference between successive Y values is 12-bit signed !) \n\n \n"
      },
      {
        "name": "ISP_VSM_MODE",
        "offset": "0x2f00",
        "size": "32",
        "reset": "0x00000000",
        "description": "VS Measure Mode"
      },
      {
        "name": "ISP_VSM_H_OFFS",
        "offset": "0x2f04",
        "size": "32",
        "reset": "0x00000000",
        "description": "VSM window horizontal offset"
      },
      {
        "name": "ISP_VSM_V_OFFS",
        "offset": "0x2f08",
        "size": "32",
        "reset": "0x00000000",
        "description": "VSM window vertical offset"
      },
      {
        "name": "ISP_VSM_H_SIZE",
        "offset": "0x2f0c",
        "size": "32",
        "reset": "0x00000000",
        "description": "Horizontal measure window size\nNote: only even values are allowed: vsm_h_size[0] not writable and read returns 0. \n\n \n\n"
      },
      {
        "name": "ISP_VSM_V_SIZE",
        "offset": "0x2f10",
        "size": "32",
        "reset": "0x00000000",
        "description": "Vertical measure window size\nNote: only even values are allowed: vsm_v_size[0] not writable and read returns 0. \n\n \n\n"
      },
      {
        "name": "ISP_VSM_H_SEGMENTS",
        "offset": "0x2f14",
        "size": "32",
        "reset": "0x00000000",
        "description": "Iteration 1 horizontal segments\nNote: number of 1st iteration sample points = vsm_h_segments + 1 \n\n \n\n"
      },
      {
        "name": "ISP_VSM_V_SEGMENTS",
        "offset": "0x2f18",
        "size": "32",
        "reset": "0x00000000",
        "description": "Iteration 1 vertical segments\nNote: number of 1st iteration sample points = vsm_v_segments + 1 \n\n \n\n"
      },
      {
        "name": "ISP_VSM_DELTA_H",
        "offset": "0x2f1c",
        "size": "32",
        "reset": "0x00000000",
        "description": "estimated horizontal displacement"
      }
    ]
  }
]